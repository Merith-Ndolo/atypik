[{"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\usersAction.js":"3","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\postAction.js":"4","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\paramAction.js":"5","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\sectionAction.js":"6","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\index.js":"7","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\userAction.js":"8","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\UserIdConnect.js":"9","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\page_accueil\\globalStyles.js":"10","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\user.reducer.js":"11","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\users.reducer.js":"12","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\post.reducer.js":"13","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\error.reducer.js":"14","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\posts.reducres.js":"15","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\param.reducer.js":"16","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\section.reducer.js":"17","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\bestof.reducer.js":"18","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Routes\\index.js":"19","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Home.js":"20","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Profil_pro.js":"21","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Profil.js":"22","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Profil_admin.js":"23","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Bestof.js":"24","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Newpost.js":"25","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Favoris.js":"26","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Reservation.js":"27","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Post_pro.js":"28","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\HomePro.js":"29","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\page_accueil\\Accueil.js":"30","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Mes_reservations.js":"31","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Prisedevue.js":"32","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Gestion_clients.js":"33","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Gestion.js":"34","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Pub_attente.js":"35","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Parametres.js":"36","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\User_view.js":"37","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Gestion_pubs.js":"38","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Ajout_admin.js":"39","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Gestion_pro.js":"40","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\ListAdmin.js":"41","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Thread.js":"42","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\LeftNav.js":"43","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Trends.js":"44","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Utilitaires.js":"45","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadsFavoris.js":"46","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadsPro.js":"47","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadClient.js":"48","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\Index_pro.js":"49","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\Index_admin.js":"50","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\Card.js":"51","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\SearchForm.js":"52","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\NewPostForm.js":"53","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\ReservationForm.js":"54","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\Dropdown.js":"55","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\CardPrises.js":"56","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\NavBarPro.js":"57","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\NavBar.js":"58","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\DropdownPro.js":"59","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\Hero.js":"60","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\InfoSection.js":"61","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\Footer.js":"62","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Profil\\UpdateInfoProfil.js":"63","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\SliderData.js":"64","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\InfoData.js":"65","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\LeftNavAdmin.js":"66","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadAdmin.js":"67","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadVal.js":"68","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Parametre\\UpdateSection.js":"69","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Parametre\\SectionForm.js":"70","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Parametre\\UpdateParam.js":"71","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Parametre\\ParamForm.js":"72","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\index.js":"73","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignInProForm.js":"74","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignUpProForm.js":"75","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignInAdminForm.js":"76","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\LikeButton.js":"77","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\DeleteCard.js":"78","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\CardComments.js":"79","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\CardaddPic.js":"80","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\MsgData.js":"81","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\GoogleData.js":"82","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Profil\\UpdatePicture.js":"83","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\Button.js":"84","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\Logout.js":"85","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\MenuData.js":"86","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\CardAdmin.js":"87","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\GoogleMap\\Map.js":"88","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignInForm.js":"89","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignUpForm.js":"90","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\EditDeleteComment.js":"91","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Param_habitat.js":"92","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\index.js":"93","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\App.js":"94","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\usersAction.js":"95","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\sectionAction.js":"96","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\postAction.js":"97","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\paramAction.js":"98","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\index.js":"99","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\userAction.js":"100","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\UserIdConnect.js":"101","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\page_accueil\\globalStyles.js":"102","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\users.reducer.js":"103","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\posts.reducres.js":"104","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\error.reducer.js":"105","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\bestof.reducer.js":"106","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\user.reducer.js":"107","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\post.reducer.js":"108","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\param.reducer.js":"109","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\section.reducer.js":"110","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Routes\\index.js":"111","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Home.js":"112","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Profil.js":"113","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Profil_admin.js":"114","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Favoris.js":"115","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Profil_pro.js":"116","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Reservation.js":"117","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Newpost.js":"118","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Post_pro.js":"119","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Bestof.js":"120","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\HomePro.js":"121","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\page_accueil\\Accueil.js":"122","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Prisedevue.js":"123","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Mes_reservations.js":"124","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Gestion.js":"125","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Pub_attente.js":"126","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Gestion_clients.js":"127","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pro.js":"128","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Parametres.js":"129","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Param_habitat.js":"130","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\User_view.js":"131","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pubs.js":"132","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Ajout_admin.js":"133","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\ListAdmin.js":"134","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Thread.js":"135","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\LeftNav.js":"136","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Trends.js":"137","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Utilitaires.js":"138","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadsFavoris.js":"139","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadsPro.js":"140","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadClient.js":"141","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\Index_admin.js":"142","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\Index_pro.js":"143","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\SearchForm.js":"144","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\Card.js":"145","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\ReservationForm.js":"146","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\CardPrises.js":"147","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\NewPostForm.js":"148","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\NavBar.js":"149","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\DropdownPro.js":"150","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\Dropdown.js":"151","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\NavBarPro.js":"152","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\InfoSection.js":"153","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\Footer.js":"154","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\Hero.js":"155","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Profil\\UpdateInfoProfil.js":"156","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\SliderData.js":"157","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\InfoData.js":"158","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\LeftNavAdmin.js":"159","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadAdmin.js":"160","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadVal.js":"161","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Parametre\\UpdateSection.js":"162","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Parametre\\SectionForm.js":"163","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Parametre\\UpdateParam.js":"164","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Parametre\\ParamForm.js":"165","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\index.js":"166","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignInProForm.js":"167","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignInAdminForm.js":"168","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignUpProForm.js":"169","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\DeleteCard.js":"170","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\LikeButton.js":"171","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\MsgData.js":"172","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\CardComments.js":"173","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\CardaddPic.js":"174","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\Button.js":"175","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Profil\\UpdatePicture.js":"176","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\Logout.js":"177","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\MenuData.js":"178","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\GoogleData.js":"179","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\CardAdmin.js":"180","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\GoogleMap\\Map.js":"181","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignInForm.js":"182","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignUpForm.js":"183","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\EditDeleteComment.js":"184","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\index.js":"185","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\App.js":"186","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\usersAction.js":"187","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\postAction.js":"188","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\sectionAction.js":"189","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\paramAction.js":"190","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\index.js":"191","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\userAction.js":"192","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\UserIdConnect.js":"193","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\page_accueil\\globalStyles.js":"194","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\post.reducer.js":"195","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\user.reducer.js":"196","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\users.reducer.js":"197","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\error.reducer.js":"198","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\posts.reducres.js":"199","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\bestof.reducer.js":"200","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\param.reducer.js":"201","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\section.reducer.js":"202","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Routes\\index.js":"203","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Profil_pro.js":"204","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Home.js":"205","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Profil.js":"206","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Profil_admin.js":"207","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Favoris.js":"208","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Bestof.js":"209","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Reservation.js":"210","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Newpost.js":"211","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Post_pro.js":"212","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\page_accueil\\Accueil.js":"213","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Condtions.js":"214","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\HomePro.js":"215","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Prisedevue.js":"216","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Mes_reservations.js":"217","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\ForgotView.js":"218","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\ResetView.js":"219","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Gestion.js":"220","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Parametres.js":"221","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Gestion_clients.js":"222","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Gestion_pro.js":"223","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Pub_attente.js":"224","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Param_habitat.js":"225","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\User_view.js":"226","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Gestion_pubs.js":"227","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Ajout_admin.js":"228","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\ListAdmin.js":"229","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Thread.js":"230","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Trends.js":"231","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadsFavoris.js":"232","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadsPro.js":"233","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Utilitaires.js":"234","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\LeftNav.js":"235","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadClient.js":"236","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\NavBarPro.js":"237","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\DropdownPro.js":"238","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\Dropdown.js":"239","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\NavBar.js":"240","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\NavBarAdmin.js":"241","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\DropDownAdmin.js":"242","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\Button.js":"243","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\InfoSection.js":"244","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\Hero.js":"245","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\Footer.js":"246","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Profil\\UpdateInfoProfil.js":"247","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\Card.js":"248","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\SearchForm.js":"249","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\ReservationForm.js":"250","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\CardPrises.js":"251","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\NewPostForm.js":"252","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\InfoData.js":"253","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\SliderData.js":"254","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadAdmin.js":"255","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadVal.js":"256","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\LeftNavAdmin.js":"257","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Parametre\\UpdateSection.js":"258","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Parametre\\UpdateParam.js":"259","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Parametre\\SectionForm.js":"260","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Parametre\\ParamForm.js":"261","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\MenuData.js":"262","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\GoogleData.js":"263","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\MsgData.js":"264","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\CardaddPic.js":"265","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\CardComments.js":"266","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\DeleteCard.js":"267","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\LikeButton.js":"268","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Profil\\UpdatePicture.js":"269","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\CardAdmin.js":"270","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\GoogleMap\\Map.js":"271","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\EditDeleteComment.js":"272","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Modal\\Modal.js":"273","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Navbar.js":"274","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Forgot.js":"275","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\index.js":"276","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Index_admin.js":"277","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Index_pro.js":"278","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Logout.js":"279","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Reset.js":"280","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignInAdminForm.js":"281","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignInForm.js":"282","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignInProForm.js":"283","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignUpAdminForm.js":"284","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignUpForm.js":"285","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignUpProForm.js":"286"},{"size":1055,"mtime":1621795746000,"results":"287","hashOfConfig":"288"},{"size":966,"mtime":1621795746000,"results":"289","hashOfConfig":"288"},{"size":360,"mtime":1615397085872,"results":"290","hashOfConfig":"288"},{"size":9412,"mtime":1622359020487,"results":"291","hashOfConfig":"288"},{"size":2520,"mtime":1620381777014,"results":"292","hashOfConfig":"288"},{"size":2590,"mtime":1620386249491,"results":"293","hashOfConfig":"288"},{"size":567,"mtime":1617039866684,"results":"294","hashOfConfig":"288"},{"size":1665,"mtime":1620432502495,"results":"295","hashOfConfig":"288"},{"size":82,"mtime":1615396162619,"results":"296","hashOfConfig":"288"},{"size":324,"mtime":1615581775302,"results":"297","hashOfConfig":"288"},{"size":604,"mtime":1615395553396,"results":"298","hashOfConfig":"288"},{"size":261,"mtime":1615395603597,"results":"299","hashOfConfig":"288"},{"size":3274,"mtime":1619818900285,"results":"300","hashOfConfig":"288"},{"size":1085,"mtime":1617039900563,"results":"301","hashOfConfig":"288"},{"size":270,"mtime":1615396536261,"results":"302","hashOfConfig":"288"},{"size":799,"mtime":1617016027673,"results":"303","hashOfConfig":"288"},{"size":891,"mtime":1617039873333,"results":"304","hashOfConfig":"288"},{"size":263,"mtime":1615395411697,"results":"305","hashOfConfig":"288"},{"size":3292,"mtime":1622066405120,"results":"306","hashOfConfig":"288"},{"size":1512,"mtime":1617979250385,"results":"307","hashOfConfig":"288"},{"size":1652,"mtime":1621863972761,"results":"308","hashOfConfig":"288"},{"size":1549,"mtime":1621864035207,"results":"309","hashOfConfig":"288"},{"size":1542,"mtime":1617979409956,"results":"310","hashOfConfig":"288"},{"size":976,"mtime":1617979291121,"results":"311","hashOfConfig":"288"},{"size":622,"mtime":1617979355033,"results":"312","hashOfConfig":"288"},{"size":1116,"mtime":1617979311560,"results":"313","hashOfConfig":"288"},{"size":954,"mtime":1617979543970,"results":"314","hashOfConfig":"288"},{"size":857,"mtime":1617979374585,"results":"315","hashOfConfig":"288"},{"size":997,"mtime":1617979325290,"results":"316","hashOfConfig":"288"},{"size":2918,"mtime":1622266903452,"results":"317","hashOfConfig":"288"},{"size":781,"mtime":1617979343356,"results":"318","hashOfConfig":"288"},{"size":243,"mtime":1616757225592,"results":"319","hashOfConfig":"288"},{"size":5548,"mtime":1620430929830,"results":"320","hashOfConfig":"288"},{"size":16343,"mtime":1620383778319,"results":"321","hashOfConfig":"288"},{"size":1311,"mtime":1617912477690,"results":"322","hashOfConfig":"288"},{"size":2272,"mtime":1622359630567,"results":"323","hashOfConfig":"288"},{"size":3212,"mtime":1618419882162,"results":"324","hashOfConfig":"288"},{"size":1418,"mtime":1617912454899,"results":"325","hashOfConfig":"288"},{"size":7022,"mtime":1617912432708,"results":"326","hashOfConfig":"288"},{"size":6214,"mtime":1620431547653,"results":"327","hashOfConfig":"288"},{"size":4291,"mtime":1617912465299,"results":"328","hashOfConfig":"288"},{"size":1259,"mtime":1616760889958,"results":"329","hashOfConfig":"288"},{"size":1091,"mtime":1617882437640,"results":"330","hashOfConfig":"288"},{"size":2756,"mtime":1618185754252,"results":"331","hashOfConfig":"288"},{"size":1135,"mtime":1617611044376,"results":"332","hashOfConfig":"288"},{"size":1537,"mtime":1617880129026,"results":"333","hashOfConfig":"288"},{"size":1363,"mtime":1616364626822,"results":"334","hashOfConfig":"288"},{"size":1399,"mtime":1617633257901,"results":"335","hashOfConfig":"288"},{"size":1479,"mtime":1617979520112,"results":"336","hashOfConfig":"288"},{"size":299,"mtime":1615684182818,"results":"337","hashOfConfig":"288"},{"size":21932,"mtime":1622359326675,"results":"338","hashOfConfig":"288"},{"size":3096,"mtime":1620560714216,"results":"339","hashOfConfig":"288"},{"size":11882,"mtime":1620429756845,"results":"340","hashOfConfig":"288"},{"size":15554,"mtime":1622358860216,"results":"341","hashOfConfig":"288"},{"size":3075,"mtime":1622356964776,"results":"342","hashOfConfig":"288"},{"size":3788,"mtime":1622361250041,"results":"343","hashOfConfig":"288"},{"size":2971,"mtime":1619820438190,"results":"344","hashOfConfig":"288"},{"size":2987,"mtime":1619725066625,"results":"345","hashOfConfig":"288"},{"size":3070,"mtime":1617881905680,"results":"346","hashOfConfig":"288"},{"size":4984,"mtime":1622323771871,"results":"347","hashOfConfig":"288"},{"size":3099,"mtime":1622323810299,"results":"348","hashOfConfig":"288"},{"size":2924,"mtime":1620565926123,"results":"349","hashOfConfig":"288"},{"size":1933,"mtime":1617883076916,"results":"350","hashOfConfig":"288"},{"size":1777,"mtime":1616893866381,"results":"351","hashOfConfig":"288"},{"size":1165,"mtime":1616422198399,"results":"352","hashOfConfig":"288"},{"size":1583,"mtime":1617911606305,"results":"353","hashOfConfig":"288"},{"size":1214,"mtime":1615396301500,"results":"354","hashOfConfig":"288"},{"size":1278,"mtime":1616365882892,"results":"355","hashOfConfig":"288"},{"size":3922,"mtime":1620386477234,"results":"356","hashOfConfig":"288"},{"size":4426,"mtime":1620385722062,"results":"357","hashOfConfig":"288"},{"size":4376,"mtime":1620387424178,"results":"358","hashOfConfig":"288"},{"size":4486,"mtime":1620381199790,"results":"359","hashOfConfig":"288"},{"size":1329,"mtime":1617883138657,"results":"360","hashOfConfig":"288"},{"size":2500,"mtime":1616758934644,"results":"361","hashOfConfig":"288"},{"size":6784,"mtime":1617751320108,"results":"362","hashOfConfig":"288"},{"size":2492,"mtime":1618406729968,"results":"363","hashOfConfig":"288"},{"size":1482,"mtime":1615719219765,"results":"364","hashOfConfig":"288"},{"size":596,"mtime":1620473062134,"results":"365","hashOfConfig":"288"},{"size":2763,"mtime":1617882424911,"results":"366","hashOfConfig":"288"},{"size":2473,"mtime":1622267499862,"results":"367","hashOfConfig":"288"},{"size":1289,"mtime":1617724295422,"results":"368","hashOfConfig":"288"},{"size":6286,"mtime":1615769590366,"results":"369","hashOfConfig":"288"},{"size":1069,"mtime":1620432452670,"results":"370","hashOfConfig":"288"},{"size":779,"mtime":1619719191159,"results":"371","hashOfConfig":"288"},{"size":823,"mtime":1622359776754,"results":"372","hashOfConfig":"288"},{"size":503,"mtime":1620566279939,"results":"373","hashOfConfig":"288"},{"size":14591,"mtime":1620562376905,"results":"374","hashOfConfig":"288"},{"size":2300,"mtime":1616880765696,"results":"375","hashOfConfig":"288"},{"size":2612,"mtime":1622063934413,"results":"376","hashOfConfig":"288"},{"size":7102,"mtime":1617877594599,"results":"377","hashOfConfig":"288"},{"size":2090,"mtime":1615396131435,"results":"378","hashOfConfig":"288"},{"size":3985,"mtime":1619816491343,"results":"379","hashOfConfig":"288"},{"size":1055,"mtime":1621795746000,"results":"380","hashOfConfig":"381"},{"size":966,"mtime":1622404717733,"results":"382","hashOfConfig":"381"},{"size":360,"mtime":1615397085872,"results":"383","hashOfConfig":"381"},{"size":2590,"mtime":1620386249491,"results":"384","hashOfConfig":"381"},{"size":9412,"mtime":1622359020487,"results":"385","hashOfConfig":"381"},{"size":2520,"mtime":1620381777014,"results":"386","hashOfConfig":"381"},{"size":567,"mtime":1617039866684,"results":"387","hashOfConfig":"381"},{"size":1665,"mtime":1620432502495,"results":"388","hashOfConfig":"381"},{"size":82,"mtime":1615396162619,"results":"389","hashOfConfig":"381"},{"size":324,"mtime":1615581775302,"results":"390","hashOfConfig":"381"},{"size":261,"mtime":1615395603597,"results":"391","hashOfConfig":"381"},{"size":270,"mtime":1615396536261,"results":"392","hashOfConfig":"381"},{"size":1085,"mtime":1617039900563,"results":"393","hashOfConfig":"381"},{"size":263,"mtime":1615395411697,"results":"394","hashOfConfig":"381"},{"size":604,"mtime":1615395553396,"results":"395","hashOfConfig":"381"},{"size":3274,"mtime":1619818900285,"results":"396","hashOfConfig":"381"},{"size":799,"mtime":1617016027673,"results":"397","hashOfConfig":"381"},{"size":891,"mtime":1617039873333,"results":"398","hashOfConfig":"381"},{"size":3292,"mtime":1622066405120,"results":"399","hashOfConfig":"381"},{"size":1512,"mtime":1617979250385,"results":"400","hashOfConfig":"381"},{"size":1549,"mtime":1621864035207,"results":"401","hashOfConfig":"381"},{"size":1542,"mtime":1617979409956,"results":"402","hashOfConfig":"381"},{"size":1116,"mtime":1617979311560,"results":"403","hashOfConfig":"381"},{"size":1652,"mtime":1621863972761,"results":"404","hashOfConfig":"381"},{"size":954,"mtime":1617979543970,"results":"405","hashOfConfig":"381"},{"size":622,"mtime":1617979355033,"results":"406","hashOfConfig":"381"},{"size":857,"mtime":1617979374585,"results":"407","hashOfConfig":"381"},{"size":976,"mtime":1617979291121,"results":"408","hashOfConfig":"381"},{"size":997,"mtime":1617979325290,"results":"409","hashOfConfig":"381"},{"size":2918,"mtime":1622266903452,"results":"410","hashOfConfig":"381"},{"size":243,"mtime":1616757225592,"results":"411","hashOfConfig":"381"},{"size":781,"mtime":1617979343356,"results":"412","hashOfConfig":"381"},{"size":16343,"mtime":1620383778319,"results":"413","hashOfConfig":"381"},{"size":1311,"mtime":1617912477690,"results":"414","hashOfConfig":"381"},{"size":5548,"mtime":1620430929830,"results":"415","hashOfConfig":"381"},{"size":6214,"mtime":1620431547653,"results":"416","hashOfConfig":"381"},{"size":2272,"mtime":1622359630567,"results":"417","hashOfConfig":"381"},{"size":3985,"mtime":1619816491343,"results":"418","hashOfConfig":"381"},{"size":3212,"mtime":1618419882162,"results":"419","hashOfConfig":"381"},{"size":1418,"mtime":1617912454899,"results":"420","hashOfConfig":"381"},{"size":7022,"mtime":1617912432708,"results":"421","hashOfConfig":"381"},{"size":4291,"mtime":1617912465299,"results":"422","hashOfConfig":"381"},{"size":1259,"mtime":1616760889958,"results":"423","hashOfConfig":"381"},{"size":1091,"mtime":1617882437640,"results":"424","hashOfConfig":"381"},{"size":2756,"mtime":1618185754252,"results":"425","hashOfConfig":"381"},{"size":1135,"mtime":1617611044376,"results":"426","hashOfConfig":"381"},{"size":1537,"mtime":1617880129026,"results":"427","hashOfConfig":"381"},{"size":1363,"mtime":1616364626822,"results":"428","hashOfConfig":"381"},{"size":1399,"mtime":1617633257901,"results":"429","hashOfConfig":"381"},{"size":299,"mtime":1615684182818,"results":"430","hashOfConfig":"381"},{"size":1479,"mtime":1617979520112,"results":"431","hashOfConfig":"381"},{"size":3096,"mtime":1620560714216,"results":"432","hashOfConfig":"381"},{"size":21957,"mtime":1622495130513,"results":"433","hashOfConfig":"381"},{"size":15554,"mtime":1622358860216,"results":"434","hashOfConfig":"381"},{"size":3788,"mtime":1622361250041,"results":"435","hashOfConfig":"381"},{"size":11882,"mtime":1620429756845,"results":"436","hashOfConfig":"381"},{"size":2617,"mtime":1622495809760,"results":"437","hashOfConfig":"381"},{"size":3070,"mtime":1617881905680,"results":"438","hashOfConfig":"381"},{"size":3075,"mtime":1622356964776,"results":"439","hashOfConfig":"381"},{"size":2971,"mtime":1619820438190,"results":"440","hashOfConfig":"381"},{"size":3099,"mtime":1622323810299,"results":"441","hashOfConfig":"381"},{"size":2924,"mtime":1620565926123,"results":"442","hashOfConfig":"381"},{"size":4984,"mtime":1622323771871,"results":"443","hashOfConfig":"381"},{"size":1933,"mtime":1617883076916,"results":"444","hashOfConfig":"381"},{"size":1777,"mtime":1616893866381,"results":"445","hashOfConfig":"381"},{"size":1165,"mtime":1616422198399,"results":"446","hashOfConfig":"381"},{"size":1583,"mtime":1617911606305,"results":"447","hashOfConfig":"381"},{"size":1214,"mtime":1615396301500,"results":"448","hashOfConfig":"381"},{"size":1278,"mtime":1616365882892,"results":"449","hashOfConfig":"381"},{"size":3922,"mtime":1620386477234,"results":"450","hashOfConfig":"381"},{"size":4426,"mtime":1620385722062,"results":"451","hashOfConfig":"381"},{"size":4376,"mtime":1620387424178,"results":"452","hashOfConfig":"381"},{"size":4486,"mtime":1620381199790,"results":"453","hashOfConfig":"381"},{"size":1329,"mtime":1617883138657,"results":"454","hashOfConfig":"381"},{"size":2500,"mtime":1616758934644,"results":"455","hashOfConfig":"381"},{"size":2492,"mtime":1618406729968,"results":"456","hashOfConfig":"381"},{"size":6784,"mtime":1617751320108,"results":"457","hashOfConfig":"381"},{"size":596,"mtime":1620473062134,"results":"458","hashOfConfig":"381"},{"size":1482,"mtime":1615719219765,"results":"459","hashOfConfig":"381"},{"size":1289,"mtime":1617724295422,"results":"460","hashOfConfig":"381"},{"size":2763,"mtime":1617882424911,"results":"461","hashOfConfig":"381"},{"size":2473,"mtime":1622267499862,"results":"462","hashOfConfig":"381"},{"size":779,"mtime":1619719191159,"results":"463","hashOfConfig":"381"},{"size":1069,"mtime":1620432452670,"results":"464","hashOfConfig":"381"},{"size":823,"mtime":1622359776754,"results":"465","hashOfConfig":"381"},{"size":503,"mtime":1620566279939,"results":"466","hashOfConfig":"381"},{"size":6286,"mtime":1615769590366,"results":"467","hashOfConfig":"381"},{"size":14591,"mtime":1620562376905,"results":"468","hashOfConfig":"381"},{"size":2300,"mtime":1616880765696,"results":"469","hashOfConfig":"381"},{"size":2612,"mtime":1622063934413,"results":"470","hashOfConfig":"381"},{"size":7102,"mtime":1617877594599,"results":"471","hashOfConfig":"381"},{"size":2090,"mtime":1615396131435,"results":"472","hashOfConfig":"381"},{"size":1252,"mtime":1628438717861,"results":"473","hashOfConfig":"474"},{"size":1161,"mtime":1630245664283,"results":"475","hashOfConfig":"474"},{"size":360,"mtime":1615397085872,"results":"476","hashOfConfig":"474"},{"size":9756,"mtime":1630577756148,"results":"477","hashOfConfig":"474"},{"size":2590,"mtime":1620386249491,"results":"478","hashOfConfig":"474"},{"size":2520,"mtime":1620381777014,"results":"479","hashOfConfig":"474"},{"size":567,"mtime":1617039866684,"results":"480","hashOfConfig":"474"},{"size":1665,"mtime":1620432502495,"results":"481","hashOfConfig":"474"},{"size":82,"mtime":1615396162619,"results":"482","hashOfConfig":"474"},{"size":324,"mtime":1615581775302,"results":"483","hashOfConfig":"474"},{"size":3274,"mtime":1619818900285,"results":"484","hashOfConfig":"474"},{"size":604,"mtime":1615395553396,"results":"485","hashOfConfig":"474"},{"size":261,"mtime":1615395603597,"results":"486","hashOfConfig":"474"},{"size":1085,"mtime":1617039900563,"results":"487","hashOfConfig":"474"},{"size":270,"mtime":1615396536261,"results":"488","hashOfConfig":"474"},{"size":263,"mtime":1615395411697,"results":"489","hashOfConfig":"474"},{"size":799,"mtime":1617016027673,"results":"490","hashOfConfig":"474"},{"size":891,"mtime":1617039873333,"results":"491","hashOfConfig":"474"},{"size":3676,"mtime":1626508962393,"results":"492","hashOfConfig":"474"},{"size":1867,"mtime":1630445179386,"results":"493","hashOfConfig":"474"},{"size":1964,"mtime":1629555798811,"results":"494","hashOfConfig":"474"},{"size":1522,"mtime":1630017512127,"results":"495","hashOfConfig":"474"},{"size":1645,"mtime":1629568530039,"results":"496","hashOfConfig":"474"},{"size":992,"mtime":1627129114718,"results":"497","hashOfConfig":"474"},{"size":991,"mtime":1630334221035,"results":"498","hashOfConfig":"474"},{"size":954,"mtime":1617979543970,"results":"499","hashOfConfig":"474"},{"size":622,"mtime":1617979355033,"results":"500","hashOfConfig":"474"},{"size":861,"mtime":1627129365270,"results":"501","hashOfConfig":"474"},{"size":3361,"mtime":1630507507562,"results":"502","hashOfConfig":"474"},{"size":7271,"mtime":1626595187510,"results":"503","hashOfConfig":"474"},{"size":997,"mtime":1617979325290,"results":"504","hashOfConfig":"474"},{"size":232,"mtime":1630332521165,"results":"505","hashOfConfig":"474"},{"size":799,"mtime":1627128798160,"results":"506","hashOfConfig":"474"},{"size":1018,"mtime":1626508287601,"results":"507","hashOfConfig":"474"},{"size":901,"mtime":1626508349135,"results":"508","hashOfConfig":"474"},{"size":15010,"mtime":1630528174390,"results":"509","hashOfConfig":"474"},{"size":1471,"mtime":1630171554028,"results":"510","hashOfConfig":"474"},{"size":4470,"mtime":1630526193130,"results":"511","hashOfConfig":"474"},{"size":4944,"mtime":1629568995413,"results":"512","hashOfConfig":"474"},{"size":822,"mtime":1629568243769,"results":"513","hashOfConfig":"474"},{"size":3128,"mtime":1629567513055,"results":"514","hashOfConfig":"474"},{"size":2676,"mtime":1629568279107,"results":"515","hashOfConfig":"474"},{"size":918,"mtime":1629568097239,"results":"516","hashOfConfig":"474"},{"size":6845,"mtime":1630526158117,"results":"517","hashOfConfig":"474"},{"size":3643,"mtime":1629568378568,"results":"518","hashOfConfig":"474"},{"size":1259,"mtime":1616760889958,"results":"519","hashOfConfig":"474"},{"size":2707,"mtime":1629557578251,"results":"520","hashOfConfig":"474"},{"size":1537,"mtime":1617880129026,"results":"521","hashOfConfig":"474"},{"size":1363,"mtime":1616364626822,"results":"522","hashOfConfig":"474"},{"size":1135,"mtime":1617611044376,"results":"523","hashOfConfig":"474"},{"size":1091,"mtime":1617882437640,"results":"524","hashOfConfig":"474"},{"size":1399,"mtime":1617633257901,"results":"525","hashOfConfig":"474"},{"size":3313,"mtime":1630236639370,"results":"526","hashOfConfig":"474"},{"size":2990,"mtime":1629583310826,"results":"527","hashOfConfig":"474"},{"size":2963,"mtime":1630150710656,"results":"528","hashOfConfig":"474"},{"size":3027,"mtime":1630232711733,"results":"529","hashOfConfig":"474"},{"size":3357,"mtime":1630236648743,"results":"530","hashOfConfig":"474"},{"size":2580,"mtime":1629583246686,"results":"531","hashOfConfig":"474"},{"size":731,"mtime":1629505683233,"results":"532","hashOfConfig":"474"},{"size":3535,"mtime":1629658158447,"results":"533","hashOfConfig":"474"},{"size":4666,"mtime":1629658124724,"results":"534","hashOfConfig":"474"},{"size":5259,"mtime":1629586434798,"results":"535","hashOfConfig":"474"},{"size":1847,"mtime":1630445130216,"results":"536","hashOfConfig":"474"},{"size":26034,"mtime":1630582664560,"results":"537","hashOfConfig":"474"},{"size":3660,"mtime":1629559967986,"results":"538","hashOfConfig":"474"},{"size":19201,"mtime":1630278227627,"results":"539","hashOfConfig":"474"},{"size":4538,"mtime":1630577643234,"results":"540","hashOfConfig":"474"},{"size":13320,"mtime":1630580568899,"results":"541","hashOfConfig":"474"},{"size":1165,"mtime":1616422198399,"results":"542","hashOfConfig":"474"},{"size":1777,"mtime":1616893866381,"results":"543","hashOfConfig":"474"},{"size":1214,"mtime":1615396301500,"results":"544","hashOfConfig":"474"},{"size":1278,"mtime":1616365882892,"results":"545","hashOfConfig":"474"},{"size":1583,"mtime":1617911606305,"results":"546","hashOfConfig":"547"},{"size":3889,"mtime":1630527300198,"results":"548","hashOfConfig":"474"},{"size":4515,"mtime":1630527238356,"results":"549","hashOfConfig":"474"},{"size":4634,"mtime":1630528239808,"results":"550","hashOfConfig":"474"},{"size":4795,"mtime":1630527261406,"results":"551","hashOfConfig":"474"},{"size":901,"mtime":1630232866581,"results":"552","hashOfConfig":"474"},{"size":6286,"mtime":1615769590366,"results":"553","hashOfConfig":"474"},{"size":1289,"mtime":1617724295422,"results":"554","hashOfConfig":"474"},{"size":2482,"mtime":1630580312779,"results":"555","hashOfConfig":"474"},{"size":3030,"mtime":1627127168679,"results":"556","hashOfConfig":"474"},{"size":596,"mtime":1620473062134,"results":"557","hashOfConfig":"474"},{"size":1569,"mtime":1630233807298,"results":"558","hashOfConfig":"474"},{"size":1137,"mtime":1630333231600,"results":"559","hashOfConfig":"474"},{"size":13052,"mtime":1629934817948,"results":"560","hashOfConfig":"474"},{"size":2058,"mtime":1627128486217,"results":"561","hashOfConfig":"474"},{"size":2090,"mtime":1615396131435,"results":"562","hashOfConfig":"474"},{"size":2852,"mtime":1617881910895,"results":"563","hashOfConfig":"547"},{"size":3487,"mtime":1615641729474,"results":"564","hashOfConfig":"547"},{"size":2857,"mtime":1630239872994,"results":"565","hashOfConfig":"474"},{"size":1506,"mtime":1630153834363,"results":"566","hashOfConfig":"474"},{"size":430,"mtime":1629582338739,"results":"567","hashOfConfig":"474"},{"size":1642,"mtime":1629582484944,"results":"568","hashOfConfig":"474"},{"size":863,"mtime":1629582625340,"results":"569","hashOfConfig":"474"},{"size":3936,"mtime":1630171049356,"results":"570","hashOfConfig":"474"},{"size":2471,"mtime":1630243641021,"results":"571","hashOfConfig":"474"},{"size":2806,"mtime":1630242569232,"results":"572","hashOfConfig":"474"},{"size":2750,"mtime":1630243038984,"results":"573","hashOfConfig":"474"},{"size":5576,"mtime":1630236837914,"results":"574","hashOfConfig":"547"},{"size":7431,"mtime":1630242236465,"results":"575","hashOfConfig":"474"},{"size":7744,"mtime":1630242243019,"results":"576","hashOfConfig":"474"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},"psv6x6",{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"579"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"579"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"579"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"579"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"579"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"579"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"579"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"579"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"579"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"579"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"579"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"579"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"579"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"579"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"579"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"579"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"579"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"579"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"579"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"579"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"579"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"579"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"579"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"579"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"579"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"579"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"579"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},"1pl43gu",{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"790"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"790"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"790"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"790"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"790"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"790"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"790"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"790"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"790"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"790"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"790"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"790"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"790"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"790"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"790"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895","usedDeprecatedRules":"790"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"790"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"790"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"790"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"790"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"790"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"790"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"790"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"790"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"790"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"790"},{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"976","usedDeprecatedRules":"977"},"1v0dm21",{"filePath":"978","messages":"979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"980","messages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"982","messages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"984","messages":"985","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"986","messages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"988","messages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"990","messages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"996","messages":"997","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1002","messages":"1003","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1004","messages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1008","messages":"1009","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1010","messages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"977"},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1017","messages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023","usedDeprecatedRules":"977"},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1026","messages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1028","messages":"1029","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"977"},{"filePath":"1030","messages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1032","messages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1034","messages":"1035","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1036","messages":"1037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1038","messages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1040","messages":"1041","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1042","messages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1046","usedDeprecatedRules":"977"},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1049","messages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1051","usedDeprecatedRules":"977"},{"filePath":"1052","messages":"1053","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1054","messages":"1055","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1056","usedDeprecatedRules":"977"},{"filePath":"1057","messages":"1058","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1059","usedDeprecatedRules":"977"},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1064","usedDeprecatedRules":"977"},{"filePath":"1065","messages":"1066","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067","usedDeprecatedRules":"977"},{"filePath":"1068","messages":"1069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1070","messages":"1071","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1074","usedDeprecatedRules":"977"},{"filePath":"1075","messages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"977"},{"filePath":"1077","messages":"1078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1079","messages":"1080","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"977"},{"filePath":"1081","messages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"977"},{"filePath":"1083","messages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1085","messages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1087","messages":"1088","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"977"},{"filePath":"1089","messages":"1090","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1091","usedDeprecatedRules":"977"},{"filePath":"1092","messages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1098","usedDeprecatedRules":"977"},{"filePath":"1099","messages":"1100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1101","usedDeprecatedRules":"977"},{"filePath":"1102","messages":"1103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1104","messages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1106","messages":"1107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108","usedDeprecatedRules":"977"},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1111","usedDeprecatedRules":"977"},{"filePath":"1112","messages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1114","usedDeprecatedRules":"977"},{"filePath":"1115","messages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117","usedDeprecatedRules":"977"},{"filePath":"1118","messages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1120","messages":"1121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1122","usedDeprecatedRules":"977"},{"filePath":"1123","messages":"1124","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1125","usedDeprecatedRules":"977"},{"filePath":"1126","messages":"1127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1128","messages":"1129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1130","messages":"1131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1132","messages":"1133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1134","messages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1136","messages":"1137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"977"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l3olbg",{"filePath":"1140","messages":"1141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1142","messages":"1143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1144","messages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1146","messages":"1147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1148","messages":"1149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1150","messages":"1151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1152","messages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1154","messages":"1155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1156","messages":"1157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1158","messages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1160","messages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1162","messages":"1163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1164","messages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1166","usedDeprecatedRules":"977"},{"filePath":"1167","messages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1169","usedDeprecatedRules":"977"},{"filePath":"1170","messages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1176","messages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1178","usedDeprecatedRules":"977"},{"filePath":"1179","messages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1181","messages":"1182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1183","messages":"1184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1185","messages":"1186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1187","messages":"1188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1189","messages":"1190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"977"},{"filePath":"1191","messages":"1192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193","usedDeprecatedRules":"977"},{"filePath":"1194","messages":"1195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1196","usedDeprecatedRules":"977"},{"filePath":"1197","messages":"1198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1199"},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1202","usedDeprecatedRules":"977"},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1205","usedDeprecatedRules":"977"},"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\index.js",[],["1206","1207"],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\usersAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\postAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\paramAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\sectionAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\actions\\userAction.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\UserIdConnect.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\page_accueil\\globalStyles.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\user.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\users.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\post.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\error.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\posts.reducres.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\param.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\section.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\reducers\\bestof.reducer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Routes\\index.js",["1208"],"import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Home from '../../pages/Home';\nimport Profil from '../../pages/Profil';\nimport Profil_pro from '../../pages/Profil_pro';\nimport Profil_admin from '../../pages/Profil_admin';\nimport Bestof from '../../pages/Bestof';\nimport Favoris from '../../pages/Favoris';\nimport Newpost from '../../pages/Newpost';\nimport Reservation from '../../pages/Reservation';\nimport Post_pro from '../../pages/Post_pro';\nimport Gestion from '../../pages/pages_admin/Gestion';\nimport Gestion_clients from '../../pages/pages_admin/Gestion_clients';\nimport Gestion_pro from '../../pages/pages_admin/Gestion_pro';\nimport Pub_attente from '../../pages/pages_admin/Pub_attente';\nimport Parametres from '../../pages/pages_admin/Parametres';\nimport Param_habitat from '../../pages/pages_admin/Param_habitat';\nimport User_view from '../../pages/pages_admin/User_view';\nimport Gestion_pubs from '../../pages/pages_admin/Gestion_pubs';\nimport Ajout_admin from '../../pages/pages_admin/Ajout_admin';\nimport ListAdmin from '../../pages/pages_admin/ListAdmin';\nimport Mes_reservations from '../../pages/Mes_reservations';\nimport { Accueil } from '../../pages/page_accueil/Accueil';\nimport HomePro from '../../pages/HomePro';\nimport Prisedevue from '../../pages/Prisedevue';\nimport { useSelector } from 'react-redux';\n\n\nconst Index = () => {\n  const userData = useSelector((state) => state.userReducer);\n  return (\n    <div>\n\n    <Router>\n      <Switch>\n        {/* FREE ACCESS */}\n        <Route path=\"/\" exact component={Accueil} />\n        <Route path=\"/Home\" exact component={Home} />\n        <Route path=\"/profil\" exact component={Profil} />\n        <Route path=\"/profil_pro\" exact component={Profil_pro} />\n        <Route path=\"/profil_admin\" exact component={Profil_admin} />\n        <Route path=\"/prisedevue\" exact component={Prisedevue} />\n        <Route path=\"/bestof\" exact component={Bestof} />\n\n        {/* ONLY CLIENT ACCESS */}\n        <Route path=\"/favoris\" exact component={Favoris} />\n        <Route path=\"/reservation\" exact component={Reservation} />\n        <Route path=\"/mes_reservations\" exact component={Mes_reservations} />\n        \n        \n        {/* ONLY PROPRIETAIRE ACCESS */}\n        <Route path=\"/newpost\" exact component={Newpost} />\n        <Route path=\"/post_pro/\" exact component={Post_pro} />\n        <Route path=\"/Homepro\" exact component={HomePro} />\n        \n        {/* ONLY ADMIN ACCESS */}\n        <Route path=\"/gestion\" exact component={Gestion} />\n        <Route path=\"/gestion_clients\" exact component={Gestion_clients} />\n        <Route path=\"/gestion_pro\" exact component={Gestion_pro} />\n        <Route path=\"/gestion_pubs\" exact component={Gestion_pubs} />\n        <Route path=\"/pub_attente\" exact component={Pub_attente} />\n        <Route path=\"/parametres\" exact component={Parametres} />\n        <Route path=\"/ajout_admin\" exact component={Ajout_admin} />\n        <Route path=\"/listadmin\" exact component={ListAdmin} />\n        <Route path=\"/paramhabitat\" exact component={Param_habitat} />\n        <Route path=\"/user_view\" exact component={User_view} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n    </div>\n    \n  );\n};\n\nexport default Index;","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Home.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Profil_pro.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Profil.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Profil_admin.js",["1209"],"import React, { useContext, useState } from \"react\";\r\nimport Index_admin from \"../components/Log/Index_admin\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport UpdateInfoProfil from \"../components/Profil/UpdateInfoProfil\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../style/index.css\"\r\nimport NavBar from '../components/PageAccueil/NavBar';\r\nimport Dropdown from '../components/PageAccueil/Dropdown';\r\nimport LeftNav from \"../components/LeftNav\";\r\n\r\nconst Profil_admin = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <NavBar toggle={toggle}/>\r\n    <Dropdown isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\" style={{paddingTop: '60px'}}>\r\n    <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <LeftNav />\r\n          </div>\r\n          <div className=\"col-10\">\r\n      <div >\r\n        {uid ? (\r\n          <UpdateInfoProfil />\r\n        ) : (\r\n          <>\r\n            <div className=\"row\" >\r\n              <div className=\"col-sm\">\r\n                <Index_admin signin={true} signup={false} />\r\n              </div>\r\n              <div className=\"col-sm\">\r\n                <img width=\"100%\" height=\"100%\" src=\"./img/imag_3.svg\" alt=\"imag_1\"/>\r\n              </div>\r\n            </div>\r\n            \r\n          </>\r\n          )}\r\n        </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profil_admin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Bestof.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Newpost.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Favoris.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Reservation.js",["1210"],"import React, {useState} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ReservationForm from '../components/Post/ReservationForm'\r\nimport { isEmpty } from '../components/Utilitaires'\r\nimport NavBar from '../components/PageAccueil/NavBar';\r\nimport Dropdown from '../components/PageAccueil/Dropdown';\r\n\r\nconst Reservation = (props) => {\r\n  const posts = useSelector(state => state.postReducer)\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n    <NavBar toggle={toggle}/>\r\n    <Dropdown isOpen={isOpen} toggle={toggle}/>\r\n    <div className=\"container\" style={{paddingTop: '60px'}}>\r\n      {!isEmpty(posts[0]) &&\r\n      posts.map((post, key) => {\r\n        if (`?id=${post._id}` === props.location.search) {\r\n          return <ReservationForm post={post} key={post._id} /> \r\n        }})}\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Reservation\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Post_pro.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\HomePro.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\page_accueil\\Accueil.js",["1211","1212"],"import React, { useContext, useState } from 'react'\r\nimport Dropdown from '../../components/PageAccueil/Dropdown';\r\nimport Hero from '../../components/PageAccueil/Hero';\r\nimport InfoSection from '../../components/PageAccueil/InfoSection';\r\nimport NavBar from '../../components/PageAccueil/NavBar';\r\nimport { InfoData } from '../../data/InfoData';\r\nimport { SliderData } from '../../data/SliderData';\r\nimport GlobalStyle from './globalStyles';\r\nimport Footer from '../../components/PageAccueil/Footer';\r\nimport SearchForm from '../../components/Post/SearchForm';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UidContext } from \"../../components/UserIdConnect\";\r\nimport { useSelector } from 'react-redux';\r\nimport Popup from 'reactjs-popup';\r\nrequire('react-dom');\r\n\r\n\r\nexport const Accueil = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    window.React2 = require('react');\r\n    console.log(window.React1 === window.React2);\r\n    const uid = useContext(UidContext);\r\n    const userData = useSelector((state) => state.userReducer);\r\n   \r\n\r\n    const toggle = () => {\r\n      setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <GlobalStyle />\r\n        <NavBar toggle={toggle}/>\r\n        <Dropdown isOpen={isOpen} toggle={toggle}/>\r\n        <Hero slides={SliderData}/>\r\n        <div className=\"container row\">\r\n          <div className=\"col-6\" style={{paddingTop:'25px'}}>\r\n              <NavLink to=\"/home\" \r\n                style={{\r\n                  color:'#f39200',\r\n                  fontWeight: 'bold',\r\n                  padding: '10px',\r\n                }}\r\n                \r\n              > { console.log(userData.role)}\r\n                Consulter l'ensemble des offres {\" \"}\r\n                <i class=\"fas fa-arrow-circle-right\"></i>\r\n              </NavLink>\r\n              <br/><br/>\r\n              {userData.role === 'propriétaire'&&\r\n              <NavLink to=\"/newpost\" \r\n                style={{\r\n                  color:'#f39200',\r\n                  fontWeight: 'bold',\r\n                  padding: '10px',\r\n                }}\r\n                \r\n              >\r\n                Déposer une annonce {\" \"}\r\n                <i class=\"fas fa-arrow-circle-right\"></i>\r\n              </NavLink>}\r\n              {userData.role === 'client' ?\r\n              <div></div>\r\n             :\r\n              <NavLink to=\"/profil_pro\" \r\n              style={{\r\n                color:'#f39200',\r\n                fontWeight: 'bold',\r\n                padding: '10px',\r\n              }}\r\n            >\r\n              Déposer une annonce {\" \"}\r\n              <i class=\"fas fa-arrow-circle-right\"></i>\r\n            </NavLink>\r\n              }\r\n                <br/><br/><br/>\r\n              <SearchForm/>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <InfoSection {...InfoData}/>\r\n          </div>\r\n        </div>\r\n        \r\n        <Footer />\r\n      </>\r\n    )\r\n}\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Mes_reservations.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\Prisedevue.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Gestion_clients.js",["1213"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Gestion_clients = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteQuote = id => dispatch(deleteUser(id, userData.role));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green',  position: 'fixed', zIndex:'100' }} width='100%'>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\" style={{paddingTop: '100px'}}>\r\n                    <br />\r\n                    <h1>Gestion des clients</h1>\r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"client\") {\r\n                                      return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>\r\n                                                <button type=\"submit\" className=\"btn btn-danger\" \r\n                                                    onClick={() => {\r\n                                                        if (window.confirm(\"Voulez-vous supprimer cet utilisateur ?\")) {\r\n                                                            deleteQuote(user._id);\r\n                                                            window.location.reload(false);\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-info\">\r\n                                                    <i className=\"fas fa-user-edit\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <NavLink  style={{ color: 'black' }} to={{\r\n                                                        pathname:'/user_view',\r\n                                                        search:`id=${user._id}` \r\n                                                    }} exact >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </NavLink>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    )  \r\n                                    }\r\n                                    \r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Gestion_clients;","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Gestion.js",["1214","1215","1216"],"import { MDBBtn } from \"mdbreact\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { deleteParam } from \"../../actions/paramAction\";\r\nimport { deleteSection } from \"../../actions/sectionAction\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport Hero from \"../../components/PageAccueil/Hero\";\r\nimport InfoSection from \"../../components/PageAccueil/InfoSection\";\r\nimport ParamForm from \"../../components/Parametre/ParamForm\";\r\nimport SectionForm from \"../../components/Parametre/SectionForm\";\r\nimport UpdateParam from \"../../components/Parametre/UpdateParam\";\r\nimport UpdateSection from \"../../components/Parametre/UpdateSection\";\r\nimport { isEmpty } from \"../../components/Utilitaires\";\r\nimport { InfoData } from \"../../data/InfoData\";\r\nimport { SliderData } from \"../../data/SliderData\";\r\nimport GlobalStyle from \"../page_accueil/globalStyles\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst Gestion = () => {\r\n    const dispatch = useDispatch();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const paramData = useSelector((state) => state.paramReducer);\r\n    const sectionData = useSelector((state) => state.sectionReducer);\r\n    const [open, setOpen] = useState(false);\r\n    const [ slideToUpdate,setSlideToUpdate] =  useState(\"\");\r\n\r\n    const [openSection, setOpenSection] = useState(false);\r\n    const [ sectionToUpdate,setSectionToUpdate] =  useState(\"\");\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isOpenB, setIsOpenB] = useState(false);\r\n    const [isOpenC, setIsOpenC] = useState(false);\r\n    const [isOpenD, setIsOpenD] = useState(false);\r\n    const [isOpenE, setIsOpenE] = useState(false);\r\n    const [isOpenF, setIsOpenF] = useState(false);\r\n\r\n\r\n    const showModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const showModalB = () => {\r\n        setIsOpenB(true);\r\n    };\r\n    const showModalC = () => {\r\n        setIsOpenC(true);\r\n    };\r\n    const showModalD = () => {\r\n        setIsOpenD(true);\r\n    };\r\n    const showModalE = () => {\r\n        setIsOpenE(true);\r\n    };\r\n    const showModalF = () => {\r\n        setIsOpenF(true);\r\n    };\r\n\r\n\r\n\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n    const hideModalB = () => {\r\n        setIsOpenB(false);\r\n    };\r\n    const hideModalC = () => {\r\n        setIsOpenC(false);\r\n    };\r\n    const hideModalD = () => {\r\n        setIsOpenD(false);\r\n    };\r\n    const hideModalE = () => {\r\n        setIsOpenE(false);\r\n    };\r\n    const hideModalF = () => {\r\n        setIsOpenF(false);\r\n    };\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setSlideToUpdate(e);\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleChangeSection = (e) => {\r\n        setSectionToUpdate(e);\r\n        setOpenSection(true);\r\n    }\r\n\r\n    const deleteSlide =(id) => {\r\n        dispatch(deleteParam(id, userData.role));\r\n        \r\n    }\r\n\r\n    const deleteQuote =(id) => {\r\n        dispatch(deleteSection(id, userData.role));\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n    }, [usersData]);\r\n    return (\r\n        <div>\r\n            <nav style={{ backgroundColor: 'green' , position: 'fixed', zIndex:'100'}}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink> \r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\" style={{paddingTop: '100px'}}>\r\n                <>\r\n                    <br/>\r\n                        <h1>Paramétrage de la page d'accueil</h1>\r\n                        <GlobalStyle />\r\n                         <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                            <span style={{fontSize:'12px'}}>Ajouter des slides </span>\r\n                            <i onClick={showModal} className=\"fas fa-plus\" style={{cursor: 'pointer'}}></i>\r\n                            <Modal show={isOpen} onHide={hideModal}>\r\n                                    <Modal.Header>\r\n                                        <Modal.Title>Ajouter un slide</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <ParamForm/>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <button onClick={hideModal}>Fermer</button>\r\n                                    </Modal.Footer>\r\n                            </Modal>\r\n                            </div>\r\n\r\n                            <div className=\"col-4\">\r\n                            <span style={{fontSize:'12px'}}>Modifier des slides </span>\r\n                            <i onClick={showModalB} className=\"fas fa-edit\" style={{cursor: 'pointer'}}></i>\r\n                            <Modal show={isOpenB} onHide={hideModalB}>\r\n                                <Modal.Header>\r\n                                    <Modal.Title>Modifier un slide</Modal.Title>\r\n                                        {open ? (\r\n                                            <button type=\"button\" class=\"close\"  onClick={(e) => setOpen(false)} aria-label=\"Close\">\r\n                                                <span aria-hidden=\"true\">&times;</span>\r\n                                            </button>\r\n                                        ) : (\r\n                                            null\r\n                                        )}\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    {(!open) &&\r\n                                    <select  name=\"slideToUpdate\" id=\"slideToUpdate\" onChange={(e) => handleChange(e.target.value)} value={slideToUpdate} class=\"browser-default custom-select\" >\r\n                                        <option value=\"\">----- Selectionner le Slide -----</option>\r\n                                            {!isEmpty(paramData[0]) && \r\n                                            paramData.map((slide, key) => {\r\n                                                return (\r\n                                                    <option value={slide._id} key={key}>{slide.titre} </option>\r\n                                                    ) \r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </select>\r\n                                    }\r\n                                    {open && \r\n                                    !isEmpty(paramData[0]) && \r\n                                        paramData.map((slide, key) => {\r\n                                            if( slide._id === slideToUpdate) {\r\n                                                return <UpdateParam slid={slide}/>\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    }\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <button onClick={hideModalB}>Fermer</button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-4\">\r\n                            <span style={{fontSize:'12px'}}>Supprimer des slides </span>\r\n                            <i onClick={showModalC} className=\"fas fa-trash\" style={{cursor: 'pointer'}}></i>\r\n                            <Modal show={isOpenC} onHide={hideModalC}>\r\n                                <Modal.Header>\r\n                                    <Modal.Title>Supprimer un slide <i className=\"fas fa-trash\"></i></Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                {!isEmpty(paramData[0]) && \r\n                                    paramData.map((slide, key) => {\r\n                                            return (\r\n                                                    <ul>\r\n                                                        <li>\r\n                                                            <MDBBtn \r\n                                                            onClick={() => {\r\n                                                                if (window.confirm(\"Voulez-vous supprimer ce slide ?\")) {\r\n                                                                deleteSlide(slide._id);\r\n                                                                }\r\n                                                            }}\r\n                                                            key={key}\r\n                                                            >{slide.titre}\r\n                                                            </MDBBtn>\r\n                                                        </li> \r\n                                                    </ul>\r\n                                                )  \r\n                                    })\r\n                                }   \r\n                                </Modal.Body> \r\n                                <Modal.Footer>\r\n                                    <button onClick={hideModalC}>Fermer</button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                            </div>\r\n                        </div>\r\n                        <Hero slides={SliderData}/>\r\n                       <br/>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                            <span style={{fontSize:'12px'}}>Ajouter des sections </span>\r\n                            <i onClick={showModalD} className=\"fas fa-plus\" style={{cursor: 'pointer'}}></i>\r\n                            <Modal show={isOpenD} onHide={hideModalD}>\r\n                                    <Modal.Header>\r\n                                        <Modal.Title>Ajouter une section</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <SectionForm/>\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <button onClick={hideModalD}>Fermer</button>\r\n                                    </Modal.Footer>\r\n                            </Modal>\r\n                            </div>\r\n\r\n                            <div className=\"col-4\">\r\n                            <span style={{fontSize:'12px'}}>Modifier des sections </span>\r\n                            <i onClick={showModalE} className=\"fas fa-edit\" style={{cursor: 'pointer'}}></i>\r\n                            <Modal show={isOpenE} onHide={hideModalE}>\r\n                                <Modal.Header>\r\n                                    <Modal.Title>Modifier une section</Modal.Title>\r\n                                    {openSection ? (\r\n                                        <button type=\"button\" class=\"close\"  onClick={(e) => setOpenSection(false)} aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    ) : (\r\n                                        null\r\n                                    )}\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                {(!openSection) &&\r\n                                <select  name=\"slideToUpdate\" id=\"slideToUpdate\" onChange={(e) => handleChangeSection(e.target.value)} value={sectionToUpdate} class=\"browser-default custom-select\" >\r\n                                    <option value=\"\">----- Selectionner la section -----</option>\r\n                                        {!isEmpty(sectionData[0]) && \r\n                                        sectionData.map((section, key) => {\r\n                                            return (\r\n                                                <option value={section._id} key={key}>{section.titre}</option>\r\n                                                ) \r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                                }\r\n                                {openSection && \r\n                                    !isEmpty(sectionData[0]) && \r\n                                        sectionData.map((section, key) => {\r\n                                            if( section._id === sectionToUpdate) {\r\n                                                return <UpdateSection sect={section}/>\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    }      \r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <button onClick={hideModalE}>Fermer</button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-4\">\r\n                            <span style={{fontSize:'12px'}}>Supprimer des sections </span>\r\n                            <i onClick={showModalF} className=\"fas fa-trash\" style={{cursor: 'pointer'}}></i>\r\n                            <Modal show={isOpenF} onHide={hideModalF}>\r\n                                <Modal.Header>\r\n                                    <Modal.Title>Supprimer une section <i className=\"fas fa-trash\"></i></Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                {!isEmpty(sectionData[0]) && \r\n                                    sectionData.map((section, key) => {\r\n                                        return (\r\n                                                <ul>\r\n                                                    <li>\r\n                                                        <MDBBtn \r\n                                                        onClick={() => {\r\n                                                            if (window.confirm(\"Voulez-vous supprimer cette section ?\")) {\r\n                                                                deleteQuote(section._id);\r\n                                                            }\r\n                                                        }}\r\n                                                        key={key}\r\n                                                        >{section.titre}\r\n                                                        </MDBBtn>\r\n                                                    </li> \r\n                                                </ul>\r\n                                            )  \r\n                                    })\r\n                                }  \r\n                                </Modal.Body> \r\n                                <Modal.Footer>\r\n                                    <button onClick={hideModalF}>Fermer</button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                            </div>\r\n                        </div>\r\n                        <InfoSection {...InfoData}/>\r\n                       \r\n                    </>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Gestion;","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Pub_attente.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Parametres.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\User_view.js",["1217"],"import React from \"react\";\r\n\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\n\r\n\r\n\r\nconst User_view = (props) => {\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green',  position: 'fixed', zIndex:'100' }}>\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </nav>\r\n            <div className=\"container\" style={{paddingTop: '100px'}}>\r\n                <MDBContainer><bcomplexe r />\r\n                    <MDBRow>\r\n\r\n                        <MDBCol md=\"12\">\r\n                            <MDBCard>\r\n                                <MDBCardBody>\r\n                                    {!isEmpty(usersData[0]) &&\r\n                                        usersData.map((users) => {\r\n                                            if (`?id=${users._id}` === props.location.search) {\r\n                                                return (\r\n                                                    <>\r\n                                                        <h1> Profil de {users.pseudo}</h1>\r\n                                                        <h6>Compte crée le : {dateParser(users.createdAt)}</h6>\r\n                                                        <div className=\"row\">\r\n                                                        <div className=\"col-6\">\r\n                                                        <ul>\r\n                                                            <li>Pseudo: {users.pseudo}</li>\r\n                                                            <li>Email: {users.email}</li>\r\n                                                            <li>Tel: {users.tel}</li>\r\n                                                        </ul>\r\n                                                        </div>\r\n                                                        <div className=\"col-6\">\r\n                                                            <div className=\"left-part\">\r\n                                                            <h3>Photo de profil</h3>\r\n                                                            <img height=\"400\" width=\"100%\"\r\n                                                                src={users.picture} alt=\"user-pic\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                                \r\n                                            }\r\n                                        })}\r\n\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User_view;","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Gestion_pubs.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Ajout_admin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Gestion_pro.js",["1218","1219","1220"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Gestion_pro = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const posts = useSelector((state) => state.postReducer);\r\n    const dispatch = useDispatch();\r\n    const deleteQuote = id => dispatch(deleteUser(id, userData.role));\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green',  position: 'fixed', zIndex:'100' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\" style={{paddingTop: '100px'}}>\r\n                    <br />\r\n                    <h1>Gestion des propriétaires</h1>\r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Nombre de Post</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"propriétaire\") {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>    \r\n                                                {!isEmpty(posts[0]) &&\r\n                                                    posts.map((post) => {\r\n                                                        if ( post.posterId === user._id) {\r\n                                                           return \r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <button type=\"submit\" className=\"btn btn-danger\" \r\n                                                    onClick={() => {\r\n                                                        if (window.confirm(\"Voulez-vous supprimer cet utilisateur ?\")) {\r\n                                                            deleteQuote(user._id);\r\n                                                            window.location.reload(false);\r\n                                                            \r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <i class=\"fas fa-trash-alt\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-info\">\r\n                                                    <i className=\"fas fa-user-edit\"></i>\r\n                                                </button>\r\n                                                {\" \"}\r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <NavLink  style={{ color: 'black' }} to={{\r\n                                                        pathname:'/user_view',\r\n                                                        search:`id=${user._id}` \r\n                                                    }} exact >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </NavLink>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ) }\r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Gestion_pro;","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\ListAdmin.js",["1221"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst ListAdmin = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green',  position: 'fixed', zIndex:'100' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\" style={{paddingTop: '100px'}}>\r\n                    <br />\r\n                    <h1>Liste des Administrateurs\r\n                        <div style={{textAlign:'right', paddingRight:'30px'}}>\r\n                            <NavLink exact to=\"/ajout_admin\">\r\n                                <i className=\"fas fa-plus\" title=\"Ajouter\"></i>\r\n                            </NavLink>   \r\n                        </div>\r\n                    </h1>\r\n                    \r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Pseudo</th>\r\n                                <th>Email</th>\r\n                                <th>Membre depuis</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"administrateur\") {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>{user.pseudo}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{dateParser(user.createdAt)}</td>\r\n                                            <td>\r\n                                                \r\n                                                <button type=\"submit\" className=\"btn btn-warning\" >\r\n                                                    <a style={{ color: 'black' }} href={`/user_view/${user._id}`} >\r\n                                                        <i className=\"fas fa-eye\"></i>\r\n                                                    </a>\r\n                                                </button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ) }\r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ListAdmin;","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Thread.js",["1222"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../actions/postAction\";\nimport Card from \"./Post/Card\";\nimport { isEmpty } from \"./Utilitaires\";\n\nconst Thread = () => {\n  const [loadPost, setLoadPost] = useState(true);\n  const [count, setCount] = useState(5);\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.postReducer);\n\n  const loadMore = () => {\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\n      setLoadPost(true);\n    }\n  }\n\n  useEffect(() => {\n    if (loadPost) {\n      dispatch(getPosts(count));\n      setLoadPost(false);\n      setCount(count + 5);\n    }\n\n    window.addEventListener('scroll', loadMore);\n    return () => window.removeEventListener('scroll', loadMore);\n  }, [loadPost, dispatch, count]);\n\n  return (\n    <div className=\"thread-container\">\n      <ul>\n        {!isEmpty(posts[0]) &&\n          posts.map((post) => {\n            if( (post.status === \"non_reservé\") || ( post.status === \"refusé\")) {\n               return <Card post={post} key={post._id} />;\n            }           \n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Thread;\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\LeftNav.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Trends.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Utilitaires.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadsFavoris.js",["1223"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/postAction\";\r\nimport Card from \"./Post/Card\";\r\nimport { isEmpty } from \"./Utilitaires\";\r\n\r\nconst ThreadsFavoris = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul>\r\n        {userData.likes ? (\r\n          !isEmpty(posts[0]) &&\r\n              posts.map((post) => {\r\n                for (let i = 0; i < userData.likes.length; i++) {\r\n                  if (post._id === userData.likes[i]) {\r\n                    return <Card post={post} key={post._id} />;\r\n                  }\r\n                }\r\n              })\r\n        ) : <p>Votre liste de favoris est vide</p>}\r\n            \r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadsFavoris;\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadsPro.js",["1224"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/postAction\";\r\nimport Card from \"./Post/Card\";\r\nimport { isEmpty } from \"./Utilitaires\";\r\n\r\nconst ThreadsPro = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n              if ((post.posterId === userData._id) && (post.status !== \"validation\")) {\r\n                return <Card post={post} key={post._id} />;\r\n              }\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadsPro;\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadClient.js",["1225"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/postAction\";\r\nimport Card from \"./Post/Card\";\r\nimport { isEmpty } from \"./Utilitaires\";\r\n\r\nconst ThreadClient = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n              if ((post.clientId === userData._id) && (post.status !== \"refusé\") && (post.status !== \"non_reservé\")) {\r\n                return <Card post={post} key={post._id} />;\r\n              } \r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadClient;\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\Index_pro.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\Index_admin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\Card.js",["1226","1227","1228","1229","1230","1231","1232","1233","1234","1235"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dateParser, isEmpty, shortDateParser } from \"../Utilitaires\";\nimport LikeButton from \"./LikeButton\";\nimport {deleteReserve, sendEmail, updatePost, updateStatus } from \"../../actions/postAction\";\nimport DeleteCard from \"./DeleteCard\";\nimport CardComments from \"./CardComments\";\nimport Modal from \"react-bootstrap/Modal\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBCard } from 'mdbreact';\nimport Popup from \"reactjs-popup\";\nimport { useContext } from \"react\";\nimport { UidContext } from \"../UserIdConnect\";\nimport CardPrises from \"./CardPrises\";\nimport { FacebookShareButton, FacebookIcon, WhatsappShareButton, WhatsappIcon, TwitterShareButton, TwitterIcon, LinkedinShareButton, LinkedinIcon, MailruShareButton, MailruIcon, EmailShareButton, EmailIcon, InstapaperShareButton, InstapaperIcon } from 'react-share'\nimport { NavLink } from \"react-router-dom\";\nimport CardaddPic from \"./CardaddPic\";\nimport MsgData from \"../../data/MsgData\";\n\nconst Card = ({ post }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [textUpdate, setTextUpdate] = useState(null);\n  const [showComments, setShowComments] = useState(false);\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n  const uid = useContext(UidContext);\n\n  \n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenB, setIsOpenB] = useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const showModalB = () => {\n    setIsOpenB(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  const hideModalB = () => {\n    setIsOpenB(false);\n  };\n  \n\n  const updateItem = () => {\n    if (textUpdate) {\n      dispatch(updatePost(post._id, textUpdate, userData.role));\n    }\n    setIsUpdated(false);\n  };\n\n  useEffect(() => {\n    !isEmpty(usersData[0]) && setIsLoading(false);\n  }, [usersData]);\n\n  const valideReservation = () => {\n    dispatch(updateStatus(post._id, post.message, \"reservé\", post.clientId, userData.role));\n    {!isEmpty(usersData[0]) &&\n      usersData.map((user) => {\n      if (user._id === post.clientId) {\n        dispatch(sendEmail(user.email, user.pseudo, MsgData[3].subject, MsgData[3].text))\n      }})\n    }\n  }\n\n  const refuseReservation = () => {\n    dispatch(updateStatus(post._id, post.message, \"refusé\", post.clientId, userData.role));\n    {!isEmpty(usersData[0]) &&\n      usersData.map((user) => {\n      if (user._id === post.clientId) {\n        dispatch(sendEmail(user.email, user.pseudo, MsgData[4].subject, MsgData[4].text))\n      }})\n    }\n    post.reservations.map((reservation) => {\n      dispatch(deleteReserve(post._id, reservation._id));\n    })\n    window.location.reload(false);\n  }\n\n  const soumission = () => {\n    dispatch(updateStatus(post._id, post.message, \"validation\", null, userData.role));\n  } \n\n  const annuleReservation = () => {\n    dispatch(updateStatus(post._id, post.message, \"non_reservé\", userData.role));\n    {!isEmpty(usersData[0]) &&\n      usersData.map((user) => {\n      if (post.posterId === user._id) {\n        dispatch(sendEmail(user.email, user.pseudo, MsgData[5].subject, MsgData[5].text))\n      }})\n    }\n    post.reservations.map((reservation) => {\n          return dispatch(deleteReserve(post._id, reservation._id));\n    \n    })\n  }\n\n  const status = () => {\n    if (post.status === 'reservé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#2ed573', borderRadius:\"4px 8px\"}}>Réservé</span>)\n    } else if (post.status === 'attente') {\n      return (\n        <div>\n          <span style={{fontSize:'12px', backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente</span>\n          \n          <form action=\"\" onClick={valideReservation}>\n            <button type=\"submit\" >Valider</button>\n          </form>\n             \n          {\" \"}\n          <form action=\"\" onClick={refuseReservation}>\n            <button type=\"button\" >Refuser</button>\n          </form>\n        </div>\n        )\n    } else if (post.status === 'annulé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Annulé</span>)\n    } else if (post.status === 'non_reservé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Non reservé</span>)\n    } else if (post.status === 'refusé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Non reservé</span>)\n    } else if ((post.status === 'ajout_images') && (post.picture.length < 5)) {\n      return (<span style={{fontSize:'12px', fontWeight: 'bolder'}}> Vous avez {post.picture.length} image{post.picture.length < 2 ? \"\": \"s\"}</span>)\n    } else if ((post.status === 'ajout_images') && (post.picture.length === 5)) {\n      return (\n        <form action=\"\" onClick={soumission}>\n          <button type=\"submit\" >Soumettre</button>\n      </form>\n      )\n    }\n  }\n\n  const afficheReservButton = () =>\n  {\n      if (((userData.role !== 'propriétaire') && (post.status === \"non_reservé\")) || ((userData.role !== 'propriétaire') && (post.status === \"refusé\")) ) {\n         return (\n          <NavLink to={{\n            pathname:'/reservation',\n            search:`id=${post._id}` \n          }} exact >\n            <img \n            width=\"25px\"\n            src=\"./img/calendar.png\" \n            alt=\"reserve\" \n            data-toggle=\"modal\" \n            data-target=\"#exampleModal\"/>   \n          </NavLink>  \n        )\n      } else if((userData.role !== 'propriétaire') && (post.clientId === userData._id) && (post.status === \"attente\")) {\n          return (\n            <div>\n            <span style={{fontSize:'12px'}}>\n              status : <span style={{backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente de validation</span>\n            </span>\n            <br/>\n            <form action=\"\"  onClick={() => {\n              if (window.confirm(\"Voulez-vous annuler votre demande de reservation ?\")) {\n                annuleReservation();\n              }\n            }}\n            >\n              <button type=\"submit\" titre=\"Annuler la reservation\" >Annuler</button>\n            </form>\n          </div>\n          )\n      } else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"reservé\")) {\n        return (\n          <div>\n          <span style={{fontSize:'12px'}}>\n            status : <span style={{backgroundColor:'#2ed573', borderRadius:\"4px 8px\"}}>Reservé &#128521;</span>\n          </span>\n        </div>\n        )\n    }  else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"refusé\")) {\n      return (\n        <div>\n        <span style={{fontSize:'12px'}}>\n          status : <span style={{backgroundColor:'#ff4757', borderRadius:\"4px 8px\"}}>Refus</span>\n        </span>\n      </div>\n      )\n    } else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"annulé\")) {\n      return (\n        <div>\n        <span style={{fontSize:'12px'}}>\n          status : <span style={{backgroundColor:'#ff4757', borderRadius:\"4px 8px\"}}>Votre reservation a été annulée</span>\n        </span>\n      </div>\n      )\n    } else if (userData.role === 'propriétaire'){\n          return (\n            <div>\n              <span style={{fontSize:'12px'}}>\n                status : {status()}\n              </span>\n            </div>\n          )  \n      }    \n  }\n\n  const ajoutImg = () => {\n    \n      return (\n            <>\n              <div onClick={showModalB} style={{cursor:'pointer'}}  title=\"Voir toutes les images\">\n                 <i className=\"fas fa-image\"></i>\n              </div>\n              <Modal show={isOpenB} onHide={hideModalB}>\n                <Modal.Header>\n                  <Modal.Title>Images</Modal.Title>\n                </Modal.Header>\n                <Modal.Body> <CardaddPic post={post} key={post._id} /></Modal.Body>\n                <Modal.Footer>\n                  <button onClick={hideModalB}>Fermer</button>\n                </Modal.Footer>\n              </Modal>\n            </>\n      ) \n   \n  }\n\n  const dateReservation = () => {\n    {!isEmpty(post.reservations[0]) &&\n      post.reservations.map((reservation) => {\n        return <h1>{shortDateParser(reservation.date_open)}</h1>\n    })\n  }}\n\n  const ficheLocataire = () => {\n    if ((post.clientId !== null) && (userData.role === 'propriétaire') ) {\n      return (\n              <Popup\n                trigger={<i class=\"fas fa-address-card\" title=\"fiche locataire\"></i>}\n                position={[\"bottom right\"]}\n                closeOnDocumentClick>\n                <div>\n                  {!isEmpty(usersData[0]) && \n                    usersData.map((user) => {\n                        if (user._id === post.clientId) {\n                          return (\n                            <>\n                              <p>\n                                Pseudo : {user.pseudo} \n                                         {  (post.status === \"reservé\") &&\n                                            <img src=\"./img/check.png\" alt=\"\"/>\n                                         }\n                                         {  (post.status === \"refusé\") &&\n                                            <img src=\"./img/close.png\" alt=\"\"/>\n                                         }\n                                         {  (post.status === \"attente\") &&\n                                            <img src=\"./img/Spinner.svg\" alt=\"\"/>\n                                         }\n                                         <br/>\n                                {user.email} <br/> \n                                Tel : {user.tel}\n                              </p>\n                            </>\n                          )\n                        }\n                    })\n                  }\n                </div>\n              </Popup>\n      \n      )\n    } else if (post.clientId === null){\n      <div>vfv</div>\n    }\n    \n  }\n\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n \n\n  return (\n    <div>\n      <MDBCard style={{backgroundColor: '#f5f6fa'}}>\n        <li className=\"container\" key={post._id}>\n          {isLoading ? (\n            <i className=\"fas fa-spinner fa-spin\"></i>\n          ) : (\n              <>\n                <div className=\"round\">\n                  <h6 style={{paddingTop: '3px'}}>\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\n                          src={\n                            !isEmpty(usersData[0]) &&\n                            usersData\n                              .map((user) => {\n                                if (user._id === post.posterId) return user.picture;\n                                else return null;\n                              })\n                              .join(\"\")\n                          }\n                          alt=\"poster-pic\"\n                        />\n                        {\"  \"}\n                        {!isEmpty(usersData[0]) &&\n                          usersData\n                            .map((user) => {\n                              if (user._id === post.posterId) return user.pseudo;\n                              else return null;\n                            })\n                            .join(\"\")}\n                      </div>\n                      <div className=\"col-6\">\n                        <div className=\"col-sm\" style={{textAlign:'right'}}>\n                        \n                          <img onClick={showModal} style={{cursor:'pointer'}} src=\"./img/camera.png\" title=\"Prise de vue locataire\"  alt=\"\"/>\n                          <Modal show={isOpen} onHide={hideModal}>\n                            <Modal.Header>\n                              <Modal.Title>Prise de vue et activités à proximité</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body><CardPrises post={post} key={post._id} /></Modal.Body>\n                            <Modal.Footer>\n                              <button onClick={hideModal}>Fermer</button>\n                            </Modal.Footer>\n                          </Modal>\n                          \n                          <br/>\n                          {ajoutImg()}\n                          {ficheLocataire()}\n                          </div>\n                      </div>\n                    </div>\n                  </h6>\n                </div>\n                <div>\n                <h6 style={{fontWeight:\"bold\"}}>{post.titre}</h6>\n                  <div className=\"row\" >\n                    <div className=\"col-sm\">\n                      <>\n                          {post.picture[0] !== \"\" && (\n                            <img height=\"200\" style={{borderRadius: '10px'}} width=\"100%\" src={post.picture[0]} alt=\"card-pic\" className=\"card-pic\" />\n                          )}\n                          {post.video && (\n                            \n                            <iframe\n                              width=\"100%\"\n                              height=\"200\"\n                              style={{borderRadius: '10px', paddingTop: '5px'}}\n                              src={post.video}\n                              frameBorder=\"0\"\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                              allowFullScreen\n                              title={post._id}\n                            ></iframe>\n                          )}\n                     \n                        </>\n                      \n                      {isUpdated && (\n                        <div className=\"update-post\">\n                          <textarea\n                            defaultValue={post.message}\n                            onChange={(e) => setTextUpdate(e.target.value)}\n                          />\n                          <div className=\"button-container\">\n                            <button className=\"btn\" onClick={updateItem}>\n                              Valider modification\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                      <div style={{\n                          position: 'relative',\n                          bottom: '22px',\n                          right: '0px',\n                          display: 'flex',\n                          zIndex: 10,\n                          backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                          color: 'white',\n                          width : '25px',\n                          borderRadius: '50px',\n                          fontWeight: 'bolder',\n                          paddingLeft: '8px'\n                          }}>\n                            {post.picture.length}\n                          </div>\n                    </div>\n                    <div className=\"col-sm\">\n                      <span style={{fontSize:\"12px\"}}>{dateParser(post.createdAt)}</span>\n                      {isUpdated === false && <p>{post.message}</p>}\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>{post.type}</span><br/>\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>{post.prix} € la nuité</span><br/>\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>{post.nbr_personne} personne{post.nbr_personne > 1 ? \"s\" : \"\"}</span><br/>\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>{post.departement}</span><br/>\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>Disponible du {shortDateParser(post.date_open)} au {shortDateParser(post.date_close)}</span><br/>\n                      <span style={{fontSize:\"12px\", fontWeight: 'bolder'}}> {post.reservations ? \n                                                        post.reservations.map((reserve) => {\n                                                          return (<><span>Reservation du {shortDateParser(reserve.date_open)} au {shortDateParser(reserve.date_close)}</span></>)\n                                                          \n                                                        }) : null\n                                                      }\n                      </span>\n                      \n                      {dateReservation()}\n                    </div>\n                  </div>\n                  {userData._id === post.posterId && (\n                    <div className=\"container\">\n                      <div onClick={() => setIsUpdated(!isUpdated)}>\n                      <i className=\"fas fa-edit\"></i>\n                      </div>\n                      <DeleteCard id={post._id} />\n                    </div>\n                  )}\n                  <div className=\"row\">\n                  <div className=\"col-sm\">\n                      <span style={{fontSize:'12px'}}></span>\n                          <i onClick={() => setShowComments(!showComments)} className=\"fas fa-comment\"></i>  {post.comments.length}\n                      \n                  </div>\n                    <div className=\"col-sm\">\n                      <LikeButton post={post} />\n                    </div>\n                    <div className=\"col-sm\">\n                      {uid === null && (\n                        <Popup\n                          trigger={<img \n                            width=\"25px\"\n                            src=\"./img/calendar.png\" alt=\"reserve\" />}\n                          position={[\"bottom center\", \"bottom right\", \"bottom left\"]}\n                          closeOnDocumentClick>\n                          <div>Connectez-vous pour faire une reservation!</div>\n                        </Popup>\n\n                      )}\n                      {uid && (\n                       afficheReservButton()\n                        )}   \n                    </div>\n                    <div className=\"col-sm\">\n                    <Popup\n                      trigger={<img \n                        width=\"15px\"\n                        title=\"Partager\"\n                        src=\"./img/share.png\" alt=\"share\" />}\n                      position={[\"top left\"]}\n                      size={[\"Nano - 10%\"]}\n                      closeOnDocumentClick>\n                        <FacebookShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\" \n                        >\n                          <FacebookIcon size='20px' logoFillColor='white' round={true}></FacebookIcon>\n                        </FacebookShareButton>\n                        {\" \"}\n                        <WhatsappShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <WhatsappIcon  size='20px' logoFillColor='white' round={true}></WhatsappIcon>\n                        </WhatsappShareButton>\n                        {\" \"}\n                        <TwitterShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <TwitterIcon size='20px' logoFillColor='white' round={true}></TwitterIcon>\n                        </TwitterShareButton>\n                        {\" \"}\n                        <LinkedinShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <LinkedinIcon size='20px' logoFillColor='white' round={true}></LinkedinIcon>\n                        </LinkedinShareButton>\n                        {\" \"}\n                        <MailruShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <MailruIcon size='20px' logoFillColor='white' round={true}></MailruIcon>\n                        </MailruShareButton>\n                        {\" \"}\n                        <EmailShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <EmailIcon size='20px' logoFillColor='white' round={true}></EmailIcon>\n                        </EmailShareButton>\n                        {\" \"}\n                        <InstapaperShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <InstapaperIcon size='20px' logoFillColor='white' round={true}></InstapaperIcon>\n                        </InstapaperShareButton>\n                        \n                    </Popup>\n\n                    </div>\n\n                  </div>\n                  {showComments && <CardComments post={post} />}\n                </div>\n              </>\n            )}\n        </li>\n      </MDBCard>\n    </div>\n  );\n};\n\nexport default Card;\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\SearchForm.js",["1236","1237"],"import { MDBCard, MDBCardBody } from \"mdbreact\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isEmpty } from \"../Utilitaires\";\r\nimport Card from \"./Card\";\r\n\r\nconst SearchForm = () => {\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const [searcharr, setSearcharr] = useState('')\r\n  const [searchdep, setSearchdep] = useState('')\r\n  const [type, setType] = useState('')\r\n\r\n  const refrechSearch = () => {\r\n    setSearcharr('');\r\n    setSearchdep('');\r\n    setType('');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <MDBCard>\r\n        <MDBCardBody>\r\n      <div className=\"row\">\r\n        \r\n      <div className=\"col-12\">\r\n        <label style={{color:'#f39200'}}>Date d'arriver</label>\r\n        <input\r\n          htmlFor=\"date_arr\"\r\n          type=\"date\"\r\n          id=\"date_arr\"\r\n          onChange={e => setSearcharr(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"col-12\">\r\n        <label style={{color:'#f39200'}}>Date de départ</label>\r\n          <input\r\n            htmlFor=\"date_dep\"\r\n            type=\"date\"\r\n            id=\"date_dep\"\r\n            onChange={e => setSearchdep(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <select onChange={(e) => setType(e.target.value)} name=\"type\" id=\"type\"  class=\"browser-default custom-select\" >\r\n            <option value=\"\">***Type***</option>\r\n            <option value=\"cabane dans les arbres\">cabane dans les arbres</option>\r\n            <option value=\"cabane flottante\">cabane flottante</option>\r\n            <option value=\"yourte\">yourte</option>\r\n          </select> \r\n       </div>\r\n       <div className=\"col-2\"></div>\r\n        <div className=\"col-2\">\r\n            <i title=\"Rafraîchir\" onClick={refrechSearch} class=\"fas fa-sync-alt\"></i>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n            if((post.status === \"non_reservé\")) {\r\n              if (\r\n                (((searcharr < post.date_open) || (post.date_close > searcharr))\r\n                && (searcharr > post.date_open))\r\n                \r\n              ) {\r\n                if (searchdep <= post.date_close) {\r\n                  return (\r\n                  <div>\r\n                    <p style={{ color: '#f39200', fontWeight: 'bold' }}>Disponible</p>\r\n                    <Card post={post} key={post._id} />\r\n                  </div>\r\n\r\n                )\r\n                }\r\n              \r\n                \r\n                }\r\n              \r\n              }}\r\n          )}\r\n      </div>\r\n      <div>\r\n      {!isEmpty(posts[0]) && \r\n        posts.map((post) => {\r\n          if( (post.type === type) && (post.status === \"non_reservé\")) {\r\n              return (\r\n                <div>\r\n                  <p style={{ color: 'green' }}>{post.type}</p>\r\n                  <Card post={post}key={post._id} />\r\n                </div>\r\n                )\r\n          }\r\n        })\r\n      }\r\n      </div>\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\NewPostForm.js",["1238","1239","1240"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"../Utilitaires\";\nimport { addPost, getPosts } from \"../../actions/postAction\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody} from 'mdbreact';\nimport {GoogleData } from \"../../data/GoogleData\";\n\n\nconst NewPostForm = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [formSubmit, setFormSubmit] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [titre, setTitre] = useState(\"\");\n  const [superficie, setSuperficie] = useState(\"\");\n  const [prix, setPrix] = useState(\"\");\n  const [date_open, setDate_open] = useState(\"\");\n  const [date_close, setDate_close] = useState(\"\");\n  const [departement, setDepartement] = useState(\"\");\n  const [lng, setLng] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [nbr_personne, setNbr_personne] = useState(\"\");\n  const status = 'ajout_images';\n  const clientId = null;\n  const [postPicture, setPostPicture] = useState(\"\");\n  const [video, setVideo] = useState(\"\");\n  const [file, setFile] = useState([]);\n  const userData = useSelector((state) => state.userReducer);\n  const error = useSelector((state) => state.errorReducer.postError);\n  const dispatch = useDispatch();\n\n  const [selectedImages, setSelectedImages] = useState([])\n  const imageHandleChange = (e) => {\n      if(e.target.files) {\n        const fileArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file))\n       \n        setSelectedImages((prevImages) =>prevImages.concat(fileArray));\n        setFile(e.target.files[0]);\n      }\n\n  };\n  const renderPhotos = (source) => {\n\t\treturn source.map((photo) => {\n\t\t\treturn <img height=\"200px\" width=\"50%\" src={photo} alt=\"\" key={photo} />;\n\t\t});\n\t};\n  /*\n  const handlePicture = (e) => {\n    setPostPicture(URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setVideo('');\n  }; \n  */\n\n  const handlePost = async (e) => {\n    e.preventDefault();\n    if (message && (file!== [])) {\n      const data = new FormData();\n      data.append('posterId', userData._id);\n      data.append('role', userData.role);\n      data.append('message', message);\n      data.append('titre', titre);\n      data.append('superficie', superficie);\n      data.append('prix', prix);\n      data.append('date_open', date_open);\n      data.append('date_close', date_close);\n      data.append('departement', departement);\n      data.append('lng', lng);\n      data.append('lat', lat);\n      data.append('type', type);\n      data.append('status', status);\n      data.append('clientId', clientId);\n      data.append('nbr_personne', nbr_personne);\n      if (file) data.append(\"file\", file);\n      data.append('video', video);\n      await dispatch(addPost(data));\n      dispatch(getPosts());\n      cancelPost();\n      setFormSubmit(true);\n      console.log(file);\n    } \n     else {\n      alert(\"Veuillez entrer toutes les informations \")\n      console.log(file)\n    }\n  };\n \n  const cancelPost = () => {\n    setMessage(\"\");\n    setTitre(\"\");\n    setSuperficie(\"\");\n    setPrix(\"\");\n    setDate_open(\"\");\n    setDate_close(\"\");\n    setDepartement(\"\");\n    setLat(\"\");\n    setLng(\"\");\n    setType(\"\");\n    setPostPicture(\"\");\n    setVideo(\"\");\n    setFile(\"\");\n    setSelectedImages(\"\");\n  };\n\n\n  useEffect(() => {\n    if (!isEmpty(userData)) setIsLoading(false);\n\n    const handleVideo = () => {\n      let findLink = message.split(\" \");\n      for (let i = 0; i < findLink.length; i++) {\n        if (\n          findLink[i].includes(\"https://www.yout\") ||\n          findLink[i].includes(\"https://yout\")\n        ) {\n          let embed = findLink[i].replace(\"watch?v=\", \"embed/\");\n          setVideo(embed.split(\"&\")[0]);\n          findLink.splice(i, 1);\n          setMessage(findLink.join(\" \"));\n          setPostPicture('');\n        }\n      }\n    };\n    handleVideo();\n  }, [userData, message, video]);\n\n  return (\n    <>\n      {formSubmit ? (\n         <>\n         <h4 className=\"success\" style={{textAlign:'center', paddingTop:'15%'}}>\n             Votre publication a bien été enregistrée, rendez-vous dans la rubrique \"Mes offres\" pour ajouter 4 autres images.\n             <br/> Ce nombre d'image est requis suite a une expérience des locataires. \n             <br/>\n             Après cette étape, votre publication devra être valider par notre équipe, pour figurer sur liste des offres.\n         </h4>\n         <div class=\"success-animation\">\n             <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"><circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" /><path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" /></svg>\n         </div>\n         \n         <span></span>\n         </>\n      ) : (\n        <>\n    <MDBContainer>\n    <MDBRow>\n      <MDBCol md=\"12\">\n        <MDBCard >\n          <MDBCardBody>\n            <p style={{backgroundColor:'#ff9f1a'}}>Déposer votre annonce</p>\n            <form action=\"\" enctype=\"multipart/form-data\" >\n              <div className=\"grey-text\">\n                <MDBInput\n                required\n                  label=\"titre\"\n                  type=\"text\"\n                  name=\"titre\"\n                  id=\"titre\"\n                  onChange={(e) => setTitre(e.target.value)}\n                  value={titre}\n                />\n                <br/>\n                  <select  name=\"type\" id=\"type\" onChange={(e) => setType(e.target.value)} value={type}  class=\"browser-default custom-select\" >\n                    <option value=\"\">----- Type -----</option>\n                    <option value=\"cabane dans les arbres\">cabane dans les arbres</option>\n                    <option value=\"cabane flottante\">cabane flottante</option>\n                    <option value=\"yourte\">yourte</option>\n                    <option value=\"yourte\">Autre</option>\n                  </select>\n               \n                <MDBInput\n                  label=\"superficie (m²)\"\n                  type=\"number\"\n                  name=\"superficie\"\n                  id=\"superficie\"\n                  onChange={(e) => setSuperficie(e.target.value)}\n                  value={superficie}\n                />\n                <br/>\n                <select  name=\"departement\" id=\"departement\" onChange={(e) => setDepartement(e.target.value)} value={departement}  class=\"browser-default custom-select\" >\n                          <option value=\"\">--- Département ---</option>\n                    {GoogleData.sort((a, b) => {\n                      if(a.name < b.name) return -1;\n                      if(a.name > b.name) return 1;\n                    }).map((val, key) => {\n                      return (\n                          <option value={val.name} key={key}>{val.name}</option>\n                          )\n                      })} \n                </select>\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <MDBInput\n                      label=\"Longitude\"\n                      type=\"number\"\n                      name=\"lng\"\n                      id=\"lng\"\n                      onChange={(e) => setLng(e.target.value)}\n                      value={lng}\n                    />\n                  </div>\n                  <div className=\"col-6\">\n                    <MDBInput\n                      label=\"Latitude\"\n                      type=\"number\"\n                      name=\"lat\"\n                      id=\"lat\"\n                      onChange={(e) => setLat(e.target.value)}\n                      value={lat}\n                    />\n                  </div>\n                </div>\n                <MDBInput\n                  label=\"prix (€) /nuit\"\n                  type=\"number\"\n                  name=\"prix\"\n                  id=\"prix\"\n                  onChange={(e) => setPrix(e.target.value)}\n                  value={prix}\n                />\n                <MDBInput\n                required\n                  label=\"nombre de personne\"\n                  type=\"number\"\n                  name=\"nbr_personne\"\n                  id=\"nbr_personne\"\n                  onChange={(e) => setNbr_personne(e.target.value)}\n                  value={nbr_personne}\n                />\n                <MDBInput\n                required\n                  label=\"Date début de disponibilité\"\n                  type=\"date\"\n                  name=\"date_open\"\n                  id=\"date_open\"\n                  onChange={(e) => setDate_open(e.target.value)}\n                  value={date_open}\n                />\n                <MDBInput\n                required\n                  label=\"Date fin de disponibilité\"\n                  type=\"date\"\n                  name=\"date_close\"\n                  id=\"date_close\"\n                  onChange={(e) => setDate_close(e.target.value)}\n                  value={date_close}\n                />\n                <textarea \n                  class=\"form-control rounded-0\" \n                  id=\"exampleFormControlTextarea2\" \n                  rows=\"3\"\n                  name=\"message\"\n                  placeholder=\"Décrivez votre offre...\"\n                  onChange={(e) => setMessage(e.target.value)}\n                  value={message}\n                ></textarea>\n              </div>\n              <div className=\"footer-form\">\n                  <div className=\"icon\">\n                    {isEmpty(video) && (\n                      <>\n                        <input\n                          required\n                          type=\"file\"\n                          id=\"file\"\n                          name=\"file\"\n                          accept=\".jpg, .jpeg, .png\"\n                          onChange={imageHandleChange}\n                        />\n                      </>\n                    )}\n                    {video && (\n                      <MDBBtn onClick={() => setVideo(\"\")}>Supprimer video</MDBBtn>\n                    )}\n                  </div>\n                  {!isEmpty(error.format) && <p>{error.format}</p>}\n                  {!isEmpty(error.maxSize) && <p>{error.maxSize}</p>}\n                  <div className=\"btn-send\">\n                    {message || selectedImages || video.length > 20 ? (\n                      <MDBBtn className=\"cancel\" onClick={cancelPost}>\n                        Annuler la plublication\n                      </MDBBtn>\n                    ) : null}\n                    <MDBBtn type=\"submit\" onClick={handlePost}>\n                      Envoyer\n                    </MDBBtn>\n                  </div>\n              </div>\n            </form>\n          </MDBCardBody>\n        </MDBCard>\n        <MDBCard>\n            <MDBCardBody>\n              <p style={{backgroundColor:'#ff9f1a'}}>Aperçu des images</p>\n                  {message || selectedImages || video.length > 20 ? (\n                \n                <div className=\"right\">\n                    <div className=\"content\">\n                      <div className=\"row\">\n                        {renderPhotos(selectedImages)}\n                      </div>\n                      \n                      {video && (\n                        <iframe\n                          src={video}\n                          frameBorder=\"0\"\n                          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                          allowFullScreen\n                          title={video}\n                        ></iframe>\n                      )}\n                    </div>\n                </div>\n              \n              ) : null}\n            </MDBCardBody>\n          </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  </MDBContainer>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default NewPostForm;\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\ReservationForm.js",["1241","1242","1243","1244","1245","1246","1247","1248","1249"],"import React, { useEffect, useState } from \"react\";\r\nimport { isEmpty, shortDateParser } from \"../../components/Utilitaires\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StripeCheckout from \"react-stripe-checkout\"\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { MDBBtn, MDBInput } from 'mdbreact';\r\nimport { addReservation, deleteReserve, editReservation, getPosts, sendEmail, sendJustificatif, updateStatus } from \"../../actions/postAction\";\r\nimport Map from \"../GoogleMap/Map\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport MsgData from '../../data/MsgData';\r\nimport LeftNav from \"../LeftNav\";\r\n\r\n \r\nconst ReservationForm = ({ post }) => {\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const status = \"attente\"\r\n  const [date_open, setDate_open] = useState(\"\");\r\n  const [date_close, setDate_close] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [paiement, setPaiement] = useState(\"\");\r\n\r\n\r\n  const notifySuccess = () => {\r\n    toast.success('Réservation réusiite!', {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n  }\r\n\r\n  const confirmReservation = () => {\r\n    dispatch(updateStatus(post._id, post.message, status, userData._id, userData.role));\r\n    {!isEmpty(usersData[0]) &&\r\n      usersData.map((user) => {\r\n      if (post.posterId === user._id) {\r\n        dispatch(sendEmail(user.email, user.pseudo, MsgData[1].subject, MsgData[1].text))\r\n      }})\r\n    }\r\n    \r\n  }\r\n\r\n  const double = (e) => {\r\n    e.preventDefault();\r\n    notifySuccess();\r\n    confirmReservation();\r\n    window.location.reload(false);\r\n    \r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  const images = [\r\n    {\r\n      original: `${post.picture[0]}`,\r\n      thumbnail: `${post.picture[0]}`,\r\n    },\r\n    {\r\n      original: `${post.picture[1]}`,\r\n      thumbnail: `${post.picture[1]}`,\r\n    },\r\n    {\r\n      original: `${post.picture[2]}`,\r\n      thumbnail: `${post.picture[2]}`,\r\n    },\r\n    {\r\n      original: `${post.picture[3]}`,\r\n      thumbnail: `${post.picture[3]}`,\r\n    },\r\n    {\r\n      original: `${post.picture[4]}`,\r\n      thumbnail: `${post.picture[4]}`,\r\n    },\r\n   \r\n  ];\r\n\r\n  const makePayment = token => {\r\n    const body = {\r\n      token,\r\n      post\r\n    }\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    return fetch(`${process.env.REACT_APP_API_URL}api/user/payment`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(body)\r\n    }\r\n    ).then(response => {\r\n      const { status } = response;\r\n      post.reservations.map((reservation) => {\r\n        if(reservation.reservationId === userData._id) {      \r\n           dispatch(editReservation(post._id, reservation._id, post.prix));\r\n           dispatch(sendJustificatif(userData.email, userData.pseudo, post.prix, post.titre))\r\n        }\r\n      })\r\n      \r\n    })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n\r\n\r\n  const notify = () => {\r\n    toast.warn('Demande déjà été prise en compte, en attente de validation', {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n  }\r\n\r\n  \r\n  const notifyNoDate = () => {\r\n    toast.info('Veuillez saisir les dates de reservation', {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n  }\r\n\r\n  const notifyReservation = () => {\r\n    toast.success('Dates de reservation enregistré avec succès!', {\r\n      position: \"top-right\",\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n  }\r\n\r\n  const notPaye = () => {\r\n    toast.error('Veuillez confirmer la reservation avant d\\'effectuer le paiement!', {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n  }\r\n\r\n\r\n  const handleDate = (e) => {\r\n    e.preventDefault();\r\n    if ((date_open !== \"\") && (date_close !== \"\")) {\r\n      if ((date_open >= post.date_open) && (date_close <= post.date_close)) {\r\n          if (date_open > date_close) {\r\n          alert(\"Vos dates sont incorrectes \")\r\n          } \r\n          else if ( date_open === date_close ) {\r\n            alert(\"Vos dates sont incorrectes \") \r\n          }\r\n          else {\r\n            dispatch(addReservation(post._id, userData._id, userData.pseudo, userData.role, paiement, date_open, date_close))\r\n            .then(() => dispatch(getPosts()))\r\n            .then(() => setDate_open(''))\r\n            .then(() => setDate_close(''));\r\n            setShowForm(true);\r\n            notifyReservation();\r\n          }\r\n        \r\n      } else {\r\n          alert(\"Veuillez entrer des dates valides \")\r\n      }\r\n    } \r\n    else {\r\n      alert(\"Veuillez entrer deux dates \")\r\n    }\r\n    \r\n  }\r\n \r\n\r\n  const deleteDate = (e) => {\r\n    e.preventDefault();\r\n    post.reservations.map((reservation) => {\r\n      if(reservation.reservationId === userData._id) {\r\n            dispatch(deleteReserve(post._id, reservation._id));\r\n            setShowForm(false);\r\n            dispatch(updateStatus(post._id, post.message, \"non_reservé\", userData._id));\r\n\r\n\r\n      }\r\n    })\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"row\">\r\n        <div className=\"col-1\" style={{ float: 'right'}}>\r\n          <LeftNav />\r\n        </div>\r\n        <div className=\"col-11\">\r\n\r\n    <div style={{ textAlign:'left'}}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                      <h3>{post.titre}</h3>\r\n                      <h4>{post.prix} € la nuité</h4>\r\n                  <ul>\r\n                      {post.video && (\r\n                      <iframe\r\n                          width=\"100%\"\r\n                          height=\"400\"\r\n                          src={post.video}\r\n                          frameBorder=\"0\"\r\n                          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                          allowFullScreen\r\n                          title={post._id}\r\n                      ></iframe>\r\n                      )}\r\n                      <br/>\r\n                      <ImageGallery items={images} />\r\n                      \r\n                      <span>Type : {post.type} <br/> Département : {post.departement} <br/> Pour {post.nbr_personne} personne{post.nbr_personne > 1 ? \"s\" : \"\"}</span>\r\n                      <h5>{post.price}</h5>\r\n                      <span style={{fontSize:\"12px\"}}>Disponible du {shortDateParser(post.date_open)} au {shortDateParser(post.date_close)}</span>\r\n                      \r\n                      <hr/>\r\n                      <h4 style={{fontWeight: 'bolder'}}>Dates de réservation</h4>\r\n                        \r\n                      {isEmpty(post.reservations[0]) &&  \r\n                      <form action=\"\" onSubmit={handleDate}>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-4\">\r\n                            <MDBInput\r\n                              label=\"A partir\"\r\n                              type=\"date\"\r\n                              name=\"date_open\"\r\n                              id=\"date_open\"\r\n                              onChange={(e) => setDate_open(e.target.value)}\r\n                              value={date_open}  \r\n                            />\r\n                          </div>\r\n                          <div className=\"col-4\">\r\n                            <MDBInput\r\n                              label=\"Jusqu'au\"\r\n                              type=\"date\"\r\n                              name=\"date_close\"\r\n                              id=\"date_close\"\r\n                              onChange={(e) => setDate_close(e.target.value)}\r\n                              value={date_close}  \r\n                            />\r\n                          </div>\r\n                          <div className=\"col-4\">\r\n                            <MDBBtn type=\"submit\">\r\n                              Valider\r\n                            </MDBBtn>\r\n                          </div> \r\n                        </div>\r\n                      </form>\r\n                      } \r\n                      \r\n                      {post.reservations.map((reservation) => {\r\n                            if(reservation.reservationId === userData._id) {\r\n                            return ( \r\n                              <>\r\n                                <p>Reservation du {shortDateParser(reservation.date_open)} au {shortDateParser(reservation.date_close)} <img src=\"./img/check.png\" alt=\"\"/></p>\r\n                                <MDBBtn onClick={deleteDate}>\r\n                                  Annuler\r\n                                </MDBBtn>\r\n                                <p style={{ color: '#cc3300', fontSize: '11px'}}>En cas d'annulation après paiement, la somme perçue vous sera remboursée dans un delais de 5 jours'</p>\r\n                                </>\r\n                              )}\r\n                      })}\r\n                  \r\n                                  \r\n                      \r\n                      <hr />\r\n                      <h5>Détails</h5>\r\n                      <p>{post.message}</p>\r\n                      <hr />\r\n                      <Map post={post} key={post._id} />\r\n                  </ul>\r\n                  \r\n                  <hr/>\r\n                  <h5> Les informations du propriétaire</h5>\r\n                  <div>\r\n                      {!isEmpty(usersData[0]) &&\r\n                          usersData.map((user) => {\r\n                          if (post.posterId === user._id) {\r\n                              return <div>\r\n                              <br />\r\n                                      * Pseudo\r\n                                      <h3> {user.pseudo}</h3>\r\n                                      * Email\r\n                                      <h5> {user.email}</h5>\r\n                                      * Numéro de tel\r\n                                      <h5> {user.tel}</h5>\r\n                                  </div>\r\n                          }\r\n                      })} \r\n                      \r\n                  </div>\r\n                  <br/>\r\n                  <br/>\r\n                  {(post.status === \"non_reservé\") && showForm && (\r\n                      <>\r\n                        <MDBBtn type=\"button\" onClick={double}>\r\n                          Confirmer reservation\r\n                        </MDBBtn>\r\n                        <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={5000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                        />\r\n                      </>\r\n                    ) }\r\n                  \r\n                  {((post.status === \"non_reservé\") || (post.status === \"refusé\")) && !showForm && (      \r\n                      <>\r\n                        <MDBBtn type=\"button\" onClick={notifyNoDate}>\r\n                          Confirmer reservation\r\n                        </MDBBtn>\r\n                        <ToastContainer\r\n                          position=\"top-right\"\r\n                          autoClose={5000}\r\n                          hideProgressBar={false}\r\n                          newestOnTop={false}\r\n                          closeOnClick\r\n                          rtl={false}\r\n                          pauseOnFocusLoss\r\n                          draggable\r\n                          pauseOnHover\r\n                        />\r\n                        <ToastContainer />\r\n                      </>\r\n                  )}\r\n                  \r\n                  {post.status === \"attente\"  && (\r\n                    <>\r\n                    <MDBBtn type=\"button\" onClick={notify}>\r\n                      Confirmer reservation\r\n                    </MDBBtn>\r\n                    <ToastContainer\r\n                      position=\"top-right\"\r\n                      autoClose={5000}\r\n                      hideProgressBar={false}\r\n                      newestOnTop={false}\r\n                      closeOnClick\r\n                      rtl={false}\r\n                      pauseOnFocusLoss\r\n                      draggable\r\n                      pauseOnHover\r\n                    />\r\n                    <ToastContainer />\r\n                    \r\n                    <br/>\r\n                    {post.reservations.map((reservation) => {\r\n                            if (reservation.paiement === null) {\r\n                              return (\r\n                                <StripeCheckout\r\n                                  stripeKey=\"pk_test_51IQafJDRHvU06AUoTyjd7f3g4TuEJI2wfvRwZxHKSuHQvfZE8J5Dy9GAgeNcH5oZoK6HDa1cYUFyaLKwis59tvRd00ZAf60pn1\"\r\n                                  token={makePayment}\r\n                                  name=\"By Merith\"\r\n                                  amount={post.prix * 100}\r\n                                >\r\n                                  <button className=\"btn-large\" style={{backgroundColor: '#17233e', borderRadius: '15px'}} >Payer {post.prix} €</button>\r\n                                </StripeCheckout> \r\n                              )\r\n                                \r\n                            } else {\r\n                              return <p style={{fontWeight:'bold', color:'green'}}>Paiement effectué, un justificatif vous a été envoyé dans votre boite mail <img src=\"./img/check.png\" alt=\"\"/></p>\r\n                              \r\n                            }\r\n                        }\r\n                    )} \r\n                    </>\r\n                  )}\r\n\r\n                  {post.status === \"non_reservé\" && \r\n                    <>\r\n                      <br/>\r\n                      <button className=\"btn-large\" style={{backgroundColor: '#17233e', borderRadius: '15px'}} onClick={notPaye}>Payer {post.prix} €</button>\r\n                      <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={5000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                      />\r\n                    </>\r\n                  }\r\n\r\n                  \r\n                  </div>\r\n              </div>\r\n            </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ReservationForm\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\Dropdown.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\CardPrises.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\NavBarPro.js",["1250","1251"],"import React, { useContext } from 'react'\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport styled, { css } from \"styled-components/macro\"\r\nimport {Link}  from 'react-router-dom'\r\nimport { menuData, menuDataPro } from '../../data/MenuData';\r\nimport { Button } from './Button';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport Logout from '../Log/Logout';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Nav = styled.nav`\r\n    color: #000;\r\n    height : 60px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem 5rem 0 2rem;\r\n    z-index: 100;\r\n    position: fixed;\r\n    width: 100%;\r\n    background-color:#fff;\r\n`;\r\n\r\nconst NavLink = css`\r\n    color: #000;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 1rem 0 2rem;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        transform: translateY(-2px);\r\n        color: #f39200;\r\n        font-weight: bold;\r\n    }\r\n`\r\n\r\n\r\nconst Logo = styled(Link)`\r\n    ${NavLink}\r\n    \r\n\r\n`\r\n\r\nconst MenuBars = styled(FaBars)`\r\n    display: none;\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n        color: #f39200;\r\n        font-weight: bold;\r\n    }\r\n\r\n    @media screen and (max-width: 1007px){\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n    display : flex;\r\n    align-items: center;\r\n    margin-right: -48px;\r\n\r\n    @media screen and (max-width: 1007px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst NavMenuLinks = styled(Link)`\r\n    ${NavLink}\r\n    \r\n`;\r\n\r\nconst NavBtn = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 24px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\n\r\nconst NavBarPro = ({toggle}) => {\r\n\r\n    const uid = useContext(UidContext);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <Nav>\r\n            <Logo><h3 style={{ color: '#f39200', fontFamily: 'fantasy' }}>AtypikHouse</h3></Logo>\r\n            {uid &&\r\n                <NavMenuLinks to='profil_pro'>\r\n                    <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                    src={userData.picture}     \r\n                    alt=\"poster-pic\"\r\n                    />\r\n                </NavMenuLinks>\r\n            }\r\n            <MenuBars onClick={toggle}/>\r\n            <NavMenu>\r\n            {uid ? (\r\n                menuDataPro.map((item, index) => (\r\n                <NavMenuLinks to= {item.link}  key={index}>\r\n                    {item.title}\r\n                </NavMenuLinks>\r\n                ))) : (\r\n                menuData.map((item, index) => (\r\n                    <NavMenuLinks to= {item.link}  key={index}>\r\n                        {item.title}\r\n                    </NavMenuLinks>\r\n                ))) }\r\n                {uid ? (\r\n                    <Logout />\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </NavMenu>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default NavBarPro\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\NavBar.js",["1252","1253"],"import React, { useContext } from 'react'\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport styled, { css } from \"styled-components/macro\"\r\nimport {Link}  from 'react-router-dom'\r\nimport { menuData, menuDataLocaitaire } from '../../data/MenuData';\r\nimport { Button } from './Button';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport Logout from '../Log/Logout';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Nav = styled.nav`\r\n    color: #000;\r\n    height : 60px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem 5rem 0 2rem;\r\n    z-index: 100;\r\n    position: fixed;\r\n    width: 100%;\r\n    background-color:#fff;\r\n`;\r\n\r\nconst NavLink = css`\r\n    color: #000;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 1rem 0 2rem;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        transform: translateY(-2px);\r\n        color: #f39200;\r\n        font-weight: bold;\r\n    }\r\n`\r\n\r\n\r\nconst Logo = styled(Link)`\r\n    ${NavLink}\r\n    \r\n\r\n`\r\n\r\nconst MenuBars = styled(FaBars)`\r\n    display: none;\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n        color: #f39200;\r\n        font-weight: bold;\r\n    }\r\n\r\n    @media screen and (max-width: 1007px){\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n    display : flex;\r\n    align-items: center;\r\n    margin-right: -48px;\r\n\r\n    @media screen and (max-width: 1007px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst NavMenuLinks = styled(Link)`\r\n    ${NavLink}\r\n    \r\n`;\r\n\r\nconst NavBtn = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 24px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst NavBar = ({toggle}) => {\r\n\r\n    const uid = useContext(UidContext);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <Nav>\r\n            <Logo to='/accueil'><h3 style={{ color: '#f39200', fontFamily: 'fantasy' }}>AtypikHouse</h3></Logo>\r\n            {uid &&\r\n                <NavMenuLinks to='profil'>\r\n                    <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                    src={userData.picture}     \r\n                    alt=\"poster-pic\"\r\n                    />\r\n                </NavMenuLinks>\r\n            }\r\n            <MenuBars onClick={toggle}/>\r\n            <NavMenu>\r\n            {uid ? (\r\n                menuDataLocaitaire.map((item, index) => (\r\n                <NavMenuLinks to= {item.link}  key={index}>\r\n                    {item.title}\r\n                </NavMenuLinks>\r\n                ))) : (\r\n                menuData.map((item, index) => (\r\n                    <NavMenuLinks to= {item.link}  key={index}>\r\n                        {item.title}\r\n                    </NavMenuLinks>\r\n                ))) }\r\n                {uid ? (\r\n                    <Logout />\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </NavMenu>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\DropdownPro.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\Hero.js",["1254","1255","1256","1257"],"import React, {useState, useRef, useEffect} from 'react'\r\nimport styled, { css } from 'styled-components/macro';\r\nimport { Button } from './Button';\r\nimport { IoMdArrowRoundForward } from 'react-icons/io';\r\nimport { IoArrowForward, IoArrowBack } from 'react-icons/io5'\r\nimport { useSelector } from 'react-redux';\r\nimport SearchForm from '../Post/SearchForm';\r\n\r\nconst HeroSection = styled.section`\r\n    height: 60vh;\r\n    max-height: 1100px;\r\n    position: relative;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst HeroWrapper = styled.div`\r\n    width:100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n    overflow: hidden;\r\n    position: relative;\r\n`;\r\n\r\nconst HeroSlide = styled.div`\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst HeroSlider = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &::before {\r\n        content: '';\r\n        position: absolute;\r\n        z-index: 2;\r\n        width: 100%;\r\n        height: 100vh;  \r\n        bottom: 0vh;\r\n        left: 0; \r\n        overflow: hidden;\r\n        opacity: 0.4;\r\n        background: linear-gradient(\r\n            0deg, rgba(0,0,0,0.2) 0%, \r\n            rgba(0,0,0,0.2) 50%, \r\n            rgba(0,0,0,0.6) 100%)\r\n    };\r\n\r\n`;\r\n\r\nconst HeroImage = styled.img`\r\n    position: absolute;\r\n    top:0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    \r\n`;\r\n\r\nconst HeroContent = styled.div`\r\n    position: relative;\r\n    z-index: 10;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width:1600px;\r\n    width:calc(100% - 100px);\r\n    color: #fff;\r\n\r\n    h1 {\r\n        font-size: clamp(1rem, 8vw, 2rem);\r\n        font-weight: bolder;\r\n        text-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);\r\n        text-align: left;\r\n        margin-bottom: 0.8rem;\r\n        color:#fff;\r\n    }\r\n\r\n    p {\r\n        margin-bottom: 1.2rem;\r\n        text-shadow: 0px 0px 20px rgba(0, 0, 0, 0.4);\r\n    }\r\n`;\r\n\r\nconst Arrow = styled(IoMdArrowRoundForward)`\r\n    margin-left: 0.5rem;\r\n`;\r\n\r\nconst SliderButtons = styled.div`\r\n    position absolute;\r\n    bottom: 50px;\r\n    right: 50px;\r\n    display: flex;\r\n    z-index: 10;\r\n`;\r\n\r\nconst arrowButtons = css`\r\n    width: 50px;\r\n    height: 50px;\r\n    color: #fff;\r\n    cursor : pointer;\r\n    background: #17233e;\r\n    border-radius: 50px;\r\n    padding: 10px;\r\n    margin-right: 1rem;\r\n    user-select: none;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background: #f39200;\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst PrevArrow = styled(IoArrowBack)`\r\n    ${arrowButtons}\r\n`;\r\n\r\nconst NextArrow = styled(IoArrowForward)`\r\n    ${arrowButtons}\r\n`;\r\n\r\nconst Hero = () => {\r\n    const [current, setCurrent] = useState(0);\r\n    const timeout = useRef(null);\r\n    const paramData = useSelector((state) => state.paramReducer);\r\n    const length = paramData.length;\r\n\r\n  /* useEffect(() => {\r\n        const nextSlide = () => {\r\n            setCurrent(current => ( current === length - 1 ? 0 : current + 1))\r\n        }\r\n\r\n        timeout.current = setTimeout(nextSlide, 3000)\r\n\r\n        return function () {\r\n            if(timeout.current) {\r\n                clearTimeout(timeout.current)\r\n            }\r\n        }\r\n    }, [current, length])*/\r\n    const nextSlide = () => {\r\n        if(timeout.current) {\r\n            clearTimeout(timeout.current)\r\n        }\r\n\r\n        setCurrent(current === length - 1 ? 0 : current + 1);\r\n\r\n       // console.log(current);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n        if(timeout.current) {\r\n            clearTimeout(timeout.current)\r\n        }\r\n\r\n        setCurrent(current === 0 ? length - 1 : current - 1);\r\n\r\n       // console.log(current);\r\n    };\r\n\r\n    if(!Array.isArray(paramData) || paramData.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <HeroSection>\r\n            <HeroWrapper>  \r\n                \r\n                {paramData.map((slide, index) => {\r\n                    return (\r\n                        <HeroSlide key={index}>\r\n                            {index === current && (\r\n                                <HeroSlider>\r\n                                <HeroImage src={slide.picture} alt=\"location\" />\r\n                                <HeroContent>\r\n                                    <h1>{slide.titre}</h1>\r\n                                    <p>{slide.prix}€ / {slide.temps}</p>\r\n                                    \r\n                                </HeroContent>\r\n                            </HeroSlider>\r\n                            )}\r\n                        </HeroSlide>\r\n                    )\r\n                })}\r\n                <SliderButtons>\r\n                    <PrevArrow onClick={prevSlide}/>\r\n                    <NextArrow onClick={nextSlide}/>\r\n                </SliderButtons>\r\n            </HeroWrapper>\r\n        </HeroSection>\r\n    )\r\n}\r\n\r\nexport default Hero;\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\InfoSection.js",["1258"],"import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\nimport { Button } from './Button';\r\n\r\nconst InfoSection = () => {\r\n    const sectionData = useSelector(state => state.sectionReducer);\r\n   \r\n    const Section = styled.section`\r\n    width: 65vw;\r\n    height: 100%;\r\n    padding: 0 5rem 0 0;\r\n    `;\r\n\r\n    const Container = styled.div`\r\n    width: 100%;\r\n    padding: 2rem calc((100vw - 1300px) /2);\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n    `;\r\n\r\n    const ColunmLeft = styled.div`\r\n    display:flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    line-height: 1.4;\r\n    padding: 1rem 2rem;\r\n    order: ${({ reverse}) => (reverse ? '1' : '2')};\r\n\r\n    h1 {\r\n        margin-bottom: 1rem;\r\n        font-size: clamp(1.5rem, 6vw, 2rem);\r\n    }\r\n\r\n    p {\r\n        margin-bottom: 2rem;\r\n    }\r\n    `;\r\n\r\n    const ColumnRight = styled.div`\r\n    padding: 1rem 2rem;\r\n    order: ${({ reverse }) => (reverse ? '1' : '2' )};\r\n\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        order: ${({ reverse}) => (reverse ? '2' : '1')};\r\n    }\r\n\r\n    img {\r\n        border-radius: 13px;\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n\r\n        @media screen and (max-width: 768px) {\r\n            width: 90%;\r\n            height: 90%;\r\n        }\r\n    }\r\n    `;\r\n\r\n    if(!Array.isArray(sectionData) || sectionData.length <= 0) {\r\n        return null;\r\n    }\r\n   \r\n    return (\r\n       <Section>\r\n        {sectionData.map((section, index) => {\r\n            if(section.reverse === true) {\r\n                 return (\r\n                    <Container>\r\n                        <ColunmLeft>\r\n                            <h1 key={index}>{section.titre}</h1>\r\n                            <p key={index}>{section.paragraph}</p>\r\n                            \r\n                        </ColunmLeft>\r\n                        <ColumnRight reverse>\r\n                            <img src={section.picture} alt='location' key={index}/>\r\n                        </ColumnRight>\r\n                    </Container> \r\n                )\r\n            } else if (section.reverse === false) {\r\n                return (\r\n                    <Container>\r\n                        <ColunmLeft>\r\n                            <h1 key={index}>{section.titre}</h1>\r\n                            <p key={index}>{section.paragraph}</p>\r\n                            \r\n                            <Button to=\"/details\" ><i class=\"fas fa-arrow-circle-right\"></i></Button>\r\n                        </ColunmLeft>\r\n                        <ColumnRight >\r\n                            <img src={section.picture} alt='location' key={index}/>\r\n                        </ColumnRight>\r\n                    </Container> \r\n                )\r\n            }\r\n               \r\n        })}\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default InfoSection\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\Footer.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Profil\\UpdateInfoProfil.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\SliderData.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\InfoData.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\LeftNavAdmin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadAdmin.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\ThreadVal.js",["1259"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts } from \"../actions/postAction\";\r\nimport CardAdmin from \"./Post/CardAdmin\";\r\nimport { isEmpty } from \"./Utilitaires\";\r\n\r\nconst ThreadVal = () => {\r\n  const [loadPost, setLoadPost] = useState(true);\r\n  const [count, setCount] = useState(5);\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.postReducer);\r\n\r\n  const loadMore = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n      setLoadPost(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadPost) {\r\n      dispatch(getPosts(count));\r\n      setLoadPost(false);\r\n      setCount(count + 5);\r\n    }\r\n\r\n    window.addEventListener('scroll', loadMore);\r\n    return () => window.removeEventListener('scroll', loadMore);\r\n  }, [loadPost, dispatch, count]);\r\n\r\n  return (\r\n    <div className=\"thread-container\">\r\n      <ul>\r\n        {!isEmpty(posts[0]) &&\r\n          posts.map((post) => {\r\n            if (post.status === \"validation\") {\r\n                return <CardAdmin post={post} key={post._id} />;\r\n            }\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadVal;\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Parametre\\UpdateSection.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Parametre\\SectionForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Parametre\\UpdateParam.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Parametre\\ParamForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\index.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignInProForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignUpProForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignInAdminForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\LikeButton.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\DeleteCard.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\CardComments.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\CardaddPic.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\MsgData.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\GoogleData.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Profil\\UpdatePicture.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\PageAccueil\\Button.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\Logout.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\data\\MenuData.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\CardAdmin.js",["1260"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../Utilitaires\";\r\nimport { updatePost, updateStatus } from \"../../actions/postAction\";\r\nimport DeleteCard from \"./DeleteCard\";\r\nimport CardComments from \"./CardComments\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBCard } from 'mdbreact';\r\nimport { useContext } from \"react\";\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport CardaddPic from \"./CardaddPic\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CardPrises from \"./CardPrises\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst CardAdmin = ({ post }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n    const [textUpdate, setTextUpdate] = useState(null);\r\n    const [showComments, setShowComments] = useState(false);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const dispatch = useDispatch();\r\n    const uid = useContext(UidContext);\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n    const validePublication = () => {\r\n        dispatch(updateStatus(post._id, post.message, \"non_reservé\", post.clientId, userData.role));\r\n    }\r\n\r\n    \r\n  \r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenB, setIsOpenB] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const showModalB = () => {\r\n    setIsOpenB(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const hideModalB = () => {\r\n    setIsOpenB(false);\r\n  };\r\n  \r\n\r\n    \r\n    const ajoutImg = () => {\r\n    \r\n      return (\r\n            <>\r\n              <div onClick={showModalB} style={{cursor:'pointer'}}  title=\"Voir toutes les images\">\r\n                 <i className=\"fas fa-image\"></i>\r\n              </div>\r\n              <Modal show={isOpenB} onHide={hideModalB}>\r\n                <Modal.Header>\r\n                  <Modal.Title>Images</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> <CardaddPic post={post} key={post._id} /></Modal.Body>\r\n                <Modal.Footer>\r\n                  <button onClick={hideModalB}>Fermer</button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </>\r\n      ) \r\n   \r\n  }\r\n\r\n  const ficheLocataire = () => {\r\n    if ((post.clientId !== null) && (userData.role === 'administrateur') ) {\r\n      return (\r\n              <Popup\r\n                trigger={<i class=\"fas fa-address-card\" title=\"fiche locataire\"></i>}\r\n                position={[\"bottom right\"]}\r\n                closeOnDocumentClick>\r\n                <div>\r\n                  {!isEmpty(usersData[0]) && \r\n                    usersData.map((user) => {\r\n                        if (user._id === post.clientId) {\r\n                          return (\r\n                            <>\r\n                              <p>\r\n                                Pseudo : {user.pseudo} \r\n                                         {  (post.status === \"reservé\") &&\r\n                                            <img src=\"./img/check.png\" alt=\"\"/>\r\n                                         }\r\n                                         {  (post.status === \"refusé\") &&\r\n                                            <img src=\"./img/close.png\" alt=\"\"/>\r\n                                         }\r\n                                         {  (post.status === \"attente\") &&\r\n                                            <img src=\"./img/Spinner.svg\" alt=\"\"/>\r\n                                         }\r\n                                         <br/>\r\n                                {user.email} <br/> \r\n                                Tel : {user.tel}\r\n                              </p>\r\n                            </>\r\n                          )\r\n                        }\r\n                    })\r\n                  }\r\n                </div>\r\n              </Popup>\r\n      \r\n      )\r\n    } else if (post.clientId === null){\r\n      <div></div>\r\n    }\r\n    \r\n  }\r\n\r\n    const status = () => {\r\n        if (post.status === 'réservé') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Réservé</span>)\r\n        } else if (post.status === 'attente') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente</span>)\r\n        } else if (post.status === 'annulé') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Annulé</span>)\r\n        } else if (post.status === 'non_reservé') {\r\n          return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Non reservé</span>)\r\n        } else if (post.status === 'validation') {\r\n            return (\r\n              <div>\r\n                <span style={{fontSize:'12px', backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente</span>\r\n                \r\n                <form action=\"\" onClick={validePublication}>\r\n                  <button type=\"submit\" >Valider</button>\r\n                </form>\r\n              </div>\r\n              )\r\n          } \r\n    }\r\n\r\n    const updateItem = () => {\r\n        if (textUpdate) {\r\n            dispatch(updatePost(post._id, textUpdate, userData.role));\r\n        }\r\n        setIsUpdated(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n    }, [usersData]);\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <MDBCard >\r\n                <li className=\"container\" key={post._id}>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"round\">\r\n                  <h6 style={{paddingTop: '3px'}}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                          src={\r\n                            !isEmpty(usersData[0]) &&\r\n                            usersData\r\n                              .map((user) => {\r\n                                if (user._id === post.posterId) return user.picture;\r\n                                else return null;\r\n                              })\r\n                              .join(\"\")\r\n                          }\r\n                          alt=\"poster-pic\"\r\n                        />\r\n                        {\"  \"}\r\n                        {!isEmpty(usersData[0]) &&\r\n                          usersData\r\n                            .map((user) => {\r\n                              if (user._id === post.posterId) return user.pseudo;\r\n                              else return null;\r\n                            })\r\n                            .join(\"\")}\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <div className=\"col-sm\" style={{textAlign:'right'}}>\r\n                        \r\n                          <img onClick={showModal} style={{cursor:'pointer'}} src=\"./img/camera.png\" title=\"Prise de vue locataire\"  alt=\"\"/>\r\n                          <Modal show={isOpen} onHide={hideModal}>\r\n                            <Modal.Header>\r\n                              <Modal.Title>Prise de vue et activités à proximité</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body><CardPrises post={post} key={post._id} /></Modal.Body>\r\n                            <Modal.Footer>\r\n                              <button onClick={hideModal}>Fermer</button>\r\n                            </Modal.Footer>\r\n                          </Modal>\r\n                          \r\n                          <br/>\r\n                          {ajoutImg()}\r\n                          {ficheLocataire()}\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  </h6>\r\n                </div>\r\n                            <div>\r\n                                <div>\r\n                                    <div>\r\n                                        <h4>{post.titre}</h4>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-sm\">\r\n                                        {uid ? (\r\n                                            <div>\r\n                                                {post.picture && (\r\n                                                    <img height=\"200\" width=\"100%\" src={post.picture[0]} alt=\"card-pic\" className=\"card-pic\" />\r\n                                                )}\r\n                                                {post.video && (\r\n                                                    <iframe\r\n                                                        width=\"100%\"\r\n                                                        height=\"200\"\r\n                                                        src={post.video}\r\n                                                        frameBorder=\"0\"\r\n                                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                        allowFullScreen\r\n                                                        title={post._id}\r\n                                                    ></iframe>\r\n                                                )}\r\n                                            </div>\r\n                                        ) : (\r\n                                            <>\r\n\r\n                                                {post.picture && (\r\n                                                    <img height=\"200\" width=\"100%\" src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n                                                )}\r\n                                                {post.video && (\r\n                                                    <iframe\r\n                                                        width=\"100%\"\r\n                                                        height=\"200\"\r\n                                                        src={post.video}\r\n                                                        frameBorder=\"0\"\r\n                                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                        allowFullScreen\r\n                                                        title={post._id}\r\n                                                    ></iframe>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n\r\n\r\n\r\n\r\n\r\n                                        {isUpdated && (\r\n                                            <div className=\"update-post\">\r\n                                                <textarea\r\n                                                    defaultValue={post.message}\r\n                                                    onChange={(e) => setTextUpdate(e.target.value)}\r\n                                                />\r\n                                                <div className=\"button-container\">\r\n                                                    <button className=\"btn\" onClick={updateItem}>\r\n                                                        Valider modification\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:\"12px\", fontWeight:\"bold\"}}>Publiée le {dateParser(post.createdAt)}</span>\r\n                                        \r\n                                        {isUpdated === false && <p>{post.message}</p>}\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        <span style={{fontSize:'12px'}}>commentaire </span>\r\n                                            <i onClick={() => setShowComments(!showComments)} className=\"fas fa-comment\"></i>  {post.comments.length}\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>j'aime </span>\r\n                                        <i className=\"fas fa-star\"></i>  {post.likers.length}\r\n                                       \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>voir </span>\r\n                                            <i className=\"fas fa-eye\"></i>\r\n                                       \r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                        {(\r\n                                            <div className=\"button-container\">\r\n                                                \r\n                                                <DeleteCard id={post._id} />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                    <span style={{fontSize:'12px'}}>status : {status()}</span>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                {showComments && <CardComments post={post} />}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </li>\r\n            </MDBCard>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardAdmin;\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\GoogleMap\\Map.js",["1261","1262"],"import React from 'react';\r\nimport '../../style/Map.css';\r\nimport {\r\n    InfoWindow,\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    GoogleMap,\r\n    Marker,\r\n  } from \"react-google-maps\";\r\nimport Geocode from 'react-geocode';\r\nimport { GoogleData } from '../../data/GoogleData';\r\nGeocode.setApiKey(\"AIzaSyAtAsOVenmjEzpg_JiXjMglbFjEt3rPLr0\")\r\n\r\nconst Map = ({ post}) =>  {\r\n\r\n    let valLng;\r\n    let valLat;\r\n    let place;\r\n    let zoom;\r\n\r\n    {GoogleData.map((item, key) => {\r\n        if(item.name === post.departement) {\r\n            if(post.lng && post.lat) {\r\n                return (\r\n                    <div key={key}>\r\n                        {valLat=post.lat} \r\n                        {valLng=post.lng}\r\n                        {place=post.titre}\r\n                        {zoom=16}\r\n                    </div>\r\n                )\r\n            } else {\r\n                 return (\r\n                <div key={key}>\r\n                    {valLat=item.lat} \r\n                    {valLng=item.lng}\r\n                    {place=post.departement}\r\n                    {zoom=6}\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n        \r\n    })}\r\n\r\n    const MapWithAMarker = withScriptjs(withGoogleMap(props =>\r\n        <GoogleMap\r\n        defaultZoom={zoom}\r\n        defaultCenter={{ lat: valLat, lng: valLng }}\r\n        >\r\n        <Marker\r\n            position={{ lat: valLat, lng: valLng }}\r\n        >\r\n            <InfoWindow>\r\n                <div>{place}</div>\r\n            </InfoWindow>\r\n        </Marker>\r\n        </GoogleMap>\r\n    ));\r\n\r\n    \r\n\r\n    return (\r\n    <>\r\n        \r\n        <h5>Google Map</h5>\r\n        <MapWithAMarker\r\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAtAsOVenmjEzpg_JiXjMglbFjEt3rPLr0&v=3.exp&libraries=geometry,drawing,places\"\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `400px` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n        {(post.lng && post.lat) &&\r\n            <div>\r\n                <br/>\r\n                Latitude : {valLat} <br/><br/>\r\n                Longitude : {valLng}\r\n            </div>\r\n        }\r\n\r\n        \r\n        \r\n        \r\n    </>\r\n);\r\n\r\n\r\n       \r\n};\r\n\r\nexport default Map;\r\n\r\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignInForm.js",["1263"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\n\nconst SignInForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const emailError = document.querySelector(\".email.error\");\n    const passwordError = document.querySelector(\".password.error\");\n    const roleError = document.querySelector(\".role.error\")\n\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}api/user/login`,\n      withCredentials: true,\n      data: {\n        email,\n        password,\n        role,\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.errors) {\n          emailError.innerHTML = res.data.errors.email;\n          passwordError.innerHTML = res.data.errors.password;\n          roleError.innerHTML = res.data.errors.role;\n        } else {\n          window.location = \"/home\";\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <MDBContainer>\n    <MDBRow>\n      <MDBCol md=\"12\">\n        <MDBCard >\n          <MDBCardBody>\n            <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\n              <p className=\"h4 text-center py-4\">Connexion locataire</p>\n              <div className=\"role error\"></div>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"email\"\n                  icon=\"envelope\"\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n                <div className=\"email error\"></div>\n                <MDBInput\n                  label=\"password\"\n                  icon=\"lock\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                />\n                <div className=\"password error\"></div>\n              </div>\n              <div className=\"text-center py-4 mt-3\">\n              <MDBBtn type=\"submit\">\n                Se connecter\n              </MDBBtn>\n              </div>\n            </form>\n           \n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  </MDBContainer>\n  );\n};\n\nexport default SignInForm;\n","C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Log\\SignUpForm.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\components\\Post\\EditDeleteComment.js",[],"C:\\Users\\user\\Desktop\\atypikhouse_altimate\\client\\src\\pages\\pages_admin\\Param_habitat.js",["1264","1265"],"import React, { useEffect, useState } from \"react\";\r\nimport LeftNavAdmin from \"../../components/LeftNavAdmin\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from 'mdbreact';\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Param_habitat = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    \r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n      }, [usersData]);\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <nav style={{ backgroundColor: 'green',  position: 'fixed', zIndex:'100' }}>\r\n            <NavLink exact to=\"/gestion\">\r\n                <h3 style={{ color: 'white', fontFamily: 'fantasy', marginLeft: '20px', paddingTop: '20px' }}>AtypikHouse@Dashboard</h3>\r\n            </NavLink>\r\n            <h6 style={{textAlign:'right', fontWeight:'bolder', color:'black'}}>What's up, {userData.pseudo}!</h6>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <LeftNavAdmin />\r\n                </div>\r\n                <div className=\"col-9\" style={{paddingTop: '100px'}}>\r\n                    <br />\r\n                    <h1>Gestion des paramètres des habitats\r\n                        <div style={{textAlign:'right', paddingRight:'30px'}}>\r\n                            <NavLink exact to=\"/ajout_admin\">\r\n                                <i className=\"fas fa-plus\" title=\"Ajouter\"></i>\r\n                            </NavLink>   \r\n                        </div>\r\n                    </h1>\r\n                    \r\n                    <>\r\n                    {isLoading ? (\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                    ) : (\r\n                    <MDBTable>\r\n                        <MDBTableHead color=\"primary-color\">\r\n                            <tr>\r\n                                <th>Libellé</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </MDBTableHead>\r\n                        <MDBTableBody>\r\n                            {!isEmpty(usersData[0]) &&\r\n                                usersData.map((user) => {\r\n                                    if ( user.role === \"administrateur\") {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td><img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\r\n                                                src={user.picture}\r\n                                                alt=\"poster-pic\"\r\n                                            /></td>\r\n                                            <td>\r\n                                                \r\n                                            <button type=\"submit\" className=\"btn btn-danger\">\r\n                                                <i class=\"fas fa-trash-alt\"></i>\r\n                                            </button>\r\n                                                {\" \"}\r\n                                            <button type=\"submit\" className=\"btn btn-info\">\r\n                                                <i className=\"fas fa-edit\"></i>\r\n                                            </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ) }\r\n                                })}\r\n\r\n                        </MDBTableBody>\r\n                    </MDBTable>\r\n                    )}\r\n                    </>\r\n                    <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Param_habitat;","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\index.js",[],["1266","1267"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\usersAction.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\sectionAction.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\postAction.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\paramAction.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\actions\\userAction.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\UserIdConnect.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\page_accueil\\globalStyles.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\users.reducer.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\posts.reducres.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\error.reducer.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\bestof.reducer.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\user.reducer.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\post.reducer.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\param.reducer.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\reducers\\section.reducer.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Routes\\index.js",["1268"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Home.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Profil.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Profil_admin.js",["1269"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Favoris.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Profil_pro.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Reservation.js",["1270"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Newpost.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Post_pro.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Bestof.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\HomePro.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\page_accueil\\Accueil.js",["1271","1272"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Prisedevue.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\Mes_reservations.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Gestion.js",["1273","1274","1275"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Pub_attente.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Gestion_clients.js",["1276"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pro.js",["1277","1278","1279"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Parametres.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Param_habitat.js",["1280","1281"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\User_view.js",["1282"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Gestion_pubs.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\Ajout_admin.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\pages\\pages_admin\\ListAdmin.js",["1283"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Thread.js",["1284"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\LeftNav.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Trends.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Utilitaires.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadsFavoris.js",["1285"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadsPro.js",["1286"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadClient.js",["1287"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\Index_admin.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\Index_pro.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\SearchForm.js",["1288","1289"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\Card.js",["1290","1291","1292","1293","1294","1295","1296","1297","1298","1299"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dateParser, isEmpty, shortDateParser } from \"../Utilitaires\";\nimport LikeButton from \"./LikeButton\";\nimport {deleteReserve, sendEmail, updatePost, updateStatus } from \"../../actions/postAction\";\nimport DeleteCard from \"./DeleteCard\";\nimport CardComments from \"./CardComments\";\nimport Modal from \"react-bootstrap/Modal\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBCard } from 'mdbreact';\nimport Popup from \"reactjs-popup\";\nimport { useContext } from \"react\";\nimport { UidContext } from \"../UserIdConnect\";\nimport CardPrises from \"./CardPrises\";\nimport { FacebookShareButton, FacebookIcon, WhatsappShareButton, WhatsappIcon, TwitterShareButton, TwitterIcon, LinkedinShareButton, LinkedinIcon, MailruShareButton, MailruIcon, EmailShareButton, EmailIcon, InstapaperShareButton, InstapaperIcon } from 'react-share'\nimport { NavLink } from \"react-router-dom\";\nimport CardaddPic from \"./CardaddPic\";\nimport MsgData from \"../../data/MsgData\";\n\nconst Card = ({ post }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [textUpdate, setTextUpdate] = useState(null);\n  const [showComments, setShowComments] = useState(false);\n  const usersData = useSelector((state) => state.usersReducer);\n  const userData = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n  const uid = useContext(UidContext);\n\n  \n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenB, setIsOpenB] = useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const showModalB = () => {\n    setIsOpenB(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  const hideModalB = () => {\n    setIsOpenB(false);\n  };\n  \n\n  const updateItem = () => {\n    if (textUpdate) {\n      dispatch(updatePost(post._id, textUpdate, userData.role));\n    }\n    setIsUpdated(false);\n  };\n\n  useEffect(() => {\n    !isEmpty(usersData[0]) && setIsLoading(false);\n  }, [usersData]);\n\n  const valideReservation = () => {\n    dispatch(updateStatus(post._id, post.message, \"reservé\", post.clientId, userData.role));\n    {!isEmpty(usersData[0]) &&\n      usersData.map((user) => {\n      if (user._id === post.clientId) {\n        dispatch(sendEmail(user.email, user.pseudo, MsgData[3].subject, MsgData[3].text))\n      }})\n    }\n  }\n\n  const refuseReservation = () => {\n    dispatch(updateStatus(post._id, post.message, \"refusé\", post.clientId, userData.role));\n    {!isEmpty(usersData[0]) &&\n      usersData.map((user) => {\n      if (user._id === post.clientId) {\n        dispatch(sendEmail(user.email, user.pseudo, MsgData[4].subject, MsgData[4].text))\n      }})\n    }\n    post.reservations.map((reservation) => {\n      dispatch(deleteReserve(post._id, reservation._id));\n    })\n    window.location.reload(false);\n  }\n\n  const soumission = () => {\n    dispatch(updateStatus(post._id, post.message, \"validation\", null, userData.role));\n  } \n\n  const annuleReservation = () => {\n    dispatch(updateStatus(post._id, post.message, \"non_reservé\", userData.role));\n    {!isEmpty(usersData[0]) &&\n      usersData.map((user) => {\n      if (post.posterId === user._id) {\n        dispatch(sendEmail(user.email, user.pseudo, MsgData[5].subject, MsgData[5].text))\n      }})\n    }\n    post.reservations.map((reservation) => {\n          return dispatch(deleteReserve(post._id, reservation._id));\n    \n    })\n  }\n\n  const status = () => {\n    if (post.status === 'reservé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#2ed573', borderRadius:\"4px 8px\"}}>Réservé</span>)\n    } else if (post.status === 'attente') {\n      return (\n        <div>\n          <span style={{fontSize:'12px', backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente</span>\n          \n          <form action=\"\" onClick={valideReservation}>\n            <button type=\"submit\" >Valider</button>\n          </form>\n             \n          {\" \"}\n          <form action=\"\" onClick={refuseReservation}>\n            <button type=\"button\" >Refuser</button>\n          </form>\n        </div>\n        )\n    } else if (post.status === 'annulé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Annulé</span>)\n    } else if (post.status === 'non_reservé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Non reservé</span>)\n    } else if (post.status === 'refusé') {\n      return (<span style={{fontSize:'12px', backgroundColor:'#ff9f1a', borderRadius:\"4px 8px\"}}>Non reservé</span>)\n    } else if ((post.status === 'ajout_images') && (post.picture.length < 5)) {\n      return (<span style={{fontSize:'12px', fontWeight: 'bolder'}}> Vous avez {post.picture.length} image{post.picture.length < 2 ? \"\": \"s\"}</span>)\n    } else if ((post.status === 'ajout_images') && (post.picture.length === 5)) {\n      return (\n        <form action=\"\" onClick={soumission}>\n          <button type=\"submit\" >Soumettre</button>\n      </form>\n      )\n    }\n  }\n\n  const afficheReservButton = () =>\n  {\n      if (((userData.role !== 'propriétaire') && (post.status === \"non_reservé\")) || ((userData.role !== 'propriétaire') && (post.status === \"refusé\")) ) {\n         return (\n          <NavLink to={{\n            pathname:'/reservation',\n            search:`id=${post._id}` \n          }} exact >\n            <img \n            id=\"reserve\"\n            width=\"25px\"\n            src=\"./img/calendar.png\" \n            alt=\"reserve\" \n            data-toggle=\"modal\" \n            data-target=\"#exampleModal\"/>   \n          </NavLink>  \n        )\n      } else if((userData.role !== 'propriétaire') && (post.clientId === userData._id) && (post.status === \"attente\")) {\n          return (\n            <div>\n            <span style={{fontSize:'12px'}}>\n              status : <span style={{backgroundColor:'#25fde9', borderRadius:\"4px 8px\"}}>En attente de validation</span>\n            </span>\n            <br/>\n            <form action=\"\"  onClick={() => {\n              if (window.confirm(\"Voulez-vous annuler votre demande de reservation ?\")) {\n                annuleReservation();\n              }\n            }}\n            >\n              <button type=\"submit\" titre=\"Annuler la reservation\" >Annuler</button>\n            </form>\n          </div>\n          )\n      } else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"reservé\")) {\n        return (\n          <div>\n          <span style={{fontSize:'12px'}}>\n            status : <span style={{backgroundColor:'#2ed573', borderRadius:\"4px 8px\"}}>Reservé &#128521;</span>\n          </span>\n        </div>\n        )\n    }  else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"refusé\")) {\n      return (\n        <div>\n        <span style={{fontSize:'12px'}}>\n          status : <span style={{backgroundColor:'#ff4757', borderRadius:\"4px 8px\"}}>Refus</span>\n        </span>\n      </div>\n      )\n    } else if((userData.role !== 'propriétaire') && (post.clientId !== null) && (post.status === \"annulé\")) {\n      return (\n        <div>\n        <span style={{fontSize:'12px'}}>\n          status : <span style={{backgroundColor:'#ff4757', borderRadius:\"4px 8px\"}}>Votre reservation a été annulée</span>\n        </span>\n      </div>\n      )\n    } else if (userData.role === 'propriétaire'){\n          return (\n            <div>\n              <span style={{fontSize:'12px'}}>\n                status : {status()}\n              </span>\n            </div>\n          )  \n      }    \n  }\n\n  const ajoutImg = () => {\n    \n      return (\n            <>\n              <div onClick={showModalB} style={{cursor:'pointer'}}  title=\"Voir toutes les images\">\n                 <i className=\"fas fa-image\"></i>\n              </div>\n              <Modal show={isOpenB} onHide={hideModalB}>\n                <Modal.Header>\n                  <Modal.Title>Images</Modal.Title>\n                </Modal.Header>\n                <Modal.Body> <CardaddPic post={post} key={post._id} /></Modal.Body>\n                <Modal.Footer>\n                  <button onClick={hideModalB}>Fermer</button>\n                </Modal.Footer>\n              </Modal>\n            </>\n      ) \n   \n  }\n\n  const dateReservation = () => {\n    {!isEmpty(post.reservations[0]) &&\n      post.reservations.map((reservation) => {\n        return <h1>{shortDateParser(reservation.date_open)}</h1>\n    })\n  }}\n\n  const ficheLocataire = () => {\n    if ((post.clientId !== null) && (userData.role === 'propriétaire') ) {\n      return (\n              <Popup\n                trigger={<i class=\"fas fa-address-card\" title=\"fiche locataire\"></i>}\n                position={[\"bottom right\"]}\n                closeOnDocumentClick>\n                <div>\n                  {!isEmpty(usersData[0]) && \n                    usersData.map((user) => {\n                        if (user._id === post.clientId) {\n                          return (\n                            <>\n                              <p>\n                                Pseudo : {user.pseudo} \n                                         {  (post.status === \"reservé\") &&\n                                            <img src=\"./img/check.png\" alt=\"\"/>\n                                         }\n                                         {  (post.status === \"refusé\") &&\n                                            <img src=\"./img/close.png\" alt=\"\"/>\n                                         }\n                                         {  (post.status === \"attente\") &&\n                                            <img src=\"./img/Spinner.svg\" alt=\"\"/>\n                                         }\n                                         <br/>\n                                {user.email} <br/> \n                                Tel : {user.tel}\n                              </p>\n                            </>\n                          )\n                        }\n                    })\n                  }\n                </div>\n              </Popup>\n      \n      )\n    } else if (post.clientId === null){\n      <div>vfv</div>\n    }\n    \n  }\n\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n \n\n  return (\n    <div>\n      <MDBCard style={{backgroundColor: '#f5f6fa'}}>\n        <li className=\"container\" key={post._id}>\n          {isLoading ? (\n            <i className=\"fas fa-spinner fa-spin\"></i>\n          ) : (\n              <>\n                <div className=\"round\">\n                  <h6 style={{paddingTop: '3px'}}>\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <img height=\"40\" width=\"40\" style={{ borderRadius: \"50%\" }}\n                          src={\n                            !isEmpty(usersData[0]) &&\n                            usersData\n                              .map((user) => {\n                                if (user._id === post.posterId) return user.picture;\n                                else return null;\n                              })\n                              .join(\"\")\n                          }\n                          alt=\"poster-pic\"\n                        />\n                        {\"  \"}\n                        {!isEmpty(usersData[0]) &&\n                          usersData\n                            .map((user) => {\n                              if (user._id === post.posterId) return user.pseudo;\n                              else return null;\n                            })\n                            .join(\"\")}\n                      </div>\n                      <div className=\"col-6\">\n                        <div className=\"col-sm\" style={{textAlign:'right'}}>\n                        \n                          <img onClick={showModal} style={{cursor:'pointer'}} src=\"./img/camera.png\" title=\"Prise de vue locataire\"  alt=\"\"/>\n                          <Modal show={isOpen} onHide={hideModal}>\n                            <Modal.Header>\n                              <Modal.Title>Prise de vue et activités à proximité</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body><CardPrises post={post} key={post._id} /></Modal.Body>\n                            <Modal.Footer>\n                              <button onClick={hideModal}>Fermer</button>\n                            </Modal.Footer>\n                          </Modal>\n                          \n                          <br/>\n                          {ajoutImg()}\n                          {ficheLocataire()}\n                          </div>\n                      </div>\n                    </div>\n                  </h6>\n                </div>\n                <div>\n                <h6 style={{fontWeight:\"bold\"}}>{post.titre}</h6>\n                  <div className=\"row\" >\n                    <div className=\"col-sm\">\n                      <>\n                          {post.picture[0] !== \"\" && (\n                            <img height=\"200\" style={{borderRadius: '10px'}} width=\"100%\" src={post.picture[0]} alt=\"card-pic\" className=\"card-pic\" />\n                          )}\n                          {post.video && (\n                            \n                            <iframe\n                              width=\"100%\"\n                              height=\"200\"\n                              style={{borderRadius: '10px', paddingTop: '5px'}}\n                              src={post.video}\n                              frameBorder=\"0\"\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                              allowFullScreen\n                              title={post._id}\n                            ></iframe>\n                          )}\n                     \n                        </>\n                      \n                      {isUpdated && (\n                        <div className=\"update-post\">\n                          <textarea\n                            defaultValue={post.message}\n                            onChange={(e) => setTextUpdate(e.target.value)}\n                          />\n                          <div className=\"button-container\">\n                            <button className=\"btn\" onClick={updateItem}>\n                              Valider modification\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                      <div style={{\n                          position: 'relative',\n                          bottom: '22px',\n                          right: '0px',\n                          display: 'flex',\n                          zIndex: 10,\n                          backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                          color: 'white',\n                          width : '25px',\n                          borderRadius: '50px',\n                          fontWeight: 'bolder',\n                          paddingLeft: '8px'\n                          }}>\n                            {post.picture.length}\n                          </div>\n                    </div>\n                    <div className=\"col-sm\">\n                      <span style={{fontSize:\"12px\"}}>{dateParser(post.createdAt)}</span>\n                      {isUpdated === false && <p>{post.message}</p>}\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>{post.type}</span><br/>\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>{post.prix} € la nuité</span><br/>\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>{post.nbr_personne} personne{post.nbr_personne > 1 ? \"s\" : \"\"}</span><br/>\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>{post.departement}</span><br/>\n                      <span style={{fontSize:\"12px\", color:'darkkhaki'}}>Disponible du {shortDateParser(post.date_open)} au {shortDateParser(post.date_close)}</span><br/>\n                      <span style={{fontSize:\"12px\", fontWeight: 'bolder'}}> {post.reservations ? \n                                                        post.reservations.map((reserve) => {\n                                                          return (<><span>Reservation du {shortDateParser(reserve.date_open)} au {shortDateParser(reserve.date_close)}</span></>)\n                                                          \n                                                        }) : null\n                                                      }\n                      </span>\n                      \n                      {dateReservation()}\n                    </div>\n                  </div>\n                  {userData._id === post.posterId && (\n                    <div className=\"container\">\n                      <div onClick={() => setIsUpdated(!isUpdated)}>\n                      <i className=\"fas fa-edit\"></i>\n                      </div>\n                      <DeleteCard id={post._id} />\n                    </div>\n                  )}\n                  <div className=\"row\">\n                  <div className=\"col-sm\">\n                      <span style={{fontSize:'12px'}}></span>\n                          <i onClick={() => setShowComments(!showComments)} className=\"fas fa-comment\"></i>  {post.comments.length}\n                      \n                  </div>\n                    <div className=\"col-sm\">\n                      <LikeButton post={post} />\n                    </div>\n                    <div className=\"col-sm\">\n                      {uid === null && (\n                        <Popup\n                          trigger={<img \n                            width=\"25px\"\n                            src=\"./img/calendar.png\" alt=\"reserve\" />}\n                          position={[\"bottom center\", \"bottom right\", \"bottom left\"]}\n                          closeOnDocumentClick>\n                          <div>Connectez-vous pour faire une reservation!</div>\n                        </Popup>\n\n                      )}\n                      {uid && (\n                       afficheReservButton()\n                        )}   \n                    </div>\n                    <div className=\"col-sm\">\n                    <Popup\n                      trigger={<img \n                        width=\"15px\"\n                        title=\"Partager\"\n                        src=\"./img/share.png\" alt=\"share\" />}\n                      position={[\"top left\"]}\n                      size={[\"Nano - 10%\"]}\n                      closeOnDocumentClick>\n                        <FacebookShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\" \n                        >\n                          <FacebookIcon size='20px' logoFillColor='white' round={true}></FacebookIcon>\n                        </FacebookShareButton>\n                        {\" \"}\n                        <WhatsappShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <WhatsappIcon  size='20px' logoFillColor='white' round={true}></WhatsappIcon>\n                        </WhatsappShareButton>\n                        {\" \"}\n                        <TwitterShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <TwitterIcon size='20px' logoFillColor='white' round={true}></TwitterIcon>\n                        </TwitterShareButton>\n                        {\" \"}\n                        <LinkedinShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <LinkedinIcon size='20px' logoFillColor='white' round={true}></LinkedinIcon>\n                        </LinkedinShareButton>\n                        {\" \"}\n                        <MailruShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <MailruIcon size='20px' logoFillColor='white' round={true}></MailruIcon>\n                        </MailruShareButton>\n                        {\" \"}\n                        <EmailShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <EmailIcon size='20px' logoFillColor='white' round={true}></EmailIcon>\n                        </EmailShareButton>\n                        {\" \"}\n                        <InstapaperShareButton\n                          url={`${process.env.REACT_APP_API_URL}reservation?id=${post._id}`}\n                          quote={\"Hey !!!!\"}\n                          hashtag=\"#atyipkhouseG4\"\n                        >\n                          <InstapaperIcon size='20px' logoFillColor='white' round={true}></InstapaperIcon>\n                        </InstapaperShareButton>\n                        \n                    </Popup>\n\n                    </div>\n\n                  </div>\n                  {showComments && <CardComments post={post} />}\n                </div>\n              </>\n            )}\n        </li>\n      </MDBCard>\n    </div>\n  );\n};\n\nexport default Card;\n","C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\ReservationForm.js",["1300","1301","1302","1303","1304","1305","1306","1307","1308"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\CardPrises.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\NewPostForm.js",["1309","1310","1311"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\NavBar.js",["1312","1313","1314"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\DropdownPro.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\Dropdown.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\NavBarPro.js",["1315","1316"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\InfoSection.js",["1317"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\Footer.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\Hero.js",["1318","1319","1320","1321"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Profil\\UpdateInfoProfil.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\SliderData.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\InfoData.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\LeftNavAdmin.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadAdmin.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\ThreadVal.js",["1322"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Parametre\\UpdateSection.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Parametre\\SectionForm.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Parametre\\UpdateParam.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Parametre\\ParamForm.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\index.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignInProForm.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignInAdminForm.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignUpProForm.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\DeleteCard.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\LikeButton.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\MsgData.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\CardComments.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\CardaddPic.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\PageAccueil\\Button.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Profil\\UpdatePicture.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\Logout.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\MenuData.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\data\\GoogleData.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\CardAdmin.js",["1323"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\GoogleMap\\Map.js",["1324","1325"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignInForm.js",["1326"],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Log\\SignUpForm.js",[],"C:\\Users\\user\\Desktop\\myatypikhouse\\client\\src\\components\\Post\\EditDeleteComment.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\index.js",["1327"],"import React from \"react\";\nimport ReactDOM, { hydrate, render } from \"react-dom\";\nimport App from \"./App\";\n//import \"./styles/index.scss\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { getUsers } from \"./actions/usersAction\";\nimport \"antd/dist/antd.css\";\n\nimport { disableReactDevTools } from \"@fvilers/disable-react-devtools\";\n\n// dev tools\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getPosts } from \"./actions/postAction\";\nimport { getParam } from \"./actions/paramAction\";\nimport { getSection } from \"./actions/sectionAction\";\n\nif (process.env.NODE_ENV === \"production\") {\n  disableReactDevTools();\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nstore.dispatch(getUsers());\nstore.dispatch(getPosts());\nstore.dispatch(getParam());\nstore.dispatch(getSection());\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement.hasChildNodes()) {\n  hydrate(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    rootElement\n  );\n} else {\n  render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    rootElement\n  );\n}\n",["1328","1329"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\usersAction.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\postAction.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\sectionAction.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\paramAction.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\actions\\userAction.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\UserIdConnect.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\page_accueil\\globalStyles.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\post.reducer.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\user.reducer.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\users.reducer.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\error.reducer.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\posts.reducres.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\bestof.reducer.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\param.reducer.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\reducers\\section.reducer.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Routes\\index.js",["1330"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../../pages/Home\";\nimport Profil from \"../../pages/Profil\";\nimport Profil_pro from \"../../pages/Profil_pro\";\nimport Profil_admin from \"../../pages/Profil_admin\";\nimport Bestof from \"../../pages/Bestof\";\nimport Favoris from \"../../pages/Favoris\";\nimport Newpost from \"../../pages/Newpost\";\nimport Reservation from \"../../pages/Reservation\";\nimport Post_pro from \"../../pages/Post_pro\";\nimport Gestion from \"../../pages/pages_admin/Gestion\";\nimport Conditions from \"../../pages/Condtions\";\nimport Gestion_clients from \"../../pages/pages_admin/Gestion_clients\";\nimport Gestion_pro from \"../../pages/pages_admin/Gestion_pro\";\nimport Pub_attente from \"../../pages/pages_admin/Pub_attente\";\nimport Parametres from \"../../pages/pages_admin/Parametres\";\nimport Param_habitat from \"../../pages/pages_admin/Param_habitat\";\nimport User_view from \"../../pages/pages_admin/User_view\";\nimport Gestion_pubs from \"../../pages/pages_admin/Gestion_pubs\";\nimport Ajout_admin from \"../../pages/pages_admin/Ajout_admin\";\nimport ListAdmin from \"../../pages/pages_admin/ListAdmin\";\nimport Mes_reservations from \"../../pages/Mes_reservations\";\nimport { Accueil } from \"../../pages/page_accueil/Accueil\";\nimport HomePro from \"../../pages/HomePro\";\nimport Prisedevue from \"../../pages/Prisedevue\";\nimport { useSelector } from \"react-redux\";\nimport ForgotView from \"../../pages/ForgotView\";\nimport ResetView from \"../../pages/ResetView\";\n\nconst Index = () => {\n  const userData = useSelector((state) => state.userReducer);\n  return (\n    <div>\n      <Router>\n        <Switch>\n          {/* FREE ACCESS */}\n          <Route path=\"/\" exact component={Accueil} />\n          <Route path=\"/Home\" exact component={Home} />\n          <Route path=\"/profil\" exact component={Profil} />\n          <Route path=\"/profil_pro\" exact component={Profil_pro} />\n          <Route path=\"/profil_admin\" exact component={Profil_admin} />\n          <Route path=\"/prisedevue\" exact component={Prisedevue} />\n          <Route path=\"/bestof\" exact component={Bestof} />\n          <Route path=\"/conditions\" exact component={Conditions} />\n          <Route path=\"/forgot\" exact component={ForgotView} />\n          <Route path=\"/reset/:id\" exact component={ResetView} />\n\n          {/* ONLY CLIENT ACCESS */}\n          <Route path=\"/favoris\" exact component={Favoris} />\n          <Route path=\"/reservation\" exact component={Reservation} />\n          <Route path=\"/mes_reservations\" exact component={Mes_reservations} />\n\n          {/* ONLY PROPRIETAIRE ACCESS */}\n          <Route path=\"/newpost\" exact component={Newpost} />\n          <Route path=\"/post_pro/\" exact component={Post_pro} />\n          <Route path=\"/Homepro\" exact component={HomePro} />\n\n          {/* ONLY ADMIN ACCESS */}\n          <Route path=\"/gestion\" exact component={Gestion} />\n          <Route path=\"/gestion_clients\" exact component={Gestion_clients} />\n          <Route path=\"/gestion_pro\" exact component={Gestion_pro} />\n          <Route path=\"/gestion_pubs\" exact component={Gestion_pubs} />\n          <Route path=\"/pub_attente\" exact component={Pub_attente} />\n          <Route path=\"/parametres\" exact component={Parametres} />\n          <Route path=\"/ajout_admin\" exact component={Ajout_admin} />\n          <Route path=\"/listadmin\" exact component={ListAdmin} />\n          <Route path=\"/paramhabitat\" exact component={Param_habitat} />\n          <Route path=\"/user_view\" exact component={User_view} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default Index;\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Profil_pro.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Home.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Profil.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Profil_admin.js",["1331"],"import React, { useContext, useState } from \"react\";\r\nimport Index_admin from \"../components/Log/Index_admin\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport UpdateInfoProfil from \"../components/Profil/UpdateInfoProfil\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../style/index.css\";\r\nimport DropdownAdmin from \"../components/PageAccueil/DropDownAdmin\";\r\nimport NavBarAdmin from \"../components/PageAccueil/NavBarAdmin\";\r\n\r\nconst Profil_admin = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBarAdmin toggle={toggle} />\r\n      <DropdownAdmin isOpen={isOpen} toggle={toggle} />\r\n      <div style={{ paddingTop: \"60px\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div>\r\n              {uid ? (\r\n                <UpdateInfoProfil />\r\n              ) : (\r\n                <>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                      <Index_admin signin={true} signup={false} />\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                      <img\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        src=\"./img/imag_3.svg\"\r\n                        alt=\"imag_1\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profil_admin;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Favoris.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Bestof.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Reservation.js",["1332"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Newpost.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Post_pro.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\page_accueil\\Accueil.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Condtions.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\HomePro.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Prisedevue.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\Mes_reservations.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\ForgotView.js",["1333"],"import React, { useContext, useState } from \"react\";\r\nimport { UidContext } from \"../components/UserIdConnect\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../style/index.css\";\r\nimport NavBar from \"../components/PageAccueil/NavBar\";\r\nimport Dropdown from \"../components/PageAccueil/Dropdown\";\r\nimport Forgot from \"../components/Log/Forgot\";\r\n\r\nconst ForgotView = () => {\r\n  const uid = useContext(UidContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar toggle={toggle} />\r\n      <Dropdown isOpen={isOpen} toggle={toggle} />\r\n\r\n      <div className=\"container\" style={{ paddingTop: \"60px\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm\">\r\n                <Forgot />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotView;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\ResetView.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Gestion.js",["1334","1335","1336"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteParam } from \"../../actions/paramAction\";\r\nimport { deleteSection } from \"../../actions/sectionAction\";\r\nimport Hero from \"../../components/PageAccueil/Hero\";\r\nimport InfoSection from \"../../components/PageAccueil/InfoSection\";\r\nimport ParamForm from \"../../components/Parametre/ParamForm\";\r\nimport SectionForm from \"../../components/Parametre/SectionForm\";\r\nimport UpdateParam from \"../../components/Parametre/UpdateParam\";\r\nimport UpdateSection from \"../../components/Parametre/UpdateSection\";\r\nimport { isEmpty } from \"../../components/Utilitaires\";\r\nimport { InfoData } from \"../../data/InfoData\";\r\nimport { SliderData } from \"../../data/SliderData\";\r\nimport GlobalStyle from \"../page_accueil/globalStyles\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport NavBarAdmin from \"../../components/PageAccueil/NavBarAdmin\";\r\nimport DropdownAdmin from \"../../components/PageAccueil/DropDownAdmin\";\r\n\r\nconst Gestion = () => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const paramData = useSelector((state) => state.paramReducer);\r\n  const sectionData = useSelector((state) => state.sectionReducer);\r\n  const [open, setOpen] = useState(false);\r\n  const [slideToUpdate, setSlideToUpdate] = useState(\"\");\r\n\r\n  const [openSection, setOpenSection] = useState(false);\r\n  const [sectionToUpdate, setSectionToUpdate] = useState(\"\");\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenB, setIsOpenB] = useState(false);\r\n  const [isOpenC, setIsOpenC] = useState(false);\r\n  const [isOpenD, setIsOpenD] = useState(false);\r\n  const [isOpenE, setIsOpenE] = useState(false);\r\n  const [isOpenF, setIsOpenF] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const showModalB = () => {\r\n    setIsOpenB(true);\r\n  };\r\n  const showModalC = () => {\r\n    setIsOpenC(true);\r\n  };\r\n  const showModalD = () => {\r\n    setIsOpenD(true);\r\n  };\r\n  const showModalE = () => {\r\n    setIsOpenE(true);\r\n  };\r\n  const showModalF = () => {\r\n    setIsOpenF(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const hideModalB = () => {\r\n    setIsOpenB(false);\r\n  };\r\n  const hideModalC = () => {\r\n    setIsOpenC(false);\r\n  };\r\n  const hideModalD = () => {\r\n    setIsOpenD(false);\r\n  };\r\n  const hideModalE = () => {\r\n    setIsOpenE(false);\r\n  };\r\n  const hideModalF = () => {\r\n    setIsOpenF(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSlideToUpdate(e);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangeSection = (e) => {\r\n    setSectionToUpdate(e);\r\n    setOpenSection(true);\r\n  };\r\n\r\n  const deleteSlide = (id) => {\r\n    dispatch(deleteParam(id, userData.role));\r\n  };\r\n\r\n  const deleteQuote = (id) => {\r\n    dispatch(deleteSection(id, userData.role));\r\n  };\r\n\r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  const [isOpenNav, setIsOpenNav] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpenNav(!isOpenNav);\r\n  };\r\n  return (\r\n    <div>\r\n      <GlobalStyle />\r\n      <NavBarAdmin toggle={toggle} />\r\n      <DropdownAdmin isOpen={isOpenNav} toggle={toggle} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12\" style={{ paddingTop: \"100px\" }}>\r\n          <>\r\n            <h1 className=\"container\">Paramétrage de la page d'accueil</h1>\r\n            <br />\r\n            <div className=\"container row\">\r\n              <div className=\"col-4\">\r\n                <span style={{ fontSize: \"12px\" }}>Ajouter des slides </span>\r\n                <i\r\n                  onClick={showModal}\r\n                  className=\"fas fa-plus\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <Modal show={isOpen} onHide={hideModal}>\r\n                  <Modal.Header>\r\n                    <Modal.Title>Ajouter un slide</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <ParamForm />\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <button\r\n                      className=\"btn waves-effect waves-light\"\r\n                      onClick={hideModal}\r\n                    >\r\n                      Fermer\r\n                    </button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n\r\n              <div className=\"col-4\">\r\n                <span style={{ fontSize: \"12px\" }}>Modifier des slides </span>\r\n                <i\r\n                  onClick={showModalB}\r\n                  className=\"fas fa-edit\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <Modal show={isOpenB} onHide={hideModalB}>\r\n                  <Modal.Header>\r\n                    <Modal.Title>Modifier un slide</Modal.Title>\r\n                    {open ? (\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"close\"\r\n                        onClick={(e) => setOpen(false)}\r\n                        aria-label=\"Close\"\r\n                      >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                      </button>\r\n                    ) : null}\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    {!open && (\r\n                      <select\r\n                        name=\"slideToUpdate\"\r\n                        id=\"slideToUpdate\"\r\n                        onChange={(e) => handleChange(e.target.value)}\r\n                        value={slideToUpdate}\r\n                        class=\"browser-default custom-select\"\r\n                      >\r\n                        <option value=\"\">\r\n                          ----- Selectionner le Slide -----\r\n                        </option>\r\n                        {!isEmpty(paramData[0]) &&\r\n                          paramData.map((slide, key) => {\r\n                            return (\r\n                              <option value={slide._id} key={key}>\r\n                                {slide.titre}{\" \"}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                      </select>\r\n                    )}\r\n                    {open &&\r\n                      !isEmpty(paramData[0]) &&\r\n                      paramData.map((slide, key) => {\r\n                        if (slide._id === slideToUpdate) {\r\n                          return <UpdateParam slid={slide} />;\r\n                        }\r\n                      })}\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <button\r\n                      className=\"btn waves-effect waves-light\"\r\n                      onClick={hideModalB}\r\n                    >\r\n                      Fermer\r\n                    </button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n\r\n              <div className=\"col-4\">\r\n                <span style={{ fontSize: \"12px\" }}>Supprimer des slides </span>\r\n                <i\r\n                  onClick={showModalC}\r\n                  className=\"fas fa-trash\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <Modal show={isOpenC} onHide={hideModalC}>\r\n                  <Modal.Header>\r\n                    <Modal.Title>\r\n                      Supprimer un slide <i className=\"fas fa-trash\"></i>\r\n                    </Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    {!isEmpty(paramData[0]) &&\r\n                      paramData.map((slide, key) => {\r\n                        return (\r\n                          <ul>\r\n                            <li>\r\n                              <button\r\n                                className=\"btn waves-effect waves-light\"\r\n                                onClick={() => {\r\n                                  if (\r\n                                    window.confirm(\r\n                                      \"Voulez-vous supprimer ce slide ?\"\r\n                                    )\r\n                                  ) {\r\n                                    deleteSlide(slide._id);\r\n                                  }\r\n                                }}\r\n                                key={key}\r\n                              >\r\n                                {slide.titre}\r\n                              </button>\r\n                            </li>\r\n                          </ul>\r\n                        );\r\n                      })}\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <button\r\n                      className=\"btn waves-effect waves-light\"\r\n                      onClick={hideModalC}\r\n                    >\r\n                      Fermer\r\n                    </button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n            <Hero slides={SliderData} />\r\n            <br />\r\n            <div className=\"container row\">\r\n              <div className=\"col-4\">\r\n                <span style={{ fontSize: \"12px\" }}>Ajouter des sections </span>\r\n                <i\r\n                  onClick={showModalD}\r\n                  className=\"fas fa-plus\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <Modal show={isOpenD} onHide={hideModalD}>\r\n                  <Modal.Header>\r\n                    <Modal.Title>Ajouter une section</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <SectionForm />\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <button\r\n                      className=\"btn waves-effect waves-light\"\r\n                      onClick={hideModalD}\r\n                    >\r\n                      Fermer\r\n                    </button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n\r\n              <div className=\"col-4\">\r\n                <span style={{ fontSize: \"12px\" }}>Modifier des sections </span>\r\n                <i\r\n                  onClick={showModalE}\r\n                  className=\"fas fa-edit\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <Modal show={isOpenE} onHide={hideModalE}>\r\n                  <Modal.Header>\r\n                    <Modal.Title>Modifier une section</Modal.Title>\r\n                    {openSection ? (\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"close\"\r\n                        onClick={(e) => setOpenSection(false)}\r\n                        aria-label=\"Close\"\r\n                      >\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                      </button>\r\n                    ) : null}\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    {!openSection && (\r\n                      <select\r\n                        name=\"slideToUpdate\"\r\n                        id=\"slideToUpdate\"\r\n                        onChange={(e) => handleChangeSection(e.target.value)}\r\n                        value={sectionToUpdate}\r\n                        class=\"browser-default custom-select\"\r\n                      >\r\n                        <option value=\"\">\r\n                          ----- Selectionner la section -----\r\n                        </option>\r\n                        {!isEmpty(sectionData[0]) &&\r\n                          sectionData.map((section, key) => {\r\n                            return (\r\n                              <option value={section._id} key={key}>\r\n                                {section.titre}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                      </select>\r\n                    )}\r\n                    {openSection &&\r\n                      !isEmpty(sectionData[0]) &&\r\n                      sectionData.map((section, key) => {\r\n                        if (section._id === sectionToUpdate) {\r\n                          return <UpdateSection sect={section} />;\r\n                        }\r\n                      })}\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <button\r\n                      className=\"btn waves-effect waves-light\"\r\n                      onClick={hideModalE}\r\n                    >\r\n                      Fermer\r\n                    </button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n\r\n              <div className=\"col-4\">\r\n                <span style={{ fontSize: \"12px\" }}>\r\n                  Supprimer des sections{\" \"}\r\n                </span>\r\n                <i\r\n                  onClick={showModalF}\r\n                  className=\"fas fa-trash\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <Modal show={isOpenF} onHide={hideModalF}>\r\n                  <Modal.Header>\r\n                    <Modal.Title>\r\n                      Supprimer une section <i className=\"fas fa-trash\"></i>\r\n                    </Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    {!isEmpty(sectionData[0]) &&\r\n                      sectionData.map((section, key) => {\r\n                        return (\r\n                          <ul>\r\n                            <li>\r\n                              <button\r\n                                className=\"btn waves-effect waves-light\"\r\n                                onClick={() => {\r\n                                  if (\r\n                                    window.confirm(\r\n                                      \"Voulez-vous supprimer cette section ?\"\r\n                                    )\r\n                                  ) {\r\n                                    deleteQuote(section._id);\r\n                                  }\r\n                                }}\r\n                                key={key}\r\n                              >\r\n                                {section.titre}\r\n                              </button>\r\n                            </li>\r\n                          </ul>\r\n                        );\r\n                      })}\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <button\r\n                      className=\"btn waves-effect waves-light\"\r\n                      onClick={hideModalF}\r\n                    >\r\n                      Fermer\r\n                    </button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n            <InfoSection {...InfoData} />\r\n          </>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gestion;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Parametres.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Gestion_clients.js",["1337"],"import React, { useEffect, useState } from \"react\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from \"mdbreact\";\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport NavBarAdmin from \"../../components/PageAccueil/NavBarAdmin\";\r\nimport DropdownAdmin from \"../../components/PageAccueil/DropDownAdmin\";\r\n\r\nconst Gestion_clients = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteQuote = (id) => dispatch(deleteUser(id, userData.role));\r\n\r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  const [isOpenNav, setIsOpenNav] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpenNav(!isOpenNav);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBarAdmin toggle={toggle} />\r\n      <DropdownAdmin isOpen={isOpenNav} toggle={toggle} />\r\n      <div className=\"container\">\r\n        <div className=\"col-12\" style={{ paddingTop: \"100px\" }}>\r\n          <br />\r\n          <h1>Gestion des clients</h1>\r\n          <>\r\n            {isLoading ? (\r\n              <i className=\"fas fa-spinner fa-spin\"></i>\r\n            ) : (\r\n              <MDBTable>\r\n                <MDBTableHead color=\"primary-color\">\r\n                  <tr>\r\n                    <th>Image</th>\r\n                    <th>Pseudo</th>\r\n                    <th>Email</th>\r\n                    <th>Membre depuis</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {!isEmpty(usersData[0]) &&\r\n                    usersData.map((user) => {\r\n                      if (user.role === \"client\") {\r\n                        return (\r\n                          <tr>\r\n                            <td>\r\n                              <img\r\n                                height=\"40\"\r\n                                width=\"40\"\r\n                                style={{ borderRadius: \"50%\" }}\r\n                                src={user.picture}\r\n                                alt=\"poster-pic\"\r\n                              />\r\n                            </td>\r\n                            <td>{user.pseudo}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{dateParser(user.createdAt)}</td>\r\n                            <td>\r\n                              <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => {\r\n                                  if (\r\n                                    window.confirm(\r\n                                      \"Voulez-vous supprimer cet utilisateur ?\"\r\n                                    )\r\n                                  ) {\r\n                                    deleteQuote(user._id);\r\n                                    window.location.reload(false);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <i class=\"fas fa-trash-alt\"></i>\r\n                              </button>{\" \"}\r\n                              <button type=\"submit\" className=\"btn btn-warning\">\r\n                                <NavLink\r\n                                  style={{ color: \"black\" }}\r\n                                  to={{\r\n                                    pathname: \"/user_view\",\r\n                                    search: `id=${user._id}`,\r\n                                  }}\r\n                                  exact\r\n                                >\r\n                                  <i className=\"fas fa-eye\"></i>\r\n                                </NavLink>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    })}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            )}\r\n          </>\r\n          <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Gestion_clients;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Gestion_pro.js",["1338","1339","1340"],"import React, { useEffect, useState } from \"react\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from \"mdbreact\";\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/userAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport NavBarAdmin from \"../../components/PageAccueil/NavBarAdmin\";\r\nimport DropdownAdmin from \"../../components/PageAccueil/DropDownAdmin\";\r\n\r\nconst Gestion_pro = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const dispatch = useDispatch();\r\n  const deleteQuote = (id) => dispatch(deleteUser(id, userData.role));\r\n\r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  const [isOpenNav, setIsOpenNav] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpenNav(!isOpenNav);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBarAdmin toggle={toggle} />\r\n      <DropdownAdmin isOpen={isOpenNav} toggle={toggle} />\r\n      <div className=\"container\">\r\n        <div className=\"col-12\" style={{ paddingTop: \"100px\" }}>\r\n          <h1>Gestion des propriétaires</h1>\r\n          <>\r\n            {isLoading ? (\r\n              <i className=\"fas fa-spinner fa-spin\"></i>\r\n            ) : (\r\n              <MDBTable className=\"container\">\r\n                <MDBTableHead color=\"primary-color\">\r\n                  <tr>\r\n                    <th>Image</th>\r\n                    <th>Pseudo</th>\r\n                    <th>Email</th>\r\n                    <th>Membre depuis</th>\r\n                    <th>Nombre de Post</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {!isEmpty(usersData[0]) &&\r\n                    usersData.map((user) => {\r\n                      if (user.role === \"propriétaire\") {\r\n                        return (\r\n                          <tr>\r\n                            <td>\r\n                              <img\r\n                                height=\"40\"\r\n                                width=\"40\"\r\n                                style={{ borderRadius: \"50%\" }}\r\n                                src={user.picture}\r\n                                alt=\"poster-pic\"\r\n                              />\r\n                            </td>\r\n                            <td>{user.pseudo}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{dateParser(user.createdAt)}</td>\r\n                            <td>\r\n                              {!isEmpty(posts[0]) &&\r\n                                posts.map((post) => {\r\n                                  if (post.posterId === user._id) {\r\n                                    return;\r\n                                  }\r\n                                })}\r\n                            </td>\r\n                            <td>\r\n                              <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => {\r\n                                  if (\r\n                                    window.confirm(\r\n                                      \"Voulez-vous supprimer cet utilisateur ?\"\r\n                                    )\r\n                                  ) {\r\n                                    deleteQuote(user._id);\r\n                                    window.location.reload(false);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <i class=\"fas fa-trash-alt\"></i>\r\n                              </button>{\" \"}\r\n                              <button type=\"submit\" className=\"btn btn-warning\">\r\n                                <NavLink\r\n                                  style={{ color: \"black\" }}\r\n                                  to={{\r\n                                    pathname: \"/user_view\",\r\n                                    search: `id=${user._id}`,\r\n                                  }}\r\n                                  exact\r\n                                >\r\n                                  <i className=\"fas fa-eye\"></i>\r\n                                </NavLink>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    })}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            )}\r\n          </>\r\n          <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Gestion_pro;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Pub_attente.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Param_habitat.js",["1341"],"import React, { useEffect, useState } from \"react\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from \"mdbreact\";\r\nimport { isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport NavBarAdmin from \"../../components/PageAccueil/NavBarAdmin\";\r\nimport DropdownAdmin from \"../../components/PageAccueil/DropDownAdmin\";\r\n\r\nconst Param_habitat = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n\r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  const [isOpenNav, setIsOpenNav] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpenNav(!isOpenNav);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBarAdmin toggle={toggle} />\r\n      <DropdownAdmin isOpen={isOpenNav} toggle={toggle} />\r\n      <div className=\"container\">\r\n        <div className=\"col-12\" style={{ paddingTop: \"100px\" }}>\r\n          <h1>\r\n            Gestion des paramètres des habitats\r\n            <div style={{ textAlign: \"right\", paddingRight: \"30px\" }}>\r\n              <NavLink exact to=\"/ajout_admin\">\r\n                <i className=\"fas fa-plus\" title=\"Ajouter\"></i>\r\n              </NavLink>\r\n            </div>\r\n          </h1>\r\n\r\n          <>\r\n            {isLoading ? (\r\n              <i className=\"fas fa-spinner fa-spin\"></i>\r\n            ) : (\r\n              <MDBTable>\r\n                <MDBTableHead color=\"primary-color\">\r\n                  <tr>\r\n                    <th>Libellé</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {!isEmpty(usersData[0]) &&\r\n                    usersData.map((user) => {\r\n                      if (user.role === \"administrateur\") {\r\n                        return (\r\n                          <tr>\r\n                            <td>\r\n                              <img\r\n                                height=\"40\"\r\n                                width=\"40\"\r\n                                style={{ borderRadius: \"50%\" }}\r\n                                src={user.picture}\r\n                                alt=\"poster-pic\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <button type=\"submit\" className=\"btn btn-danger\">\r\n                                <i class=\"fas fa-trash-alt\"></i>\r\n                              </button>{\" \"}\r\n                              <button type=\"submit\" className=\"btn btn-info\">\r\n                                <i className=\"fas fa-edit\"></i>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    })}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            )}\r\n          </>\r\n          <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Param_habitat;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\User_view.js",["1342"],"import React, { useState } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody } from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport NavBarAdmin from \"../../components/PageAccueil/NavBarAdmin\";\r\nimport DropdownAdmin from \"../../components/PageAccueil/DropDownAdmin\";\r\n\r\nconst User_view = (props) => {\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const [isOpenNav, setIsOpenNav] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpenNav(!isOpenNav);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBarAdmin toggle={toggle} />\r\n      <DropdownAdmin isOpen={isOpenNav} toggle={toggle} />\r\n      <div className=\"container\" style={{ paddingTop: \"100px\" }}>\r\n        <MDBContainer>\r\n          <bcomplexe r />\r\n          <MDBRow>\r\n            <MDBCol md=\"12\">\r\n              <MDBCard>\r\n                <MDBCardBody>\r\n                  {!isEmpty(usersData[0]) &&\r\n                    usersData.map((users) => {\r\n                      if (`?id=${users._id}` === props.location.search) {\r\n                        return (\r\n                          <>\r\n                            <p> Profil de {users.pseudo}</p>\r\n                            <p>\r\n                              Compte crée le : {dateParser(users.createdAt)}\r\n                            </p>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-6\">\r\n                                <ul>\r\n                                  <li>Pseudo: {users.pseudo}</li>\r\n                                  <li>Email: {users.email}</li>\r\n                                  <li>Tel: {users.tel}</li>\r\n                                </ul>\r\n                              </div>\r\n                              <div className=\"col-6\">\r\n                                <div className=\"left-part\">\r\n                                  <h3>Photo de profil</h3>\r\n                                  <img\r\n                                    height=\"400\"\r\n                                    width=\"100%\"\r\n                                    src={users.picture}\r\n                                    alt=\"user-pic\"\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      }\r\n                    })}\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User_view;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Gestion_pubs.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\Ajout_admin.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\pages\\pages_admin\\ListAdmin.js",["1343"],"import React, { useEffect, useState } from \"react\";\r\nimport { MDBTable, MDBTableBody, MDBTableFoot, MDBTableHead } from \"mdbreact\";\r\nimport { dateParser, isEmpty } from \"../../components/Utilitaires\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport NavBarAdmin from \"../../components/PageAccueil/NavBarAdmin\";\r\nimport DropdownAdmin from \"../../components/PageAccueil/DropDownAdmin\";\r\n\r\nconst ListAdmin = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n\r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  const [isOpenNav, setIsOpenNav] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setIsOpenNav(!isOpenNav);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBarAdmin toggle={toggle} />\r\n      <DropdownAdmin isOpen={isOpenNav} toggle={toggle} />\r\n      <div className=\"container\">\r\n        <div className=\"col-12\" style={{ paddingTop: \"100px\" }}>\r\n          <h1>\r\n            Liste des Administrateurs\r\n            <div style={{ textAlign: \"right\", paddingRight: \"30px\" }}>\r\n              <NavLink exact to=\"/ajout_admin\">\r\n                <i className=\"fas fa-plus\" title=\"Ajouter\"></i>\r\n              </NavLink>\r\n            </div>\r\n          </h1>\r\n\r\n          <>\r\n            {isLoading ? (\r\n              <i className=\"fas fa-spinner fa-spin\"></i>\r\n            ) : (\r\n              <MDBTable>\r\n                <MDBTableHead color=\"primary-color\">\r\n                  <tr>\r\n                    <th>Image</th>\r\n                    <th>Pseudo</th>\r\n                    <th>Email</th>\r\n                    <th>Membre depuis</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {!isEmpty(usersData[0]) &&\r\n                    usersData.map((user) => {\r\n                      if (user.role === \"administrateur\") {\r\n                        return (\r\n                          <tr>\r\n                            <td>\r\n                              <img\r\n                                height=\"40\"\r\n                                width=\"40\"\r\n                                style={{ borderRadius: \"50%\" }}\r\n                                src={user.picture}\r\n                                alt=\"poster-pic\"\r\n                              />\r\n                            </td>\r\n                            <td>{user.pseudo}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{dateParser(user.createdAt)}</td>\r\n                            <td>\r\n                              <button type=\"submit\" className=\"btn btn-warning\">\r\n                                <NavLink\r\n                                  style={{ color: \"black\" }}\r\n                                  to={{\r\n                                    pathname: \"/user_view\",\r\n                                    search: `id=${user._id}`,\r\n                                  }}\r\n                                  exact\r\n                                >\r\n                                  <i className=\"fas fa-eye\"></i>\r\n                                </NavLink>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    })}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            )}\r\n          </>\r\n          <MDBTableFoot>Created by \"@Merith\"</MDBTableFoot>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ListAdmin;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Thread.js",["1344"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Trends.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadsFavoris.js",["1345"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadsPro.js",["1346"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Utilitaires.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\LeftNav.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadClient.js",["1347"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\NavBarPro.js",["1348"],"import React, { useContext, lazy, Suspense } from \"react\";\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport styled, { css } from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { menuData, menuDataPro } from \"../../data/MenuData\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Logout = lazy(() => import(\"../Log/Logout\"));\r\n\r\nconst Nav = styled.nav`\r\n  color: #3a3a3a;\r\n  font-weight: bold;\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 1rem 5rem 0 2rem;\r\n  z-index: 100;\r\n  position: fixed;\r\n  width: 100%;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst NavLink = css`\r\n  font-weight: bold;\r\n  color: #3a3a3a;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 1rem 0 2rem;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    color: #f39200;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst NavLinkLogo = css`\r\n  font-weight: bold;\r\n  color: #3a3a3a;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    color: #f39200;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(Link)`\r\n  ${NavLinkLogo}\r\n`;\r\n\r\nconst MenuBars = styled(FaBars)`\r\n  display: none;\r\n  cursor: pointer;\r\n  margin-top: 15px;\r\n  margin-right: -50px;\r\n\r\n  &:hover {\r\n    color: #f39200;\r\n    font-weight: bold;\r\n  }\r\n\r\n  @media screen and (max-width: 1007px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -48px;\r\n\r\n  @media screen and (max-width: 1007px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavMenuLinks = styled(Link)`\r\n  ${NavLink}\r\n`;\r\n\r\nconst NavBtn = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavBarPro = ({ toggle }) => {\r\n  const uid = useContext(UidContext);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const renderLoader = () => <p>Loading</p>;\r\n\r\n  return (\r\n    <Suspense fallback={renderLoader()}>\r\n      <Nav>\r\n        <Logo>\r\n          <span\r\n            style={{\r\n              color: \"#3a3a3a\",\r\n              fontFamily: \"fantasy\",\r\n              fontSize: \"35px\",\r\n            }}\r\n          >\r\n            AtypikHouse\r\n          </span>\r\n        </Logo>\r\n        <MenuBars onClick={toggle} />\r\n        <NavMenu>\r\n          {uid && (\r\n            <NavMenuLinks to=\"profil_pro\">\r\n              <img\r\n                height=\"40\"\r\n                width=\"40\"\r\n                style={{ borderRadius: \"50%\" }}\r\n                src={userData.picture}\r\n                alt=\"poster-pic\"\r\n              />\r\n            </NavMenuLinks>\r\n          )}\r\n          {uid\r\n            ? menuDataPro.map((item, index) => (\r\n                <NavMenuLinks to={item.link} key={index}>\r\n                  {item.title}\r\n                </NavMenuLinks>\r\n              ))\r\n            : menuData.map((item, index) => (\r\n                <NavMenuLinks to={item.link} key={index}>\r\n                  {item.title}\r\n                </NavMenuLinks>\r\n              ))}\r\n          {uid ? <Logout /> : <div></div>}\r\n        </NavMenu>\r\n      </Nav>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default NavBarPro;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\DropdownPro.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\Dropdown.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\NavBar.js",["1349","1350"],"import React, { useContext, lazy, Suspense } from \"react\";\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport styled, { css } from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { menuData, menuDataLocaitaire } from \"../../data/MenuData\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Logout = lazy(() => import(\"../Log/Logout\"));\r\n\r\nconst Nav = styled.nav`\r\n  color: #3a3a3a;\r\n  height: 60px;\r\n  display: flex;\r\n  font-weight: bold;\r\n  justify-content: space-between;\r\n  padding: 1rem 5rem 0 2rem;\r\n  z-index: 100;\r\n  position: fixed;\r\n  width: 100%;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst NavLink = css`\r\n  color: #3a3a3a;\r\n  display: flex;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  padding: 0 1rem 0 2rem;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    color: #cd853f;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst NavLinkLogo = css`\r\n  color: #3a3a3a;\r\n  display: flex;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    color: #cd853f;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(Link)`\r\n  ${NavLinkLogo}\r\n`;\r\n\r\nconst MenuBars = styled(FaBars)`\r\n  display: none;\r\n  cursor: pointer;\r\n  margin-top: 15px;\r\n  margin-right: -50px;\r\n\r\n  &:hover {\r\n    color: #cd853f;\r\n    font-weight: bold;\r\n  }\r\n\r\n  @media screen and (max-width: 1007px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -48px;\r\n\r\n  @media screen and (max-width: 1007px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavMenuLinks = styled(Link)`\r\n  ${NavLink}\r\n`;\r\n\r\nconst NavBtn = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavBar = ({ toggle }) => {\r\n  const uid = useContext(UidContext);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const renderLoader = () => <p>Loading</p>;\r\n\r\n  return (\r\n    <Suspense fallback={renderLoader()}>\r\n      <Nav>\r\n        <Logo to=\"/accueil\">\r\n          <span\r\n            style={{\r\n              color: \"#3a3a3a\",\r\n              fontFamily: \"fantasy\",\r\n              fontSize: \"30px\",\r\n            }}\r\n          >\r\n            AtypikHouse\r\n          </span>\r\n        </Logo>\r\n        <MenuBars onClick={toggle} />\r\n        <NavMenu>\r\n          {uid\r\n            ? menuDataLocaitaire.map((item, index) => (\r\n                <NavMenuLinks to={item.link} key={index}>\r\n                  {item.title}\r\n                </NavMenuLinks>\r\n              ))\r\n            : menuData.map((item, index) => (\r\n                <NavMenuLinks to={item.link} key={index}>\r\n                  {item.title}\r\n                </NavMenuLinks>\r\n              ))}\r\n          {uid ? <Logout /> : <div></div>}\r\n        </NavMenu>\r\n      </Nav>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\NavBarAdmin.js",["1351"],"import React, { useContext, lazy, Suspense } from \"react\";\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport styled, { css } from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { menuData, menuDataAdmin } from \"../../data/MenuData\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Logout = lazy(() => import(\"../Log/Logout\"));\r\n\r\nconst Nav = styled.nav`\r\n  color: #3a3a3a;\r\n  font-weight: bold;\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 1rem 5rem 0 2rem;\r\n  z-index: 100;\r\n  position: fixed;\r\n  width: 100%;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst NavLink = css`\r\n  font-weight: bold;\r\n  color: #3a3a3a;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 1rem 0 2rem;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    color: #f39200;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst NavLinkLogo = css`\r\n  font-weight: bold;\r\n  color: #3a3a3a;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    color: #f39200;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(Link)`\r\n  ${NavLinkLogo}\r\n`;\r\n\r\nconst MenuBars = styled(FaBars)`\r\n  display: none;\r\n  cursor: pointer;\r\n  margin-top: 15px;\r\n  margin-right: -50px;\r\n\r\n  &:hover {\r\n    color: #f39200;\r\n    font-weight: bold;\r\n  }\r\n\r\n  @media screen and (max-width: 1007px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -48px;\r\n\r\n  @media screen and (max-width: 1007px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavMenuLinks = styled(Link)`\r\n  ${NavLink}\r\n`;\r\n\r\nconst NavBtn = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavBarAdmin = ({ toggle }) => {\r\n  const uid = useContext(UidContext);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const renderLoader = () => <p>Loading</p>;\r\n\r\n  return (\r\n    <Suspense fallback={renderLoader()}>\r\n      <Nav>\r\n        <Logo to=\"/gestion\">\r\n          <span\r\n            style={{\r\n              color: \"#3a3a3a\",\r\n              fontFamily: \"fantasy\",\r\n              fontSize: \"35px\",\r\n            }}\r\n          >\r\n            Back Office\r\n          </span>\r\n        </Logo>\r\n        <MenuBars onClick={toggle} />\r\n        <NavMenu>\r\n          {uid && (\r\n            <NavMenuLinks to=\"profil_admin\">\r\n              <img\r\n                height=\"40\"\r\n                width=\"40\"\r\n                style={{ borderRadius: \"50%\" }}\r\n                src={userData.picture}\r\n                alt=\"poster-pic\"\r\n              />\r\n            </NavMenuLinks>\r\n          )}\r\n          {uid\r\n            ? menuDataAdmin.map((item, index) => (\r\n                <NavMenuLinks to={item.link} key={index}>\r\n                  {item.title}\r\n                </NavMenuLinks>\r\n              ))\r\n            : menuData.map((item, index) => (\r\n                <NavMenuLinks to={item.link} key={index}>\r\n                  {item.title}\r\n                </NavMenuLinks>\r\n              ))}\r\n          {uid ? <Logout /> : <div></div>}\r\n        </NavMenu>\r\n      </Nav>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default NavBarAdmin;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\DropDownAdmin.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\Button.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\InfoSection.js",["1352"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"./Button\";\r\n\r\nconst InfoSection = () => {\r\n  const sectionData = useSelector((state) => state.sectionReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const Section = styled.section`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0 0 0 0;\r\n  `;\r\n\r\n  const Container = styled.div`\r\n    width: 100%;\r\n    padding: 2rem calc((100vw - 1300px) / 2);\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      grid-template-columns: 1fr;\r\n    }\r\n  `;\r\n\r\n  const ColunmLeft = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    line-height: 1.4;\r\n    padding: 1rem 2rem;\r\n    order: ${({ reverse }) => (reverse ? \"1\" : \"2\")};\r\n\r\n    p {\r\n      margin-bottom: 2rem;\r\n    }\r\n  `;\r\n\r\n  const ColumnRight = styled.div`\r\n    padding: 1rem 2rem;\r\n    order: ${({ reverse }) => (reverse ? \"1\" : \"2\")};\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      order: ${({ reverse }) => (reverse ? \"2\" : \"1\")};\r\n    }\r\n\r\n    img {\r\n      border-radius: 13px;\r\n      width: 500px;\r\n      height: 500px;\r\n      object-fit: cover;\r\n\r\n      @media screen and (max-width: 768px) {\r\n        width: 90%;\r\n        height: 90%;\r\n      }\r\n    }\r\n  `;\r\n\r\n  if (!Array.isArray(sectionData) || sectionData.length <= 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Section>\r\n      {sectionData.map((section, index) => {\r\n        if (section.reverse === true) {\r\n          return (\r\n            <Container>\r\n              <ColunmLeft>\r\n                <h2 key={index}>{section.titre}</h2>\r\n                <p key={index}>{section.paragraph}</p>\r\n              </ColunmLeft>\r\n              <ColumnRight reverse>\r\n                <picture>\r\n                  <img\r\n                    src={section.picture}\r\n                    alt=\"location\"\r\n                    key={index}\r\n                    className=\"lazyload\"\r\n                    width=\"1208\"\r\n                    quality=\"60\"\r\n                    format=\"webp\"\r\n                    loading=\"lazy\"\r\n                    height=\"50\"\r\n                  />\r\n                </picture>\r\n              </ColumnRight>\r\n            </Container>\r\n          );\r\n        } else if (section.reverse === false) {\r\n          return (\r\n            <Container>\r\n              <ColunmLeft>\r\n                <h2 key={index}>{section.titre}</h2>\r\n                <p key={index}>{section.paragraph}</p>\r\n                {userData.role === \"administrateur\" ? (\r\n                  <i class=\"fas fa-arrow-circle-right\"></i>\r\n                ) : (\r\n                  <Button to=\"/home\">Nos bons plans</Button>\r\n                )}\r\n              </ColunmLeft>\r\n              <ColumnRight>\r\n                <picture>\r\n                  <img\r\n                    src={section.picture}\r\n                    alt=\"location\"\r\n                    key={index}\r\n                    width=\"1208\"\r\n                    className=\"lazyload\"\r\n                    height=\"50\"\r\n                    quality=\"60\"\r\n                    format=\"webp\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </picture>\r\n              </ColumnRight>\r\n            </Container>\r\n          );\r\n        }\r\n      })}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default InfoSection;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\Hero.js",["1353","1354"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components/macro\";\r\nimport { IoMdArrowRoundForward } from \"react-icons/io\";\r\nimport { IoArrowForward, IoArrowBack } from \"react-icons/io5\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst HeroSection = styled.section`\r\n  height: 60vh;\r\n  max-height: 1100px;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst HeroWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  position: relative;\r\n`;\r\n\r\nconst HeroSlide = styled.div`\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst HeroSlider = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: 2;\r\n    width: 100%;\r\n    height: 100vh;\r\n    bottom: 0vh;\r\n    left: 0;\r\n    overflow: hidden;\r\n    opacity: 0.4;\r\n    background: linear-gradient(\r\n      0deg,\r\n      rgba(0, 0, 0, 0.2) 0%,\r\n      rgba(0, 0, 0, 0.2) 50%,\r\n      rgba(0, 0, 0, 0.6) 100%\r\n    );\r\n  }\r\n`;\r\n\r\nconst HeroImage = styled.img`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 80vh;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst HeroContent = styled.div`\r\n  position: relative;\r\n  z-index: 10;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 1600px;\r\n  width: calc(100% - 100px);\r\n  color: #fff;\r\n\r\n  h2 {\r\n    font-size: clamp(1rem, 8vw, 2rem);\r\n    font-weight: bolder;\r\n    text-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);\r\n    text-align: left;\r\n    margin-bottom: 0.8rem;\r\n    color: #fff;\r\n  }\r\n\r\n  h3 {\r\n    margin-bottom: 1.2rem;\r\n    text-shadow: 0px 0px 20px rgba(0, 0, 0, 0.4);\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\n// const Arrow = styled(IoMdArrowRoundForward)`\r\n//   margin-left: 0.5rem;\r\n// `;\r\n\r\nconst SliderButtons = styled.div`\r\n    position absolute;\r\n    bottom: 50px;\r\n    right: 50px;\r\n    display: flex;\r\n    z-index: 10;\r\n`;\r\n\r\nconst arrowButtons = css`\r\n  width: 50px;\r\n  height: 50px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  background: #17233e;\r\n  border-radius: 50px;\r\n  padding: 10px;\r\n  margin-right: 1rem;\r\n  user-select: none;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    background: #f39200;\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst PrevArrow = styled(IoArrowBack)`\r\n  ${arrowButtons}\r\n`;\r\n\r\nconst NextArrow = styled(IoArrowForward)`\r\n  ${arrowButtons}\r\n`;\r\n\r\nconst Hero = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const timeout = useRef(null);\r\n  const paramData = useSelector((state) => state.paramReducer);\r\n  const length = paramData.length;\r\n\r\n  /* useEffect(() => {\r\n    const nextSlide = () => {\r\n      setCurrent((current) => (current === length - 1 ? 0 : current + 1));\r\n    };\r\n\r\n    timeout.current = setTimeout(nextSlide, 3000);\r\n\r\n    return function () {\r\n      if (timeout.current) {\r\n        clearTimeout(timeout.current);\r\n      }\r\n    };\r\n  }, [current, length]); */\r\n\r\n  const nextSlide = () => {\r\n    if (timeout.current) {\r\n      clearTimeout(timeout.current);\r\n    }\r\n\r\n    setCurrent(current === length - 1 ? 0 : current + 1);\r\n\r\n    // console.log(current);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    if (timeout.current) {\r\n      clearTimeout(timeout.current);\r\n    }\r\n\r\n    setCurrent(current === 0 ? length - 1 : current - 1);\r\n\r\n    // console.log(current);\r\n  };\r\n\r\n  if (!Array.isArray(paramData) || paramData.length <= 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <HeroSection>\r\n      <HeroWrapper>\r\n        {paramData.map((slide, index) => {\r\n          return (\r\n            <HeroSlide key={index}>\r\n              {index === current && (\r\n                <HeroSlider>\r\n                  <HeroImage\r\n                    src={slide.picture}\r\n                    className=\"lazyload\"\r\n                    alt=\"location\"\r\n                    width=\"1208\"\r\n                    height=\"50\"\r\n                    quality=\"60\"\r\n                    format=\"webp\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                  <HeroContent>\r\n                    {/* <h2>{slide.titre}</h2>\r\n                    <h3>\r\n                      {slide.prix}€ / {slide.temps}\r\n                    </h3> */}\r\n                  </HeroContent>\r\n                </HeroSlider>\r\n              )}\r\n            </HeroSlide>\r\n          );\r\n        })}\r\n        <SliderButtons>\r\n          <PrevArrow onClick={prevSlide} />\r\n          <NextArrow onClick={nextSlide} />\r\n        </SliderButtons>\r\n      </HeroWrapper>\r\n    </HeroSection>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\PageAccueil\\Footer.js",["1355","1356","1357","1358","1359","1360","1361","1362","1363","1364"],"import { MDBFooter } from \"mdbreact\";\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MDBFooter style={{ backgroundColor: \"#3a3a3a\" }}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <span style={{ color: \"#fff\", fontSize: \"20px\" }}>A propos</span>\r\n            <hr />\r\n            <ul>\r\n              <li>\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Qui sommes-nous?\r\n                </a>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Devenez propiétaire\r\n                </a>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Dévenez locataire\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <span style={{ color: \"#fff\", fontSize: \"20px\" }}>\r\n              Nos applications\r\n            </span>\r\n            <hr />\r\n            <img\r\n              src=\"./img/pwa.png\"\r\n              alt=\"appli\"\r\n              width=\"120\"\r\n              height=\"40\"\r\n              quality=\"60\"\r\n              format=\"webp\"\r\n              loading=\"lazy\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <span style={{ color: \"#fff\", fontSize: \"20px\" }}>légalités</span>\r\n            <hr />\r\n            <ul>\r\n              <li>\r\n                {\" \"}\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Conditions générales d'utilisation\r\n                </a>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Vie privée et cookies\r\n                </a>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Vos droits et obligations\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <span style={{ color: \"#fff\", fontSize: \"20px\" }}>Questions</span>\r\n            <hr />\r\n            <ul>\r\n              <li>\r\n                {\" \"}\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Aide\r\n                </a>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Sécurité de paiement\r\n                </a>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Status de nos service\r\n                </a>\r\n              </li>\r\n              <li>\r\n                {\" \"}\r\n                <a href=\"#\" style={{ color: \"white\" }}>\r\n                  Nos conseillé(e)s à votre écoute\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <span style={{ color: \"#fff\", fontSize: \"20px\" }}>\r\n              Notre présence\r\n            </span>\r\n            <hr />\r\n            <div className=\"container\">\r\n              <a\r\n                href=\"https://www.facebook.com/AtypikHouse-G4-111309504389945\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <img\r\n                  className=\"img_dec\"\r\n                  src=\"./img/logo/facebook.png\"\r\n                  alt=\"facebook\"\r\n                  width=\"50\"\r\n                  quality=\"60\"\r\n                  format=\"webp\"\r\n                  loading=\"lazy\"\r\n                  height=\"50\"\r\n                />\r\n              </a>{\" \"}\r\n              <a\r\n                href=\"https://www.instagram.com/atypikhouse.g4/\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <img\r\n                  className=\"img_dec\"\r\n                  src=\"./img/logo/instagram.png\"\r\n                  alt=\"instagram\"\r\n                  width=\"50\"\r\n                  quality=\"60\"\r\n                  format=\"webp\"\r\n                  loading=\"lazy\"\r\n                  height=\"50\"\r\n                />\r\n              </a>{\" \"}\r\n              <a\r\n                href=\"https://twitter.com/AtypikhouseG\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <img\r\n                  className=\"img_dec\"\r\n                  src=\"./img/logo/twitter.png\"\r\n                  alt=\"twitter\"\r\n                  width=\"50\"\r\n                  quality=\"60\"\r\n                  format=\"webp\"\r\n                  loading=\"lazy\"\r\n                  height=\"50\"\r\n                />\r\n              </a>{\" \"}\r\n              <a href=\"https://linkedin.com\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img\r\n                  className=\"img_dec\"\r\n                  src=\"./img/logo/linkedin.png\"\r\n                  alt=\"linkedin\"\r\n                  width=\"50\"\r\n                  height=\"50\"\r\n                  quality=\"60\"\r\n                  format=\"webp\"\r\n                  loading=\"lazy\"\r\n                />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Profil\\UpdateInfoProfil.js",["1365","1366"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport UpdatePicture from \"./UpdatePicture\";\nimport { dateParser } from \"../Utilitaires\";\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody } from \"mdbreact\";\n\nconst UpdateInfoProfil = () => {\n  const userData = useSelector((state) => state.userReducer);\n  const error = useSelector((state) => state.errorReducer.userError);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\" style={{ paddingTop: \"10%\" }}>\n          <MDBContainer>\n            <bcomplexe r />\n            <MDBRow>\n              <MDBCol md=\"12\">\n                <MDBCard>\n                  <MDBCardBody>\n                    <h2> Profil de {userData.pseudo}</h2>\n                    <h3>({userData.role})</h3>\n                    <p>Compte créé le : {dateParser(userData.createdAt)}</p>\n                    <p>Pseudo: {userData.pseudo}</p>\n                    <p>Email: {userData.email}</p>\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <div className=\"left-part\">\n                          <img\n                            height=\"30%\"\n                            width=\"100%\"\n                            style={{\n                              borderRadius: \"30px\",\n                              border: \"2px solid #ff7979\",\n                            }}\n                            src={userData.picture}\n                            alt=\"user-pic\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UpdateInfoProfil;\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\Card.js",["1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\SearchForm.js",["1379","1380","1381"],"import { MDBCard, MDBCardBody } from \"mdbreact\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isEmpty } from \"../Utilitaires\";\r\nimport Card from \"./Card\";\r\n\r\nconst SearchForm = () => {\r\n  const posts = useSelector((state) => state.postReducer);\r\n  const [searcharr, setSearcharr] = useState(\"\");\r\n  const [searchdep, setSearchdep] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const refrechSearch = () => {\r\n    setSearcharr(\"\");\r\n    setSearchdep(\"\");\r\n    setType(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MDBCard>\r\n        <MDBCardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <label style={{ color: \"#3a3a3a\", fontWeight: \"bold\" }}>\r\n                Date d'arriver\r\n              </label>\r\n              <input\r\n                htmlFor=\"date_arr\"\r\n                type=\"date\"\r\n                id=\"date_arr\"\r\n                onChange={(e) => setSearcharr(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <label style={{ color: \"#3a3a3a\", fontWeight: \"bold\" }}>\r\n                Date de départ\r\n              </label>\r\n              <input\r\n                htmlFor=\"date_dep\"\r\n                type=\"date\"\r\n                id=\"date_dep\"\r\n                onChange={(e) => setSearchdep(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            {!isEmpty(posts[0]) &&\r\n              posts.map((post) => {\r\n                if (post.status === \"non_reservé\") {\r\n                  if (\r\n                    (searcharr < post.date_open ||\r\n                      post.date_close > searcharr) &&\r\n                    searcharr > post.date_open\r\n                  ) {\r\n                    if (searchdep <= post.date_close) {\r\n                      return (\r\n                        <div>\r\n                          <p style={{ color: \"#2950b9\", fontWeight: \"bold\" }}>\r\n                            Disponible\r\n                          </p>\r\n                          <Card post={post} key={post._id} />\r\n                        </div>\r\n                      );\r\n                    }\r\n                  }\r\n                }\r\n              })}\r\n          </div>\r\n          <div>\r\n            {!isEmpty(posts[0]) &&\r\n              posts.map((post) => {\r\n                if (post.type === type && post.status === \"non_reservé\") {\r\n                  return (\r\n                    <div>\r\n                      <p style={{ color: \"green\" }}>{post.type}</p>\r\n                      <Card post={post} key={post._id} />\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n          </div>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          <select\r\n            onChange={(e) => setType(e.target.value)}\r\n            name=\"type\"\r\n            id=\"type\"\r\n            class=\"browser-default custom-select\"\r\n          >\r\n            <option value=\"\">***Type***</option>\r\n            <option value=\"cabane dans les arbres\">\r\n              cabane dans les arbres\r\n            </option>\r\n            <option value=\"cabane flottante\">cabane flottante</option>\r\n            <option value=\"yourte\">yourte</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <a class=\"btn-floating\">\r\n            <i\r\n              title=\"Rafraîchir\"\r\n              onClick={refrechSearch}\r\n              class=\"fas fa-sync-alt\"\r\n            ></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\ReservationForm.js",["1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { isEmpty, shortDateParser } from \"../../components/Utilitaires\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport {\r\n  addReservation,\r\n  deleteReserve,\r\n  editReservation,\r\n  getPosts,\r\n  sendEmail,\r\n  sendJustificatif,\r\n  updateStatus,\r\n} from \"../../actions/postAction\";\r\nimport Map from \"../GoogleMap/Map\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport MsgData from \"../../data/MsgData\";\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport PayPalCheckout from \"react-paypal-checkout-button\";\r\nimport \"react-paypal-checkout-button/dist/index.css\";\r\n\r\nconst ReservationForm = ({ post }) => {\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const status = \"attente\";\r\n  const [date_open, setDate_open] = useState(\"\");\r\n  const [date_close, setDate_close] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [paiement, setPaiement] = useState(\"\");\r\n\r\n  let amount;\r\n  let currency_code;\r\n\r\n  const uid = useContext(UidContext);\r\n\r\n  const notifySuccess = () => {\r\n    toast.success(\"Réservation réusiite!\", {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  const notifySuccessTransaction = () => {\r\n    toast(\"Transaction effectuée avec succès!\", {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    dispatch(\r\n      sendJustificatif(userData.email, userData.pseudo, post.prix, post.titre)\r\n    );\r\n\r\n    post.reservations.map((reservation) => {\r\n      if (reservation.reservationId === userData._id) {\r\n        dispatch(editReservation(post._id, reservation._id, post.prix));\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmReservation = () => {\r\n    dispatch(\r\n      updateStatus(post._id, post.message, status, userData._id, userData.role)\r\n    );\r\n    {\r\n      !isEmpty(usersData[0]) &&\r\n        usersData.map((user) => {\r\n          if (post.posterId === user._id) {\r\n            dispatch(\r\n              sendEmail(\r\n                user.email,\r\n                user.pseudo,\r\n                MsgData[1].subject,\r\n                MsgData[1].text\r\n              )\r\n            );\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const double = (e) => {\r\n    e.preventDefault();\r\n    notifySuccess();\r\n    confirmReservation();\r\n    window.location.reload(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  const images = [\r\n    {\r\n      original: `${post.picture[0]}`,\r\n      thumbnail: `${post.picture[0]}`,\r\n    },\r\n    {\r\n      original: `${post.picture[1]}`,\r\n      thumbnail: `${post.picture[1]}`,\r\n    },\r\n    {\r\n      original: `${post.picture[2]}`,\r\n      thumbnail: `${post.picture[2]}`,\r\n    },\r\n    {\r\n      original: `${post.picture[3]}`,\r\n      thumbnail: `${post.picture[3]}`,\r\n    },\r\n    {\r\n      original: `${post.picture[4]}`,\r\n      thumbnail: `${post.picture[4]}`,\r\n    },\r\n  ];\r\n\r\n  const makePayment = (e) => {\r\n    e.preventDefault();\r\n    post.reservations.map((reservation) => {\r\n      if (reservation.reservationId === userData._id) {\r\n        dispatch(editReservation(post._id, reservation._id, post.prix));\r\n        dispatch(\r\n          sendJustificatif(\r\n            userData.email,\r\n            userData.pseudo,\r\n            post.prix,\r\n            post.titre\r\n          )\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const notify = () => {\r\n    toast.warn(\"Demande déjà été prise en compte, en attente de validation\", {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  const notifyNoDate = () => {\r\n    toast.info(\"Veuillez saisir les dates de reservation\", {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  const notifyReservation = () => {\r\n    toast.success(\"Dates de reservation enregistré avec succès!\", {\r\n      position: \"top-right\",\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  const notPaye = () => {\r\n    toast.error(\r\n      \"Veuillez confirmer la reservation avant d'effectuer le paiement!\",\r\n      {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleDate = (e) => {\r\n    e.preventDefault();\r\n    if (date_open !== \"\" && date_close !== \"\") {\r\n      if (date_open >= post.date_open && date_close <= post.date_close) {\r\n        if (date_open > date_close) {\r\n          alert(\"Vos dates sont incorrectes \");\r\n        } else if (date_open === date_close) {\r\n          alert(\"Vos dates sont incorrectes \");\r\n        } else {\r\n          dispatch(\r\n            addReservation(\r\n              post._id,\r\n              userData._id,\r\n              userData.pseudo,\r\n              userData.role,\r\n              paiement,\r\n              date_open,\r\n              date_close\r\n            )\r\n          )\r\n            .then(() => dispatch(getPosts()))\r\n            .then(() => setDate_open(\"\"))\r\n            .then(() => setDate_close(\"\"));\r\n          setShowForm(true);\r\n          notifyReservation();\r\n        }\r\n      } else {\r\n        alert(\"Veuillez entrer des dates valides \");\r\n      }\r\n    } else {\r\n      alert(\"Veuillez entrer deux dates \");\r\n    }\r\n  };\r\n\r\n  const deleteDate = (e) => {\r\n    e.preventDefault();\r\n    post.reservations.map((reservation) => {\r\n      if (reservation.reservationId === userData._id) {\r\n        dispatch(\r\n          deleteReserve(\r\n            post._id,\r\n            reservation._id,\r\n            userData.email,\r\n            post.titre,\r\n            userData.pseudo\r\n          )\r\n        );\r\n        setShowForm(false);\r\n        dispatch(\r\n          updateStatus(post._id, post.message, \"non_reservé\", userData._id)\r\n        );\r\n      }\r\n    });\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div style={{ textAlign: \"left\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <h2 style={{ fontWeight: \"bold\" }}>{post.titre}</h2>\r\n                <p>{post.prix} € la nuité</p>\r\n                <ul>\r\n                  {post.video && (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"400\"\r\n                      src={post.video}\r\n                      frameBorder=\"0\"\r\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowFullScreen\r\n                      title={post._id}\r\n                    ></iframe>\r\n                  )}\r\n                  <br />\r\n                  <ImageGallery items={images} />\r\n\r\n                  <span>\r\n                    Type : {post.type} <br /> Département : {post.departement}{\" \"}\r\n                    <br /> Pour {post.nbr_personne} personne\r\n                    {post.nbr_personne > 1 ? \"s\" : \"\"}\r\n                  </span>\r\n                  <br />\r\n                  <span style={{ fontSize: \"12px\" }}>\r\n                    Disponible du {shortDateParser(post.date_open)} au{\" \"}\r\n                    {shortDateParser(post.date_close)}\r\n                  </span>\r\n\r\n                  <hr />\r\n                  <h3 style={{ fontWeight: \"bolder\" }}>Dates de réservation</h3>\r\n\r\n                  {isEmpty(post.reservations[0]) && (\r\n                    <form action=\"\" onSubmit={handleDate}>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-5\">\r\n                          <MDBInput\r\n                            label=\"A partir\"\r\n                            type=\"date\"\r\n                            name=\"date_open\"\r\n                            id=\"date_open\"\r\n                            style={{ fontSize: \"12px\" }}\r\n                            onChange={(e) => setDate_open(e.target.value)}\r\n                            value={date_open}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-5\">\r\n                          <MDBInput\r\n                            label=\"Jusqu'au\"\r\n                            type=\"date\"\r\n                            name=\"date_close\"\r\n                            id=\"date_close\"\r\n                            style={{ fontSize: \"12px\" }}\r\n                            onChange={(e) => setDate_close(e.target.value)}\r\n                            value={date_close}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                          {uid === null && (\r\n                            <Popup\r\n                              trigger={<i className=\"fas fa-paper-plane\"></i>}\r\n                              position={[\r\n                                \"bottom center\",\r\n                                \"bottom right\",\r\n                                \"bottom left\",\r\n                              ]}\r\n                              closeOnDocumentClick\r\n                            >\r\n                              <div>\r\n                                Connectez-vous pour faire une reservation!\r\n                              </div>\r\n                            </Popup>\r\n                          )}\r\n                          {uid && (\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"fas fa-paper-plane btn waves-effect waves-light\"\r\n                              style={{ fontSize: \"10px\" }}\r\n                            ></button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  )}\r\n\r\n                  {post.reservations.map((reservation) => {\r\n                    if (reservation.reservationId === userData._id) {\r\n                      return (\r\n                        <>\r\n                          <p>\r\n                            Reservation du{\" \"}\r\n                            {shortDateParser(reservation.date_open)} au{\" \"}\r\n                            {shortDateParser(reservation.date_close)}{\" \"}\r\n                            <img src=\"./img/check.png\" alt=\"\" />\r\n                          </p>\r\n                          <button\r\n                            className=\"btn waves-effect waves-light\"\r\n                            onClick={deleteDate}\r\n                          >\r\n                            Annuler\r\n                          </button>\r\n                          <p style={{ color: \"#cc3300\", fontSize: \"11px\" }}>\r\n                            En cas d'annulation après paiement, la somme perçue\r\n                            vous sera remboursée dans un delais de 5 jours'\r\n                          </p>\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n\r\n                  <hr />\r\n                  <h3 style={{ fontWeight: \"bold\" }}>Détails</h3>\r\n                  <p>{post.message}</p>\r\n                  <hr />\r\n                  <Map post={post} key={post._id} />\r\n                </ul>\r\n\r\n                <hr />\r\n                <h3 style={{ fontWeight: \"bold\" }}>\r\n                  {\" \"}\r\n                  Les informations du propriétaire\r\n                </h3>\r\n                <div>\r\n                  {!isEmpty(usersData[0]) &&\r\n                    usersData.map((user) => {\r\n                      if (post.posterId === user._id) {\r\n                        return (\r\n                          <div>\r\n                            <br />* Pseudo\r\n                            <h4> {user.pseudo}</h4>* Email\r\n                            <h4> {user.email}</h4>* Numéro de tel\r\n                            <h4> {user.tel}</h4>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })}\r\n                </div>\r\n                <br />\r\n                <br />\r\n                {post.status === \"non_reservé\" && showForm && (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn waves-effect waves-light\"\r\n                      onClick={double}\r\n                    >\r\n                      Confirmer reservation\r\n                    </button>\r\n                    <ToastContainer\r\n                      position=\"top-right\"\r\n                      autoClose={5000}\r\n                      hideProgressBar={false}\r\n                      newestOnTop\r\n                      closeOnClick\r\n                      rtl={false}\r\n                      pauseOnFocusLoss\r\n                      draggable\r\n                      pauseOnHover\r\n                    />\r\n                  </>\r\n                )}\r\n\r\n                {(post.status === \"non_reservé\" || post.status === \"refusé\") &&\r\n                  !showForm && (\r\n                    <>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn waves-effect waves-light\"\r\n                        onClick={notifyNoDate}\r\n                      >\r\n                        Confirmer reservation\r\n                      </button>\r\n                      <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={5000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                      />\r\n                      <ToastContainer />\r\n                    </>\r\n                  )}\r\n\r\n                {post.status === \"attente\" && (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn waves-effect waves-light\"\r\n                      onClick={notify}\r\n                    >\r\n                      Confirmer reservation\r\n                    </button>\r\n                    <ToastContainer\r\n                      position=\"top-right\"\r\n                      autoClose={5000}\r\n                      hideProgressBar={false}\r\n                      newestOnTop={false}\r\n                      closeOnClick\r\n                      rtl={false}\r\n                      pauseOnFocusLoss\r\n                      draggable\r\n                      pauseOnHover\r\n                    />\r\n                    <ToastContainer />\r\n\r\n                    <br />\r\n                    {post.reservations.map((reservation) => {\r\n                      if (reservation.paiement === null) {\r\n                        return (\r\n                          <>\r\n                            {/*<StripeCheckout\r\n                              stripeKey=\"pk_test_51IQafJDRHvU06AUoTyjd7f3g4TuEJI2wfvRwZxHKSuHQvfZE8J5Dy9GAgeNcH5oZoK6HDa1cYUFyaLKwis59tvRd00ZAf60pn1\"\r\n                              token={makePayment}\r\n                              name=\"By Merith\"\r\n                              amount={post.prix * 100}\r\n                            >\r\n                              <button\r\n                                className=\"btn-large\"\r\n                                style={{\r\n                                  backgroundColor: \"#17233e\",\r\n                                  borderRadius: \"15px\",\r\n                                }}\r\n                              >\r\n                                Payer {post.prix} €\r\n                              </button>\r\n                              </StripeCheckout>*/}\r\n\r\n                            <PayPalCheckout\r\n                              clientId=\"AdAzHnsF7UBJ0U0nXuLlV73wyQI6wG-bUGkjB-Bb3pd3CU6Y-IlDJxtSkHB5y8ACs4KHNTHcvX5njpkN\"\r\n                              amount={post.prix}\r\n                              currency=\"EUR\"\r\n                              onSuccess={(data, order) => {\r\n                                amount = order.purchase_units[0].amount.value;\r\n                                currency_code =\r\n                                  order.purchase_units[0].amount.currency_code;\r\n                                notifySuccessTransaction();\r\n                                makePayment();\r\n                                console.log(order.purchase_units[0].amount);\r\n                              }}\r\n                              onError={(error) => {\r\n                                console.log(error);\r\n                              }}\r\n                            />\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <p style={{ fontWeight: \"bold\", color: \"green\" }}>\r\n                            Paiement effectué, un justificatif vous a été envoyé\r\n                            dans votre boite mail{\" \"}\r\n                            <img src=\"./img/check.png\" alt=\"\" />\r\n                          </p>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </>\r\n                )}\r\n\r\n                {post.status === \"non_reservé\" && (\r\n                  <>\r\n                    <br />\r\n                    <button\r\n                      className=\"btn-large\"\r\n                      style={{\r\n                        backgroundColor: \"#17233e\",\r\n                        borderRadius: \"15px\",\r\n                      }}\r\n                      onClick={notPaye}\r\n                    >\r\n                      Payer {post.prix} €\r\n                    </button>\r\n                    <ToastContainer\r\n                      position=\"top-right\"\r\n                      autoClose={5000}\r\n                      hideProgressBar={false}\r\n                      newestOnTop\r\n                      closeOnClick\r\n                      rtl={false}\r\n                      pauseOnFocusLoss\r\n                      draggable\r\n                      pauseOnHover\r\n                    />\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReservationForm;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\CardPrises.js",["1394"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\NewPostForm.js",["1395","1396","1397","1398"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\InfoData.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\SliderData.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadAdmin.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\ThreadVal.js",["1399"],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\LeftNavAdmin.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Parametre\\UpdateSection.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Parametre\\UpdateParam.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Parametre\\SectionForm.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Parametre\\ParamForm.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\MenuData.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\GoogleData.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\data\\MsgData.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\CardaddPic.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\CardComments.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\DeleteCard.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\LikeButton.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Profil\\UpdatePicture.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\CardAdmin.js",["1400"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../Utilitaires\";\r\nimport { updatePost, updateStatus } from \"../../actions/postAction\";\r\nimport DeleteCard from \"./DeleteCard\";\r\nimport CardComments from \"./CardComments\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { MDBCard } from \"mdbreact\";\r\nimport { useContext } from \"react\";\r\nimport { UidContext } from \"../UserIdConnect\";\r\nimport CardaddPic from \"./CardaddPic\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport CardPrises from \"./CardPrises\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst CardAdmin = ({ post }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isUpdated, setIsUpdated] = useState(false);\r\n  const [textUpdate, setTextUpdate] = useState(null);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const dispatch = useDispatch();\r\n  const uid = useContext(UidContext);\r\n  const userData = useSelector((state) => state.userReducer);\r\n\r\n  const validePublication = () => {\r\n    dispatch(\r\n      updateStatus(\r\n        post._id,\r\n        post.message,\r\n        \"non_reservé\",\r\n        post.clientId,\r\n        userData.role\r\n      )\r\n    );\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenB, setIsOpenB] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const showModalB = () => {\r\n    setIsOpenB(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const hideModalB = () => {\r\n    setIsOpenB(false);\r\n  };\r\n\r\n  const ajoutImg = () => {\r\n    return (\r\n      <>\r\n        <div\r\n          onClick={showModalB}\r\n          style={{ cursor: \"pointer\" }}\r\n          title=\"Voir toutes les images\"\r\n        >\r\n          <i className=\"fas fa-image\"></i>\r\n        </div>\r\n        <Modal show={isOpenB} onHide={hideModalB}>\r\n          <Modal.Header>\r\n            <Modal.Title>Images</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {\" \"}\r\n            <CardaddPic post={post} key={post._id} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button onClick={hideModalB}>Fermer</button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const ficheLocataire = () => {\r\n    if (post.clientId !== null && userData.role === \"administrateur\") {\r\n      return (\r\n        <Popup\r\n          trigger={<i class=\"fas fa-address-card\" title=\"fiche locataire\"></i>}\r\n          position={[\"bottom right\"]}\r\n          closeOnDocumentClick\r\n        >\r\n          <div>\r\n            {!isEmpty(usersData[0]) &&\r\n              usersData.map((user) => {\r\n                if (user._id === post.clientId) {\r\n                  return (\r\n                    <>\r\n                      <p>\r\n                        Pseudo : {user.pseudo}\r\n                        {post.status === \"reservé\" && (\r\n                          <img src=\"./img/check.png\" alt=\"\" />\r\n                        )}\r\n                        {post.status === \"refusé\" && (\r\n                          <img src=\"./img/close.png\" alt=\"\" />\r\n                        )}\r\n                        {post.status === \"attente\" && (\r\n                          <img src=\"./img/Spinner.svg\" alt=\"\" />\r\n                        )}\r\n                        <br />\r\n                        {user.email} <br />\r\n                        Tel : {user.tel}\r\n                      </p>\r\n                    </>\r\n                  );\r\n                }\r\n              })}\r\n          </div>\r\n        </Popup>\r\n      );\r\n    }\r\n  };\r\n\r\n  const status = () => {\r\n    if (post.status === \"réservé\") {\r\n      return (\r\n        <span\r\n          style={{\r\n            fontSize: \"12px\",\r\n            backgroundColor: \"#ff9f1a\",\r\n            borderRadius: \"4px 8px\",\r\n          }}\r\n        >\r\n          Réservé\r\n        </span>\r\n      );\r\n    } else if (post.status === \"attente\") {\r\n      return (\r\n        <span\r\n          style={{\r\n            fontSize: \"12px\",\r\n            backgroundColor: \"#25fde9\",\r\n            borderRadius: \"4px 8px\",\r\n          }}\r\n        >\r\n          En attente\r\n        </span>\r\n      );\r\n    } else if (post.status === \"annulé\") {\r\n      return (\r\n        <span\r\n          style={{\r\n            fontSize: \"12px\",\r\n            backgroundColor: \"#ff9f1a\",\r\n            borderRadius: \"4px 8px\",\r\n          }}\r\n        >\r\n          Annulé\r\n        </span>\r\n      );\r\n    } else if (post.status === \"non_reservé\") {\r\n      return (\r\n        <span\r\n          style={{\r\n            fontSize: \"12px\",\r\n            backgroundColor: \"#ff9f1a\",\r\n            borderRadius: \"4px 8px\",\r\n          }}\r\n        >\r\n          Non reservé\r\n        </span>\r\n      );\r\n    } else if (post.status === \"validation\") {\r\n      return (\r\n        <div>\r\n          <span\r\n            style={{\r\n              fontSize: \"12px\",\r\n              backgroundColor: \"#25fde9\",\r\n              borderRadius: \"4px 8px\",\r\n            }}\r\n          >\r\n            En attente\r\n          </span>\r\n\r\n          <form action=\"\" onClick={validePublication}>\r\n            <button type=\"submit\">Valider</button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const updateItem = () => {\r\n    if (textUpdate) {\r\n      dispatch(updatePost(post._id, textUpdate, userData.role));\r\n    }\r\n    setIsUpdated(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <MDBCard>\r\n        <li className=\"container\" key={post._id}>\r\n          {isLoading ? (\r\n            <i className=\"fas fa-spinner fa-spin\"></i>\r\n          ) : (\r\n            <>\r\n              <div className=\"round\">\r\n                <h2 style={{ paddingTop: \"3px\", fontSize: \"15px\" }}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                      <img\r\n                        height=\"40\"\r\n                        width=\"40\"\r\n                        style={{ borderRadius: \"50%\" }}\r\n                        src={\r\n                          !isEmpty(usersData[0]) &&\r\n                          usersData\r\n                            .map((user) => {\r\n                              if (user._id === post.posterId)\r\n                                return user.picture;\r\n                              else return null;\r\n                            })\r\n                            .join(\"\")\r\n                        }\r\n                        alt=\"poster-pic\"\r\n                      />\r\n                      {\"  \"}\r\n                      {!isEmpty(usersData[0]) &&\r\n                        usersData\r\n                          .map((user) => {\r\n                            if (user._id === post.posterId) return user.pseudo;\r\n                            else return null;\r\n                          })\r\n                          .join(\"\")}\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <div className=\"col-sm\" style={{ textAlign: \"right\" }}>\r\n                        <img\r\n                          onClick={showModal}\r\n                          style={{ cursor: \"pointer\" }}\r\n                          src=\"./img/camera.png\"\r\n                          title=\"Prise de vue locataire\"\r\n                          alt=\"\"\r\n                        />\r\n                        <Modal show={isOpen} onHide={hideModal}>\r\n                          <Modal.Header>\r\n                            <Modal.Title>\r\n                              Prise de vue et activités à proximité\r\n                            </Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                            <CardPrises post={post} key={post._id} />\r\n                          </Modal.Body>\r\n                          <Modal.Footer>\r\n                            <button onClick={hideModal}>Fermer</button>\r\n                          </Modal.Footer>\r\n                        </Modal>\r\n\r\n                        <br />\r\n                        {ajoutImg()}\r\n                        {ficheLocataire()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </h2>\r\n              </div>\r\n              <div>\r\n                <div>\r\n                  <div>\r\n                    <h4>{post.titre}</h4>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm\">\r\n                    {uid ? (\r\n                      <div>\r\n                        {post.picture && (\r\n                          <img\r\n                            height=\"200\"\r\n                            width=\"100%\"\r\n                            src={post.picture[0]}\r\n                            alt=\"card-pic\"\r\n                            className=\"card-pic\"\r\n                          />\r\n                        )}\r\n                        {post.video && (\r\n                          <iframe\r\n                            width=\"100%\"\r\n                            height=\"200\"\r\n                            src={post.video}\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            allowFullScreen\r\n                            title={post._id}\r\n                          ></iframe>\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        {post.picture && (\r\n                          <img\r\n                            height=\"200\"\r\n                            width=\"100%\"\r\n                            src={post.picture}\r\n                            alt=\"card-pic\"\r\n                            className=\"card-pic\"\r\n                          />\r\n                        )}\r\n                        {post.video && (\r\n                          <iframe\r\n                            width=\"100%\"\r\n                            height=\"200\"\r\n                            src={post.video}\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            allowFullScreen\r\n                            title={post._id}\r\n                          ></iframe>\r\n                        )}\r\n                      </>\r\n                    )}\r\n\r\n                    {isUpdated && (\r\n                      <div className=\"update-post\">\r\n                        <textarea\r\n                          defaultValue={post.message}\r\n                          onChange={(e) => setTextUpdate(e.target.value)}\r\n                        />\r\n                        <div className=\"button-container\">\r\n                          <button className=\"btn\" onClick={updateItem}>\r\n                            Valider modification\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <span style={{ fontSize: \"12px\", fontWeight: \"bold\" }}>\r\n                      Publiée le {dateParser(post.createdAt)}\r\n                    </span>\r\n\r\n                    {isUpdated === false && <p>{post.message}</p>}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm\">\r\n                    <span style={{ fontSize: \"12px\" }}>commentaire </span>\r\n                    <i\r\n                      onClick={() => setShowComments(!showComments)}\r\n                      className=\"fas fa-comment\"\r\n                    ></i>{\" \"}\r\n                    {post.comments.length}\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <span style={{ fontSize: \"12px\" }}>j'aime </span>\r\n                    <i className=\"fas fa-star\"></i> {post.likers.length}\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <span style={{ fontSize: \"12px\" }}>voir </span>\r\n                    <i className=\"fas fa-eye\"></i>\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    {\r\n                      <div className=\"button-container\">\r\n                        <DeleteCard id={post._id} />\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <span style={{ fontSize: \"12px\" }}>\r\n                      status : {status()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                {showComments && <CardComments post={post} />}\r\n              </div>\r\n            </>\r\n          )}\r\n        </li>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardAdmin;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\GoogleMap\\Map.js",["1401","1402"],"import React from \"react\";\r\nimport \"../../style/Map.css\";\r\nimport {\r\n  InfoWindow,\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport { GoogleData } from \"../../data/GoogleData\";\r\nGeocode.setApiKey(\"AIzaSyAtAsOVenmjEzpg_JiXjMglbFjEt3rPLr0\");\r\n\r\nconst Map = ({ post }) => {\r\n  let valLng;\r\n  let valLat;\r\n  let place;\r\n  let zoom;\r\n\r\n  {\r\n    GoogleData.map((item, key) => {\r\n      if (item.name === post.departement) {\r\n        if (post.lng && post.lat) {\r\n          return (\r\n            <div key={key}>\r\n              {(valLat = post.lat)}\r\n              {(valLng = post.lng)}\r\n              {(place = post.titre)}\r\n              {(zoom = 16)}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div key={key}>\r\n              {(valLat = item.lat)}\r\n              {(valLng = item.lng)}\r\n              {(place = post.departement)}\r\n              {(zoom = 6)}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const MapWithAMarker = withScriptjs(\r\n    withGoogleMap((props) => (\r\n      <GoogleMap\r\n        defaultZoom={zoom}\r\n        defaultCenter={{ lat: valLat, lng: valLng }}\r\n      >\r\n        <Marker position={{ lat: valLat, lng: valLng }}>\r\n          <InfoWindow>\r\n            <div>{place}</div>\r\n          </InfoWindow>\r\n        </Marker>\r\n      </GoogleMap>\r\n    ))\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h3>Google Map</h3>\r\n      <MapWithAMarker\r\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAtAsOVenmjEzpg_JiXjMglbFjEt3rPLr0&v=3.exp&libraries=geometry,drawing,places\"\r\n        loadingElement={<div style={{ height: `100%` }} />}\r\n        containerElement={<div style={{ height: `400px` }} />}\r\n        mapElement={<div style={{ height: `100%` }} />}\r\n      />\r\n      {post.lng && post.lat && (\r\n        <div>\r\n          <br />\r\n          Latitude : {valLat} <br />\r\n          <br />\r\n          Longitude : {valLng}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Post\\EditDeleteComment.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Navbar.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Forgot.js",["1403"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n} from \"mdbreact\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Forgot = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const notifySuccess = () => {\r\n    toast(\"Un mail de réinitialisation vous a été envoyé!\", {\r\n      position: \"top-right\",\r\n      autoClose: 10000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const emailError = document.querySelector(\".email.error\");\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_API_URL}api/user/forgot`,\r\n      withCredentials: true,\r\n      data: {\r\n        email,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.errors) {\r\n          emailError.innerHTML = res.data.errors.email;\r\n        } else {\r\n          window.location = \"/profil\";\r\n          notifySuccess();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard>\r\n            <MDBCardBody>\r\n              <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\r\n                <p className=\"h4 text-center py-4\">Mot de passe oublié</p>\r\n                <div className=\"grey-text\">\r\n                  <MDBInput\r\n                    label=\"email\"\r\n                    icon=\"envelope\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                  />\r\n                  <div className=\"email error\"></div>\r\n                </div>\r\n                <div className=\"text-center py-4 mt-3\">\r\n                  <button\r\n                    className=\"btn waves-effect waves-light\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Reinitialiser\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              <ToastContainer\r\n                position=\"top-right\"\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n              />\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default Forgot;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\index.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Index_admin.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Index_pro.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Logout.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\Reset.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignInAdminForm.js",[],"C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignInForm.js",["1404","1405","1406"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBCard,\n  MDBCardBody,\n} from \"mdbreact\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignInForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const emailError = document.querySelector(\".email.error\");\n    const passwordError = document.querySelector(\".password.error\");\n    const roleError = document.querySelector(\".role.error\");\n    const validationError = document.querySelector(\".validation.error\");\n\n    axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_API_URL}api/user/login`,\n      withCredentials: true,\n      data: {\n        email,\n        password,\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        if (res.data.errors) {\n          emailError.innerHTML = res.data.errors.email;\n          passwordError.innerHTML = res.data.errors.password;\n          roleError.innerHTML = res.data.errors.role;\n          validationError.innerHTML = res.data.errors.validation;\n        } else {\n          window.location = \"/home\";\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <MDBCard>\n        <MDBCardBody>\n          <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\n            <p className=\"text-center py-4\">Connexion locataire</p>\n            <div className=\"grey-text\">\n              <MDBInput\n                htmlFor=\"email\"\n                label=\"Email\"\n                icon=\"envelope\"\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n              />\n              <div className=\"email error\"></div>\n              <div className=\"role error\"></div>\n              <div className=\"validation error\"></div>\n              <MDBInput\n                htmlFor=\"password\"\n                label=\"Mot de passe\"\n                icon=\"lock\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n              />\n              <div className=\"password error\"></div>\n            </div>\n            <button className=\"btn waves-effect waves-light\" type=\"submit\">\n              Se connecter\n            </button>\n            <div className=\"text-right py-4 mt-3\">\n              <NavLink to=\"/forgot\">Mot de passe oublié</NavLink>\n            </div>\n          </form>\n        </MDBCardBody>\n      </MDBCard>\n    </>\n  );\n};\n\nexport default SignInForm;\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignInProForm.js",["1407","1408","1409"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n} from \"mdbreact\";\r\n\r\nconst SignInProForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n    const roleError = document.querySelector(\".role.error\");\r\n    const validationError = document.querySelector(\".validation.error\");\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_API_URL}api/user/loginpro`,\r\n      withCredentials: true,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.errors) {\r\n          emailError.innerHTML = res.data.errors.email;\r\n          passwordError.innerHTML = res.data.errors.password;\r\n          roleError.innerHTML = res.data.errors.role;\r\n          validationError.innerHTML = res.data.errors.validation;\r\n        } else {\r\n          window.location = \"/newpost\";\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MDBCard>\r\n      <MDBCardBody>\r\n        <form action=\"\" onSubmit={handleLogin} id=\"sign-up-form\">\r\n          <p className=\"text-center py-4\">Connexion propriétaire</p>\r\n          <div className=\"grey-text\">\r\n            <MDBInput\r\n              label=\"email\"\r\n              icon=\"envelope\"\r\n              type=\"text\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n            <div className=\"email error\"></div>\r\n            <div className=\"role error\"></div>\r\n            <div className=\"validation error\"></div>\r\n            <MDBInput\r\n              label=\"password\"\r\n              icon=\"lock\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n            <div className=\"password error\"></div>\r\n          </div>\r\n          <button class=\"btn waves-effect waves-light\" type=\"submit\">\r\n            Se connecter\r\n          </button>\r\n          <div className=\"text-right py-4 mt-3\">\r\n            <a href=\"/forgot\" rel=\"noopener noreferrer\">\r\n              Mot de passe oublié\r\n            </a>\r\n          </div>\r\n        </form>\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n  );\r\n};\r\n\r\nexport default SignInProForm;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignUpAdminForm.js",["1410","1411","1412"],"import React, { lazy, useState, Suspense } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBModalFooter,\r\n} from \"mdbreact\";\r\n\r\nconst SignInAdminForm = lazy(() => import(\"./SignInAdminForm\"));\r\n\r\nconst SignUpAdminForm = () => {\r\n  const [formSubmit, setFormSubmit] = useState(false);\r\n  const [pseudo, setPseudo] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [controlPassword, setControlPassword] = useState(\"\");\r\n\r\n  const renderLoader = () => <p>Loading</p>;\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const terms = document.getElementById(\"terms\");\r\n    const pseudoError = document.querySelector(\".pseudo.error\");\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n    const passwordConfirmError = document.querySelector(\r\n      \".password-confirm.error\"\r\n    );\r\n    const termsError = document.querySelector(\".terms.error\");\r\n\r\n    passwordConfirmError.innerHTML = \"\";\r\n    termsError.innerHTML = \"\";\r\n\r\n    if (password !== controlPassword || !terms.checked) {\r\n      if (password !== controlPassword)\r\n        passwordConfirmError.innerHTML =\r\n          \"Les mots de passe ne correspondent pas\";\r\n\r\n      if (!terms.checked)\r\n        termsError.innerHTML = \"Veuillez valider les conditions générales\";\r\n    } else {\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_API_URL}api/user/register`,\r\n        data: {\r\n          pseudo,\r\n          email,\r\n          password,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.errors) {\r\n            pseudoError.innerHTML = res.data.errors.pseudo;\r\n            emailError.innerHTML = res.data.errors.email;\r\n            passwordError.innerHTML = res.data.errors.password;\r\n          } else {\r\n            setFormSubmit(true);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={renderLoader()}>\r\n        {formSubmit ? (\r\n          <>\r\n            <h4 className=\"success\">\r\n              Enregistrement réussi, veuillez-vous connecter!\r\n            </h4>\r\n            <SignInAdminForm />\r\n            <span></span>\r\n          </>\r\n        ) : (\r\n          <MDBCard>\r\n            <MDBCardBody>\r\n              <form action=\"\" onSubmit={handleRegister} id=\"sign-up-form\">\r\n                <p className=\"text-center py-4\">Enregistrement propriétaire</p>\r\n                <div className=\"grey-text\">\r\n                  <MDBInput\r\n                    htmlFor=\"pseudo\"\r\n                    label=\"Pseudo\"\r\n                    icon=\"user\"\r\n                    type=\"text\"\r\n                    name=\"pseudo\"\r\n                    id=\"pseudo\"\r\n                    onChange={(e) => setPseudo(e.target.value)}\r\n                    value={pseudo}\r\n                  />\r\n                  <div className=\"pseudo error\"></div>\r\n                  <MDBInput\r\n                    htmlFor=\"email\"\r\n                    label=\"Email\"\r\n                    icon=\"envelope\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                  />\r\n                  <div className=\"email error\"></div>\r\n                  <MDBInput\r\n                    htmlFor=\"password\"\r\n                    label=\"Mot de passe\"\r\n                    icon=\"lock\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                  />\r\n                  <div className=\"password error\"></div>\r\n                  <MDBInput\r\n                    htmlFor=\"password-conf\"\r\n                    label=\"Confirmation mot de passe\"\r\n                    icon=\"exclamation-triangle\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password-conf\"\r\n                    onChange={(e) => setControlPassword(e.target.value)}\r\n                    value={controlPassword}\r\n                  />\r\n                  <div className=\"password-confirm error\"></div>\r\n                  <br />\r\n                  <input type=\"checkbox\" id=\"terms\" checked />\r\n                  <label htmlFor=\"terms\">\r\n                    {\"  \"} J'accepte les{\" \"}\r\n                    <a href=\"/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      conditions générales\r\n                    </a>\r\n                  </label>\r\n                  <div className=\"terms error\"></div>\r\n                </div>\r\n                <div className=\"text-center py-4 mt-3\">\r\n                  <button class=\"btn waves-effect waves-light\" type=\"submit\">\r\n                    Valider inscription\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              <MDBModalFooter>\r\n                <div className=\"font-weight-light\">\r\n                  <p>\r\n                    Yet member? <a href=\"/\">Sign in</a>{\" \"}\r\n                  </p>\r\n                </div>\r\n              </MDBModalFooter>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        )}\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpAdminForm;\r\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignUpForm.js",["1413","1414","1415"],"import React, { useState, lazy, Suspense } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBCard,\n  MDBCardBody,\n} from \"mdbreact\";\nimport Recaptcha from \"react-recaptcha\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SignInForm = lazy(() => import(\"./SignInForm\"));\n\nconst SignUpForm = () => {\n  const [formSubmit, setFormSubmit] = useState(false);\n  const [verify, setVerify] = useState(false);\n  const [pseudo, setPseudo] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [controlPassword, setControlPassword] = useState(\"\");\n  const [tel, setTel] = useState(\"\");\n  const role = \"client\";\n\n  const renderLoader = () => <p>Loading</p>;\n\n  const verifyCallback = (res) => {\n    setVerify(true);\n  };\n\n  const notifySuccess = () => {\n    toast(\n      \"Un mail de confirmation vous a été envoyé, veuillez consulter votre boite mail!\",\n      {\n        position: \"top-right\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    const terms = document.getElementById(\"terms\");\n    const pseudoError = document.querySelector(\".pseudo.error\");\n    const emailError = document.querySelector(\".email.error\");\n    const telError = document.querySelector(\".tel.error\");\n    const passwordError = document.querySelector(\".password.error\");\n    const passwordConfirmError = document.querySelector(\n      \".password-confirm.error\"\n    );\n    const termsError = document.querySelector(\".terms.error\");\n\n    passwordConfirmError.innerHTML = \"\";\n    termsError.innerHTML = \"\";\n\n    if (password !== controlPassword || !terms.checked) {\n      if (password !== controlPassword)\n        passwordConfirmError.innerHTML =\n          \"Les mots de passe ne correspondent pas\";\n\n      if (!terms.checked)\n        termsError.innerHTML = \"Veuillez valider les conditions générales\";\n    } else {\n      await axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_API_URL}api/user/register`,\n        data: {\n          pseudo,\n          email,\n          tel,\n          password,\n          role,\n        },\n      })\n        .then((res) => {\n          console.log(res);\n          if (res.data.errors) {\n            pseudoError.innerHTML = res.data.errors.pseudo;\n            emailError.innerHTML = res.data.errors.email;\n            telError.innerHTML = res.data.errors.tel;\n            passwordError.innerHTML = res.data.errors.password;\n          } else {\n            setFormSubmit(true);\n            notifySuccess();\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const recaptchaLoaded = () => {\n    console.log(\"reussi\");\n  };\n\n  return (\n    <>\n      <Suspense fallback={renderLoader()}>\n        {formSubmit ? (\n          <>\n            <SignInForm />\n            <ToastContainer\n              position=\"top-right\"\n              hideProgressBar={false}\n              newestOnTop\n              closeOnClick\n              rtl={false}\n              pauseOnFocusLoss\n              draggable\n              pauseOnHover\n            />\n            <span></span>\n          </>\n        ) : (\n          <MDBCard>\n            <MDBCardBody>\n              <form action=\"\" onSubmit={handleRegister} id=\"sign-up-form\">\n                <p className=\"text-center py-4\">Enregistrement locataire</p>\n                <div className=\"grey-text\">\n                  <MDBInput\n                    htmlFor=\"pseudo\"\n                    label=\"Pseudo\"\n                    icon=\"user\"\n                    type=\"text\"\n                    name=\"pseudo\"\n                    id=\"pseudo\"\n                    onChange={(e) => setPseudo(e.target.value)}\n                    value={pseudo}\n                  />\n                  <div className=\"pseudo error\"></div>\n                  <MDBInput\n                    htmlFor=\"email\"\n                    label=\"Email\"\n                    icon=\"envelope\"\n                    type=\"text\"\n                    name=\"email\"\n                    id=\"email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    value={email}\n                  />\n                  <div className=\"email error\"></div>\n                  <MDBInput\n                    htmlFor=\"tel\"\n                    label=\"Téléphone (préciser l'indicatif du pays)\"\n                    icon=\"phone\"\n                    type=\"number\"\n                    name=\"tel\"\n                    id=\"tel\"\n                    onChange={(e) => setTel(e.target.value)}\n                    value={tel}\n                  />\n                  <div className=\"tel error\"></div>\n                  <MDBInput\n                    htmlFor=\"password\"\n                    label=\"Mot de passe\"\n                    icon=\"lock\"\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    value={password}\n                  />\n                  <div className=\"password error\"></div>\n                  <MDBInput\n                    htmlFor=\"password-conf\"\n                    label=\"Confirmation mot de passe\"\n                    icon=\"exclamation-triangle\"\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password-conf\"\n                    onChange={(e) => setControlPassword(e.target.value)}\n                    value={controlPassword}\n                  />\n                  <div className=\"password-confirm error\"></div>\n                  <br />\n                  <p>\n                    <label>\n                      <input type=\"checkbox\" id=\"terms\" checked />\n                      <span>\n                        {\"  \"} En créant un compte, vous acceptez nos{\" \"}\n                        <a\n                          href=\"/conditions\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          conditions générales\n                        </a>\n                      </span>\n                    </label>\n                  </p>\n                  <div className=\"terms error\"></div>\n                </div>\n                <div className=\"font-weight-light\">\n                  <Recaptcha\n                    required\n                    sitekey=\"6Le2EYkaAAAAADc5n5rxwdOfQ9NnAEFIbwQJEajb\"\n                    render=\"explicit\"\n                    verifyCallback={verifyCallback}\n                    onloadCallback={recaptchaLoaded}\n                  />\n                </div>\n                <div className=\"text-center py-4 mt-3\">\n                  {verify ? (\n                    <button\n                      className=\"btn waves-effect waves-light\"\n                      type=\"submit\"\n                    >\n                      Valider inscription\n                    </button>\n                  ) : (\n                    <div></div>\n                  )}\n                </div>\n              </form>\n            </MDBCardBody>\n          </MDBCard>\n        )}\n      </Suspense>\n    </>\n  );\n};\n\nexport default SignUpForm;\n","C:\\Users\\user\\Desktop\\atypiklast\\client\\src\\components\\Log\\SignUpProForm.js",["1416","1417","1418"],"import React, { lazy, useState, Suspense } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n} from \"mdbreact\";\r\nimport Recaptcha from \"react-recaptcha\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst SignInProForm = lazy(() => import(\"./SignInProForm\"));\r\n\r\nconst SignUpProForm = () => {\r\n  const [formSubmit, setFormSubmit] = useState(false);\r\n  const [verify, setVerify] = useState(false);\r\n  const [pseudo, setPseudo] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [controlPassword, setControlPassword] = useState(\"\");\r\n  const [tel, setTel] = useState(\"\");\r\n  const role = \"propriétaire\";\r\n\r\n  const recaptchaLoaded = () => {\r\n    console.log(\"reussi\");\r\n  };\r\n\r\n  const renderLoader = () => <p>Loading</p>;\r\n\r\n  const verifyCallback = (res) => {\r\n    setVerify(true);\r\n  };\r\n\r\n  const notifySuccess = () => {\r\n    toast(\r\n      \"Un mail de confirmation vous a été envoyé, veuillez consulter votre boite mail!\",\r\n      {\r\n        position: \"top-right\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const terms = document.getElementById(\"terms\");\r\n    const pseudoError = document.querySelector(\".pseudo.error\");\r\n    const emailError = document.querySelector(\".email.error\");\r\n    const telError = document.querySelector(\".tel.error\");\r\n    const passwordError = document.querySelector(\".password.error\");\r\n    const passwordConfirmError = document.querySelector(\r\n      \".password-confirm.error\"\r\n    );\r\n    const termsError = document.querySelector(\".terms.error\");\r\n\r\n    passwordConfirmError.innerHTML = \"\";\r\n    termsError.innerHTML = \"\";\r\n\r\n    if (password !== controlPassword || !terms.checked) {\r\n      if (password !== controlPassword)\r\n        passwordConfirmError.innerHTML =\r\n          \"Les mots de passe ne correspondent pas\";\r\n\r\n      if (!terms.checked)\r\n        termsError.innerHTML = \"Veuillez valider les conditions générales\";\r\n    } else {\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_API_URL}api/user/register`,\r\n        data: {\r\n          pseudo,\r\n          email,\r\n          tel,\r\n          password,\r\n          role,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.errors) {\r\n            pseudoError.innerHTML = res.data.errors.pseudo;\r\n            emailError.innerHTML = res.data.errors.email;\r\n            telError.innerHTML = res.data.errors.tel;\r\n            passwordError.innerHTML = res.data.errors.password;\r\n          } else {\r\n            setFormSubmit(true);\r\n            notifySuccess();\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={renderLoader()}>\r\n        {formSubmit ? (\r\n          <>\r\n            <>\r\n              <SignInProForm />\r\n              <ToastContainer\r\n                position=\"top-right\"\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n              />\r\n              <span></span>\r\n            </>\r\n          </>\r\n        ) : (\r\n          <MDBCard>\r\n            <MDBCardBody>\r\n              <form action=\"\" onSubmit={handleRegister} id=\"sign-up-form\">\r\n                <p className=\"text-center py-4\">Enregistrement propriétaire</p>\r\n                <div className=\"grey-text\">\r\n                  <MDBInput\r\n                    htmlFor=\"pseudo\"\r\n                    label=\"Pseudo\"\r\n                    icon=\"user\"\r\n                    type=\"text\"\r\n                    name=\"pseudo\"\r\n                    id=\"pseudo\"\r\n                    onChange={(e) => setPseudo(e.target.value)}\r\n                    value={pseudo}\r\n                  />\r\n                  <div className=\"pseudo error\"></div>\r\n                  <MDBInput\r\n                    htmlFor=\"email\"\r\n                    label=\"Email\"\r\n                    icon=\"envelope\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                  />\r\n                  <div className=\"email error\"></div>\r\n                  <MDBInput\r\n                    htmlFor=\"tel\"\r\n                    label=\"Téléphone (préciser l'indicatif du pays)\"\r\n                    icon=\"phone\"\r\n                    type=\"number\"\r\n                    name=\"tel\"\r\n                    id=\"tel\"\r\n                    onChange={(e) => setTel(e.target.value)}\r\n                    value={tel}\r\n                  />\r\n                  <div className=\"tel error\"></div>\r\n                  <MDBInput\r\n                    htmlFor=\"password\"\r\n                    label=\"Mot de passe\"\r\n                    icon=\"lock\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                  />\r\n                  <div className=\"password error\"></div>\r\n                  <MDBInput\r\n                    htmlFor=\"password-conf\"\r\n                    label=\"Confirmation mot de passe\"\r\n                    icon=\"exclamation-triangle\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password-conf\"\r\n                    onChange={(e) => setControlPassword(e.target.value)}\r\n                    value={controlPassword}\r\n                  />\r\n                  <div className=\"password-confirm error\"></div>\r\n                  <br />\r\n                  <p>\r\n                    <label>\r\n                      <input id=\"terms\" type=\"checkbox\" checked />\r\n                      <span>\r\n                        {\"  \"} En créant un compte, vous acceptez nos{\" \"}\r\n                        <a\r\n                          href=\"/conditions\"\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          conditions générales\r\n                        </a>\r\n                      </span>\r\n                    </label>\r\n                  </p>\r\n                  <div className=\"terms error\"></div>\r\n                </div>\r\n                <div className=\"font-weight-light\">\r\n                  <Recaptcha\r\n                    required\r\n                    sitekey=\"6Le2EYkaAAAAADc5n5rxwdOfQ9NnAEFIbwQJEajb\"\r\n                    render=\"explicit\"\r\n                    verifyCallback={verifyCallback}\r\n                    onloadCallback={recaptchaLoaded}\r\n                  />\r\n                </div>\r\n                <div className=\"text-center py-4 mt-3\">\r\n                  {verify ? (\r\n                    <button\r\n                      className=\"btn waves-effect waves-light\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Valider inscription\r\n                    </button>\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        )}\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpProForm;\r\n",{"ruleId":"1419","replacedBy":"1420"},{"ruleId":"1421","replacedBy":"1422"},{"ruleId":"1423","severity":1,"message":"1424","line":30,"column":9,"nodeType":"1425","messageId":"1426","endLine":30,"endColumn":17},{"ruleId":"1427","severity":1,"message":"1428","line":37,"column":17,"nodeType":"1429","endLine":37,"endColumn":61},{"ruleId":"1430","severity":1,"message":"1431","line":24,"column":29,"nodeType":"1432","messageId":"1433","endLine":24,"endColumn":31},{"ruleId":"1423","severity":1,"message":"1434","line":14,"column":8,"nodeType":"1425","messageId":"1426","endLine":14,"endColumn":13},{"ruleId":"1423","severity":1,"message":"1435","line":22,"column":11,"nodeType":"1425","messageId":"1426","endLine":22,"endColumn":14},{"ruleId":"1430","severity":1,"message":"1431","line":56,"column":54,"nodeType":"1432","messageId":"1433","endLine":56,"endColumn":56},{"ruleId":"1423","severity":1,"message":"1436","line":24,"column":12,"nodeType":"1425","messageId":"1426","endLine":24,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1431","line":171,"column":68,"nodeType":"1432","messageId":"1433","endLine":171,"endColumn":70},{"ruleId":"1430","severity":1,"message":"1431","line":269,"column":72,"nodeType":"1432","messageId":"1433","endLine":269,"endColumn":74},{"ruleId":"1430","severity":1,"message":"1431","line":24,"column":63,"nodeType":"1432","messageId":"1433","endLine":24,"endColumn":65},{"ruleId":"1430","severity":1,"message":"1431","line":57,"column":54,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":70,"column":70,"nodeType":"1432","messageId":"1433","endLine":70,"endColumn":72},{"ruleId":"1430","severity":1,"message":"1437","line":72,"column":60,"nodeType":"1438","messageId":"1439","endLine":72,"endColumn":66},{"ruleId":"1430","severity":1,"message":"1431","line":58,"column":54,"nodeType":"1432","messageId":"1433","endLine":58,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":34,"column":28,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":36,"column":32,"nodeType":"1432","messageId":"1433","endLine":36,"endColumn":34},{"ruleId":"1430","severity":1,"message":"1431","line":35,"column":28,"nodeType":"1432","messageId":"1433","endLine":35,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":35,"column":28,"nodeType":"1432","messageId":"1433","endLine":35,"endColumn":30},{"ruleId":"1440","severity":1,"message":"1441","line":64,"column":5,"nodeType":"1442","messageId":"1443","endLine":69,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":65,"column":28,"nodeType":"1432","messageId":"1444","endLine":65,"endColumn":30},{"ruleId":"1440","severity":1,"message":"1441","line":74,"column":5,"nodeType":"1442","messageId":"1443","endLine":79,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":75,"column":28,"nodeType":"1432","messageId":"1444","endLine":75,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1437","line":80,"column":41,"nodeType":"1432","messageId":"1444","endLine":80,"endColumn":43},{"ruleId":"1440","severity":1,"message":"1441","line":92,"column":5,"nodeType":"1442","messageId":"1443","endLine":97,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":93,"column":28,"nodeType":"1432","messageId":"1444","endLine":93,"endColumn":30},{"ruleId":"1440","severity":1,"message":"1441","line":229,"column":5,"nodeType":"1442","messageId":"1443","endLine":233,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1431","line":244,"column":42,"nodeType":"1432","messageId":"1433","endLine":244,"endColumn":44},{"ruleId":"1423","severity":1,"message":"1445","line":278,"column":9,"nodeType":"1425","messageId":"1426","endLine":278,"endColumn":20},{"ruleId":"1430","severity":1,"message":"1431","line":59,"column":28,"nodeType":"1432","messageId":"1433","endLine":59,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":84,"column":26,"nodeType":"1432","messageId":"1433","endLine":84,"endColumn":28},{"ruleId":"1423","severity":1,"message":"1436","line":11,"column":10,"nodeType":"1425","messageId":"1426","endLine":11,"endColumn":19},{"ruleId":"1423","severity":1,"message":"1446","line":26,"column":10,"nodeType":"1425","messageId":"1426","endLine":26,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1447","line":183,"column":45,"nodeType":"1432","messageId":"1433","endLine":183,"endColumn":47},{"ruleId":"1423","severity":1,"message":"1436","line":18,"column":10,"nodeType":"1425","messageId":"1426","endLine":18,"endColumn":19},{"ruleId":"1423","severity":1,"message":"1448","line":24,"column":20,"nodeType":"1425","messageId":"1426","endLine":24,"endColumn":31},{"ruleId":"1440","severity":1,"message":"1441","line":41,"column":5,"nodeType":"1442","messageId":"1443","endLine":46,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":42,"column":28,"nodeType":"1432","messageId":"1444","endLine":42,"endColumn":30},{"ruleId":"1423","severity":1,"message":"1449","line":103,"column":15,"nodeType":"1425","messageId":"1426","endLine":103,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1437","line":104,"column":43,"nodeType":"1432","messageId":"1444","endLine":104,"endColumn":45},{"ruleId":"1430","severity":1,"message":"1437","line":198,"column":41,"nodeType":"1432","messageId":"1444","endLine":198,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1431","line":278,"column":60,"nodeType":"1432","messageId":"1433","endLine":278,"endColumn":62},{"ruleId":"1430","severity":1,"message":"1431","line":304,"column":48,"nodeType":"1432","messageId":"1433","endLine":304,"endColumn":50},{"ruleId":"1423","severity":1,"message":"1450","line":6,"column":10,"nodeType":"1425","messageId":"1426","endLine":6,"endColumn":16},{"ruleId":"1423","severity":1,"message":"1451","line":75,"column":7,"nodeType":"1425","messageId":"1426","endLine":75,"endColumn":13},{"ruleId":"1423","severity":1,"message":"1450","line":6,"column":10,"nodeType":"1425","messageId":"1426","endLine":6,"endColumn":16},{"ruleId":"1423","severity":1,"message":"1451","line":75,"column":7,"nodeType":"1425","messageId":"1426","endLine":75,"endColumn":13},{"ruleId":"1423","severity":1,"message":"1452","line":1,"column":34,"nodeType":"1425","messageId":"1426","endLine":1,"endColumn":43},{"ruleId":"1423","severity":1,"message":"1450","line":3,"column":10,"nodeType":"1425","messageId":"1426","endLine":3,"endColumn":16},{"ruleId":"1423","severity":1,"message":"1453","line":7,"column":8,"nodeType":"1425","messageId":"1426","endLine":7,"endColumn":18},{"ruleId":"1423","severity":1,"message":"1454","line":95,"column":7,"nodeType":"1425","messageId":"1426","endLine":95,"endColumn":12},{"ruleId":"1430","severity":1,"message":"1431","line":76,"column":43,"nodeType":"1432","messageId":"1433","endLine":76,"endColumn":45},{"ruleId":"1430","severity":1,"message":"1431","line":34,"column":28,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":84,"column":42,"nodeType":"1432","messageId":"1433","endLine":84,"endColumn":44},{"ruleId":"1440","severity":1,"message":"1441","line":21,"column":5,"nodeType":"1442","messageId":"1443","endLine":44,"endColumn":8},{"ruleId":"1430","severity":1,"message":"1431","line":21,"column":33,"nodeType":"1432","messageId":"1433","endLine":21,"endColumn":35},{"ruleId":"1423","severity":1,"message":"1455","line":9,"column":16,"nodeType":"1425","messageId":"1426","endLine":9,"endColumn":23},{"ruleId":"1423","severity":1,"message":"1456","line":4,"column":10,"nodeType":"1425","messageId":"1426","endLine":4,"endColumn":20},{"ruleId":"1430","severity":1,"message":"1431","line":55,"column":54,"nodeType":"1432","messageId":"1433","endLine":55,"endColumn":56},{"ruleId":"1419","replacedBy":"1457"},{"ruleId":"1421","replacedBy":"1458"},{"ruleId":"1423","severity":1,"message":"1424","line":30,"column":9,"nodeType":"1425","messageId":"1426","endLine":30,"endColumn":17},{"ruleId":"1427","severity":1,"message":"1428","line":37,"column":17,"nodeType":"1429","endLine":37,"endColumn":61},{"ruleId":"1430","severity":1,"message":"1431","line":24,"column":29,"nodeType":"1432","messageId":"1433","endLine":24,"endColumn":31},{"ruleId":"1423","severity":1,"message":"1434","line":14,"column":8,"nodeType":"1425","messageId":"1426","endLine":14,"endColumn":13},{"ruleId":"1423","severity":1,"message":"1435","line":22,"column":11,"nodeType":"1425","messageId":"1426","endLine":22,"endColumn":14},{"ruleId":"1423","severity":1,"message":"1436","line":24,"column":12,"nodeType":"1425","messageId":"1426","endLine":24,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1431","line":171,"column":68,"nodeType":"1432","messageId":"1433","endLine":171,"endColumn":70},{"ruleId":"1430","severity":1,"message":"1431","line":269,"column":72,"nodeType":"1432","messageId":"1433","endLine":269,"endColumn":74},{"ruleId":"1430","severity":1,"message":"1431","line":56,"column":54,"nodeType":"1432","messageId":"1433","endLine":56,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":57,"column":54,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":70,"column":70,"nodeType":"1432","messageId":"1433","endLine":70,"endColumn":72},{"ruleId":"1430","severity":1,"message":"1437","line":72,"column":60,"nodeType":"1438","messageId":"1439","endLine":72,"endColumn":66},{"ruleId":"1423","severity":1,"message":"1456","line":4,"column":10,"nodeType":"1425","messageId":"1426","endLine":4,"endColumn":20},{"ruleId":"1430","severity":1,"message":"1431","line":55,"column":54,"nodeType":"1432","messageId":"1433","endLine":55,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":24,"column":63,"nodeType":"1432","messageId":"1433","endLine":24,"endColumn":65},{"ruleId":"1430","severity":1,"message":"1431","line":58,"column":54,"nodeType":"1432","messageId":"1433","endLine":58,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":34,"column":28,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":36,"column":32,"nodeType":"1432","messageId":"1433","endLine":36,"endColumn":34},{"ruleId":"1430","severity":1,"message":"1431","line":35,"column":28,"nodeType":"1432","messageId":"1433","endLine":35,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":35,"column":28,"nodeType":"1432","messageId":"1433","endLine":35,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":59,"column":28,"nodeType":"1432","messageId":"1433","endLine":59,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":84,"column":26,"nodeType":"1432","messageId":"1433","endLine":84,"endColumn":28},{"ruleId":"1440","severity":1,"message":"1441","line":64,"column":5,"nodeType":"1442","messageId":"1443","endLine":69,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":65,"column":28,"nodeType":"1432","messageId":"1444","endLine":65,"endColumn":30},{"ruleId":"1440","severity":1,"message":"1441","line":74,"column":5,"nodeType":"1442","messageId":"1443","endLine":79,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":75,"column":28,"nodeType":"1432","messageId":"1444","endLine":75,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1437","line":80,"column":41,"nodeType":"1432","messageId":"1444","endLine":80,"endColumn":43},{"ruleId":"1440","severity":1,"message":"1441","line":92,"column":5,"nodeType":"1442","messageId":"1443","endLine":97,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":93,"column":28,"nodeType":"1432","messageId":"1444","endLine":93,"endColumn":30},{"ruleId":"1440","severity":1,"message":"1441","line":230,"column":5,"nodeType":"1442","messageId":"1443","endLine":234,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1431","line":245,"column":42,"nodeType":"1432","messageId":"1433","endLine":245,"endColumn":44},{"ruleId":"1423","severity":1,"message":"1445","line":279,"column":9,"nodeType":"1425","messageId":"1426","endLine":279,"endColumn":20},{"ruleId":"1423","severity":1,"message":"1436","line":18,"column":10,"nodeType":"1425","messageId":"1426","endLine":18,"endColumn":19},{"ruleId":"1423","severity":1,"message":"1448","line":24,"column":20,"nodeType":"1425","messageId":"1426","endLine":24,"endColumn":31},{"ruleId":"1440","severity":1,"message":"1441","line":41,"column":5,"nodeType":"1442","messageId":"1443","endLine":46,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":42,"column":28,"nodeType":"1432","messageId":"1444","endLine":42,"endColumn":30},{"ruleId":"1423","severity":1,"message":"1449","line":103,"column":15,"nodeType":"1425","messageId":"1426","endLine":103,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1437","line":104,"column":43,"nodeType":"1432","messageId":"1444","endLine":104,"endColumn":45},{"ruleId":"1430","severity":1,"message":"1437","line":198,"column":41,"nodeType":"1432","messageId":"1444","endLine":198,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1431","line":278,"column":60,"nodeType":"1432","messageId":"1433","endLine":278,"endColumn":62},{"ruleId":"1430","severity":1,"message":"1431","line":304,"column":48,"nodeType":"1432","messageId":"1433","endLine":304,"endColumn":50},{"ruleId":"1423","severity":1,"message":"1436","line":11,"column":10,"nodeType":"1425","messageId":"1426","endLine":11,"endColumn":19},{"ruleId":"1423","severity":1,"message":"1446","line":26,"column":10,"nodeType":"1425","messageId":"1426","endLine":26,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1447","line":183,"column":45,"nodeType":"1432","messageId":"1433","endLine":183,"endColumn":47},{"ruleId":"1423","severity":1,"message":"1450","line":6,"column":10,"nodeType":"1425","messageId":"1426","endLine":6,"endColumn":16},{"ruleId":"1423","severity":1,"message":"1459","line":9,"column":10,"nodeType":"1425","messageId":"1426","endLine":9,"endColumn":21},{"ruleId":"1423","severity":1,"message":"1451","line":75,"column":7,"nodeType":"1425","messageId":"1426","endLine":75,"endColumn":13},{"ruleId":"1423","severity":1,"message":"1450","line":6,"column":10,"nodeType":"1425","messageId":"1426","endLine":6,"endColumn":16},{"ruleId":"1423","severity":1,"message":"1451","line":75,"column":7,"nodeType":"1425","messageId":"1426","endLine":75,"endColumn":13},{"ruleId":"1430","severity":1,"message":"1431","line":76,"column":43,"nodeType":"1432","messageId":"1433","endLine":76,"endColumn":45},{"ruleId":"1423","severity":1,"message":"1452","line":1,"column":34,"nodeType":"1425","messageId":"1426","endLine":1,"endColumn":43},{"ruleId":"1423","severity":1,"message":"1450","line":3,"column":10,"nodeType":"1425","messageId":"1426","endLine":3,"endColumn":16},{"ruleId":"1423","severity":1,"message":"1453","line":7,"column":8,"nodeType":"1425","messageId":"1426","endLine":7,"endColumn":18},{"ruleId":"1423","severity":1,"message":"1454","line":95,"column":7,"nodeType":"1425","messageId":"1426","endLine":95,"endColumn":12},{"ruleId":"1430","severity":1,"message":"1431","line":34,"column":28,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":84,"column":42,"nodeType":"1432","messageId":"1433","endLine":84,"endColumn":44},{"ruleId":"1440","severity":1,"message":"1441","line":21,"column":5,"nodeType":"1442","messageId":"1443","endLine":44,"endColumn":8},{"ruleId":"1430","severity":1,"message":"1431","line":21,"column":33,"nodeType":"1432","messageId":"1433","endLine":21,"endColumn":35},{"ruleId":"1423","severity":1,"message":"1455","line":9,"column":16,"nodeType":"1425","messageId":"1426","endLine":9,"endColumn":23},{"ruleId":"1423","severity":1,"message":"1460","line":2,"column":8,"nodeType":"1425","messageId":"1426","endLine":2,"endColumn":16},{"ruleId":"1419","replacedBy":"1461"},{"ruleId":"1421","replacedBy":"1462"},{"ruleId":"1423","severity":1,"message":"1424","line":37,"column":9,"nodeType":"1425","messageId":"1426","endLine":37,"endColumn":17},{"ruleId":"1427","severity":1,"message":"1428","line":33,"column":23,"nodeType":"1429","messageId":"1463","endLine":33,"endColumn":67},{"ruleId":"1430","severity":1,"message":"1431","line":24,"column":29,"nodeType":"1432","messageId":"1433","endLine":24,"endColumn":31},{"ruleId":"1423","severity":1,"message":"1435","line":10,"column":9,"nodeType":"1425","messageId":"1426","endLine":10,"endColumn":12},{"ruleId":"1423","severity":1,"message":"1436","line":22,"column":10,"nodeType":"1425","messageId":"1426","endLine":22,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":186,"column":50,"nodeType":"1432","messageId":"1433","endLine":186,"endColumn":52},{"ruleId":"1430","severity":1,"message":"1431","line":326,"column":54,"nodeType":"1432","messageId":"1433","endLine":326,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":53,"column":42,"nodeType":"1432","messageId":"1433","endLine":53,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1431","line":53,"column":42,"nodeType":"1432","messageId":"1433","endLine":53,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1431","line":71,"column":50,"nodeType":"1432","messageId":"1433","endLine":71,"endColumn":52},{"ruleId":"1430","severity":1,"message":"1437","line":73,"column":37,"nodeType":"1438","messageId":"1439","endLine":73,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1431","line":51,"column":42,"nodeType":"1432","messageId":"1433","endLine":51,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1431","line":28,"column":43,"nodeType":"1432","messageId":"1433","endLine":28,"endColumn":45},{"ruleId":"1430","severity":1,"message":"1431","line":54,"column":42,"nodeType":"1432","messageId":"1433","endLine":54,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1431","line":34,"column":28,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":36,"column":32,"nodeType":"1432","messageId":"1433","endLine":36,"endColumn":34},{"ruleId":"1430","severity":1,"message":"1431","line":35,"column":28,"nodeType":"1432","messageId":"1433","endLine":35,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":35,"column":28,"nodeType":"1432","messageId":"1433","endLine":35,"endColumn":30},{"ruleId":"1423","severity":1,"message":"1451","line":88,"column":7,"nodeType":"1425","messageId":"1426","endLine":88,"endColumn":13},{"ruleId":"1423","severity":1,"message":"1451","line":89,"column":7,"nodeType":"1425","messageId":"1426","endLine":89,"endColumn":13},{"ruleId":"1423","severity":1,"message":"1424","line":101,"column":9,"nodeType":"1425","messageId":"1426","endLine":101,"endColumn":17},{"ruleId":"1423","severity":1,"message":"1451","line":89,"column":7,"nodeType":"1425","messageId":"1426","endLine":89,"endColumn":13},{"ruleId":"1430","severity":1,"message":"1431","line":72,"column":41,"nodeType":"1432","messageId":"1433","endLine":72,"endColumn":43},{"ruleId":"1423","severity":1,"message":"1452","line":1,"column":35,"nodeType":"1425","messageId":"1426","endLine":1,"endColumn":44},{"ruleId":"1423","severity":1,"message":"1464","line":3,"column":10,"nodeType":"1425","messageId":"1426","endLine":3,"endColumn":31},{"ruleId":"1465","severity":1,"message":"1466","line":14,"column":17,"nodeType":"1429","endLine":14,"endColumn":56},{"ruleId":"1465","severity":1,"message":"1466","line":20,"column":17,"nodeType":"1429","endLine":20,"endColumn":56},{"ruleId":"1465","severity":1,"message":"1466","line":26,"column":17,"nodeType":"1429","endLine":26,"endColumn":56},{"ruleId":"1465","severity":1,"message":"1466","line":51,"column":17,"nodeType":"1429","endLine":51,"endColumn":56},{"ruleId":"1465","severity":1,"message":"1466","line":57,"column":17,"nodeType":"1429","endLine":57,"endColumn":56},{"ruleId":"1465","severity":1,"message":"1466","line":63,"column":17,"nodeType":"1429","endLine":63,"endColumn":56},{"ruleId":"1465","severity":1,"message":"1466","line":75,"column":17,"nodeType":"1429","endLine":75,"endColumn":56},{"ruleId":"1465","severity":1,"message":"1466","line":81,"column":17,"nodeType":"1429","endLine":81,"endColumn":56},{"ruleId":"1465","severity":1,"message":"1466","line":87,"column":17,"nodeType":"1429","endLine":87,"endColumn":56},{"ruleId":"1465","severity":1,"message":"1466","line":93,"column":17,"nodeType":"1429","endLine":93,"endColumn":56},{"ruleId":"1423","severity":1,"message":"1467","line":3,"column":8,"nodeType":"1425","messageId":"1426","endLine":3,"endColumn":21},{"ruleId":"1423","severity":1,"message":"1468","line":9,"column":9,"nodeType":"1425","messageId":"1426","endLine":9,"endColumn":14},{"ruleId":"1423","severity":1,"message":"1435","line":69,"column":9,"nodeType":"1425","messageId":"1426","endLine":69,"endColumn":12},{"ruleId":"1440","severity":1,"message":"1441","line":111,"column":5,"nodeType":"1442","messageId":"1443","endLine":125,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":113,"column":30,"nodeType":"1432","messageId":"1444","endLine":113,"endColumn":32},{"ruleId":"1440","severity":1,"message":"1441","line":138,"column":5,"nodeType":"1442","messageId":"1443","endLine":152,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":140,"column":30,"nodeType":"1432","messageId":"1444","endLine":140,"endColumn":32},{"ruleId":"1430","severity":1,"message":"1437","line":153,"column":41,"nodeType":"1432","messageId":"1444","endLine":153,"endColumn":43},{"ruleId":"1440","severity":1,"message":"1441","line":169,"column":5,"nodeType":"1442","messageId":"1443","endLine":183,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":171,"column":30,"nodeType":"1432","messageId":"1444","endLine":171,"endColumn":32},{"ruleId":"1440","severity":1,"message":"1441","line":427,"column":5,"nodeType":"1442","messageId":"1443","endLine":432,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1431","line":445,"column":36,"nodeType":"1432","messageId":"1433","endLine":445,"endColumn":38},{"ruleId":"1423","severity":1,"message":"1445","line":492,"column":9,"nodeType":"1425","messageId":"1426","endLine":492,"endColumn":20},{"ruleId":"1469","severity":1,"message":"1470","line":591,"column":27,"nodeType":"1471","messageId":"1472","endLine":591,"endColumn":39},{"ruleId":"1430","severity":1,"message":"1431","line":50,"column":32,"nodeType":"1432","messageId":"1433","endLine":50,"endColumn":34},{"ruleId":"1430","severity":1,"message":"1431","line":73,"column":32,"nodeType":"1432","messageId":"1433","endLine":73,"endColumn":34},{"ruleId":"1465","severity":1,"message":"1473","line":103,"column":11,"nodeType":"1429","endLine":103,"endColumn":35},{"ruleId":"1423","severity":1,"message":"1474","line":4,"column":8,"nodeType":"1425","messageId":"1426","endLine":4,"endColumn":22},{"ruleId":"1423","severity":1,"message":"1436","line":29,"column":10,"nodeType":"1425","messageId":"1426","endLine":29,"endColumn":19},{"ruleId":"1423","severity":1,"message":"1448","line":35,"column":20,"nodeType":"1425","messageId":"1426","endLine":35,"endColumn":31},{"ruleId":"1423","severity":1,"message":"1475","line":37,"column":7,"nodeType":"1425","messageId":"1426","endLine":37,"endColumn":13},{"ruleId":"1423","severity":1,"message":"1476","line":38,"column":7,"nodeType":"1425","messageId":"1426","endLine":38,"endColumn":20},{"ruleId":"1430","severity":1,"message":"1437","line":68,"column":41,"nodeType":"1432","messageId":"1444","endLine":68,"endColumn":43},{"ruleId":"1440","severity":1,"message":"1441","line":79,"column":5,"nodeType":"1442","messageId":"1443","endLine":93,"endColumn":6},{"ruleId":"1430","severity":1,"message":"1437","line":81,"column":30,"nodeType":"1432","messageId":"1444","endLine":81,"endColumn":32},{"ruleId":"1430","severity":1,"message":"1437","line":132,"column":41,"nodeType":"1432","messageId":"1444","endLine":132,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1437","line":233,"column":41,"nodeType":"1432","messageId":"1444","endLine":233,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1431","line":344,"column":56,"nodeType":"1432","messageId":"1433","endLine":344,"endColumn":58},{"ruleId":"1430","severity":1,"message":"1431","line":383,"column":42,"nodeType":"1432","messageId":"1433","endLine":383,"endColumn":44},{"ruleId":"1477","severity":1,"message":"1478","line":70,"column":15,"nodeType":"1429","endLine":84,"endColumn":17},{"ruleId":"1423","severity":1,"message":"1436","line":10,"column":10,"nodeType":"1425","messageId":"1426","endLine":10,"endColumn":19},{"ruleId":"1423","severity":1,"message":"1479","line":32,"column":10,"nodeType":"1425","messageId":"1426","endLine":32,"endColumn":24},{"ruleId":"1430","severity":1,"message":"1447","line":216,"column":45,"nodeType":"1432","messageId":"1433","endLine":216,"endColumn":47},{"ruleId":"1469","severity":1,"message":"1470","line":324,"column":25,"nodeType":"1471","messageId":"1472","endLine":324,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1431","line":34,"column":28,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":94,"column":36,"nodeType":"1432","messageId":"1433","endLine":94,"endColumn":38},{"ruleId":"1440","severity":1,"message":"1441","line":20,"column":3,"nodeType":"1442","messageId":"1443","endLine":44,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1431","line":21,"column":32,"nodeType":"1432","messageId":"1433","endLine":21,"endColumn":34},{"ruleId":"1423","severity":1,"message":"1459","line":14,"column":10,"nodeType":"1425","messageId":"1426","endLine":14,"endColumn":21},{"ruleId":"1423","severity":1,"message":"1480","line":5,"column":3,"nodeType":"1425","messageId":"1426","endLine":5,"endColumn":15},{"ruleId":"1423","severity":1,"message":"1481","line":6,"column":3,"nodeType":"1425","messageId":"1426","endLine":6,"endColumn":9},{"ruleId":"1423","severity":1,"message":"1482","line":7,"column":3,"nodeType":"1425","messageId":"1426","endLine":7,"endColumn":9},{"ruleId":"1423","severity":1,"message":"1480","line":5,"column":3,"nodeType":"1425","messageId":"1426","endLine":5,"endColumn":15},{"ruleId":"1423","severity":1,"message":"1481","line":6,"column":3,"nodeType":"1425","messageId":"1426","endLine":6,"endColumn":9},{"ruleId":"1423","severity":1,"message":"1482","line":7,"column":3,"nodeType":"1425","messageId":"1426","endLine":7,"endColumn":9},{"ruleId":"1423","severity":1,"message":"1480","line":5,"column":3,"nodeType":"1425","messageId":"1426","endLine":5,"endColumn":15},{"ruleId":"1423","severity":1,"message":"1481","line":6,"column":3,"nodeType":"1425","messageId":"1426","endLine":6,"endColumn":9},{"ruleId":"1423","severity":1,"message":"1482","line":7,"column":3,"nodeType":"1425","messageId":"1426","endLine":7,"endColumn":9},{"ruleId":"1423","severity":1,"message":"1480","line":5,"column":3,"nodeType":"1425","messageId":"1426","endLine":5,"endColumn":15},{"ruleId":"1423","severity":1,"message":"1481","line":6,"column":3,"nodeType":"1425","messageId":"1426","endLine":6,"endColumn":9},{"ruleId":"1423","severity":1,"message":"1482","line":7,"column":3,"nodeType":"1425","messageId":"1426","endLine":7,"endColumn":9},{"ruleId":"1423","severity":1,"message":"1480","line":5,"column":3,"nodeType":"1425","messageId":"1426","endLine":5,"endColumn":15},{"ruleId":"1423","severity":1,"message":"1481","line":6,"column":3,"nodeType":"1425","messageId":"1426","endLine":6,"endColumn":9},{"ruleId":"1423","severity":1,"message":"1482","line":7,"column":3,"nodeType":"1425","messageId":"1426","endLine":7,"endColumn":9},"no-native-reassign",["1483"],"no-negated-in-lhs",["1484"],"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Index_admin must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Popup' is defined but never used.","'uid' is assigned a value but never used.","'isLoading' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","expectedInside","'refreshPage' is assigned a value but never used.","'postPicture' is assigned a value but never used.","Array.prototype.sort() expects a value to be returned at the end of arrow function.","'setPaiement' is assigned a value but never used.","'status' is assigned a value but never used.","'Button' is defined but never used.","'NavBtn' is assigned a value but never used.","'useEffect' is defined but never used.","'SearchForm' is defined but never used.","'Arrow' is assigned a value but never used.","'setRole' is assigned a value but never used.","'dateParser' is defined but never used.",["1483"],["1484"],"'useSelector' is defined but never used.","'ReactDOM' is defined but never used.",["1483"],["1484"],"usePascalOrSnakeCase","'IoMdArrowRoundForward' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'UpdatePicture' is defined but never used.","'error' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'StripeCheckout' is defined but never used.","'amount' is assigned a value but never used.","'currency_code' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'selectedImages' is assigned a value but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","no-global-assign","no-unsafe-negation"]